{"version":3,"sources":["raw-js/kendo.drawer.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendodrawer","js","this","$","undefined$1","kendo","window","Widget","ui","NS","FOCUSED","keys","PUSH","OVERLAY","LEFT","START","Drawer","extend","init","element","options","userEvents","that","fn","call","_element","_wrapper","_navigatable","position","_mode","mini","_miniMode","_initDrawerItems","mode","_setBodyOffset","UserEvents","document","body","drawerContainer","fastTap","allowSelection","tap","e","contains","drawerItemsWrapper","event","target","_itemClick","autoCollapse","visible","trigger","sender","hide","preventDefault","swipeToOpen","bind","_start","_update","_end","minHeight","css","_showWatermarkOverlay","expanded","_removeTransition","show","contentElement","children","wrapAll","parent","drawerElement","template","addClass","find","first","attr","navigatable","on","_focus","_blur","_keyDown","_current","removeClass","_setCurrent","eq","current","id","guid","next","removeAttr","handled","keyCode","UP","prevAll","length","last","DOWN","nextAll","HOME","END","SPACEBAR","ENTER","noop","ESC","drawerWrapper","wrap","width","append","after","prepend","_addTransition","overlayMiniOffset","outerWidth","leftPositioned","drawerItems","separatorItems","each","i","item","setAttribute","textContent","trim","_selectedItemIndex","overlayContainer","miniWidth","miniTemplate","_miniTemplate","html","minWidth","isExpanded","hasClass","_selectItem","value","Math","abs","x","velocity","y","triggeredByInput","cancel","drawerMini","_push","_overlay","pastHalf","velocityThreshold","moveEventArgs","limitedPosition","updatedPosition","delta","min","max","stopPropagation","selectedItemIndex","index","closest","destroy","name","events","plugin","jQuery"],"mappings":"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","file":"kendo.drawer.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.userevents.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.userevents'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendodrawer = global.kendodrawer || {}, global.kendodrawer.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"drawer\",\n        name: \"Drawer\",\n        category: \"web\",\n        description: \"The Kendo Drawer widget provides slide to reveal sidebar\",\n        depends: [ \"userevents\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            SHOW = \"show\",\n            HIDE = \"hide\",\n            NS = \".kendoDrawer\",\n            FOCUSED = \"k-focus\",\n            keys = kendo.keys,\n            ITEMCLICK = \"itemClick\",\n            TABINDEX = \"tabIndex\",\n            PUSH = \"push\",\n            OVERLAY = \"overlay\",\n            LEFT = \"left\",\n            START = \"start\",\n            END = \"end\",\n            RIGHT = \"right\";\n\n        var Drawer = kendo.ui.Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                var userEvents;\n\n                Widget.fn.init.call(this, element, options);\n\n                options = that.options;\n\n                that._element(element);\n\n                that._wrapper(element);\n\n                that._navigatable();\n\n                that.position();\n\n                that._mode();\n\n                if (options.mini) {\n                    that._miniMode();\n                }\n\n                that._initDrawerItems();\n\n                if (options.mini && options.mode != PUSH) {\n                    that._setBodyOffset();\n                }\n\n                userEvents = this.userEvents = new kendo.UserEvents(options.mode != PUSH ? $(document.body) : this.drawerContainer, { fastTap: true, allowSelection: true });\n\n                that.tap = function(e) {\n                    if ($.contains(that.drawerItemsWrapper[0], e.event.target)) {\n                        that._itemClick(e);\n                    }\n                    if (options.autoCollapse && that.visible && !that.trigger(\"hide\", { sender: this })) {\n                        that.hide();\n                        e.preventDefault();\n                    }\n                };\n\n                if (this.options.swipeToOpen) {\n                    userEvents.bind(\"start\", function(e) { that._start(e); });\n                    userEvents.bind(\"move\", function(e) { that._update(e); });\n                    userEvents.bind(\"end\", function(e) { that._end(e); });\n                    userEvents.bind(\"tap\", that.tap);\n                } else {\n                    userEvents.bind(\"press\", that.tap);\n                }\n\n                if (options.minHeight && options.mode == PUSH) {\n                    that.drawerContainer.css(\"min-height\", options.minHeight);\n                }\n\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.drawerContainer[0]);\n                }\n\n                if (options.expanded) {\n                    that._removeTransition();\n                    that.show();\n                }\n            },\n\n            _element: function() {\n                var that = this;\n\n                var element = that.element;\n                var options = that.options;\n                that.contentElement = element.children()\n                    .wrapAll(\"<div class='k-drawer-content'></div>\")\n                    .parent();\n                that.drawerElement = $(options.template);\n\n                element.addClass(\"k-widget k-drawer\");\n            },\n\n            _navigatable: function() {\n                var that = this;\n                var element = that.element;\n                var drawerItems = element.find(\"[data-role='drawer-item']\");\n\n                drawerItems.first().parent()\n                    .attr(\"role\", \"menu\")\n                    .attr(\"aria-orientation\", \"vertical\");\n\n                if (!this.options.navigatable) {\n                    return;\n                }\n\n                element\n                    .attr(TABINDEX, 0)\n                    .on(\"focus\" + NS, that._focus.bind(that))\n                    .on(\"focusout\" + NS, that._blur.bind(that))\n                    .on(\"keydown\" + NS, that, that._keyDown.bind(that));\n            },\n\n            _blur: function() {\n                var that = this;\n\n                if (that._current) {\n                    that._current.removeClass(FOCUSED);\n                }\n            },\n\n            _focus: function() {\n                var that = this;\n\n                that._setCurrent(that._current ? that._current : that.drawerItemsWrapper.find(\"[data-role='drawer-item']\").eq(0));\n            },\n\n            _setCurrent: function(current) {\n                var that = this;\n                var id = kendo.guid();\n                var next = $(current);\n\n                if (that._current) {\n                    $(that._current)\n                        .removeClass(FOCUSED)\n                        .removeAttr(\"id\");\n\n                    that.element.removeAttr(\"aria-activedescendant\");\n                }\n\n                next\n                    .attr(\"id\", id)\n                    .addClass(FOCUSED);\n\n                that.element.attr(\"aria-activedescendant\", id);\n\n                that._current = next;\n            },\n\n            _keyDown: function(e) {\n                var that = this;\n                var handled = false;\n                var current = that._current;\n                var next;\n\n                if (e.keyCode == keys.UP) {\n                    handled = true;\n                    next = current.prevAll(\"[data-role='drawer-item']\").first();\n\n                    if (next.length) {\n                        that._setCurrent(next);\n                    } else {\n                        that._setCurrent(current.parent().find(\"[data-role='drawer-item']\").last());\n                    }\n\n                }\n\n                if (e.keyCode == keys.DOWN) {\n                    handled = true;\n                    next = current.nextAll(\"[data-role='drawer-item']\").first();\n\n                    if (next.length) {\n                        that._setCurrent(next);\n                    } else {\n                        that._setCurrent(current.parent().find(\"[data-role='drawer-item']\").first());\n                    }\n                }\n\n                if (e.keyCode == keys.HOME) {\n                    handled = true;\n                    that._setCurrent(that.drawerItemsWrapper.find(\"[data-role='drawer-item']\").eq(0));\n                }\n\n                if (e.keyCode == keys.END) {\n                    handled = true;\n                    that._setCurrent(that.drawerItemsWrapper.find(\"[data-role='drawer-item']\").last());\n                }\n\n                if (e.keyCode == keys.SPACEBAR || e.keyCode == keys.ENTER) {\n                    handled = true;\n                    that.tap({\n                        event: { target: current[0] },\n                        preventDefault: $.noop\n                    });\n                }\n\n                if (e.keyCode == keys.ESC) {\n                    handled = true;\n                    that.hide();\n                }\n\n                if (handled) {\n                    //prevent scrolling while pressing the keys\n                    e.preventDefault();\n                }\n            },\n\n            _wrapper: function() {\n                var options = this.options;\n                var drawerElement = this.drawerElement;\n                var element = this.element;\n                var contentElement = this.contentElement;\n                var drawerItemsWrapper = this.drawerItemsWrapper = drawerElement.wrapAll(\"<div class='k-drawer-items'></div>\").parent();\n                var drawerWrapper = this.drawerWrapper = drawerItemsWrapper.wrap(\"<div class='k-drawer-wrapper'></div>\").parent();\n                var drawerContainer = this.drawerContainer = element.wrap(\"<div class='k-drawer-container k-pos-relative'></div>\").parent();\n\n                if (options.mini) {\n                    if (options.mini.width) {\n                        drawerWrapper.width(options.mini.width);\n                    }\n                } else {\n                    drawerWrapper.width(0);\n                }\n\n\n                if (options.mode === PUSH) {\n                    drawerContainer.append(contentElement);\n                }\n                else if (options.mode === OVERLAY) {\n                    drawerContainer.after(contentElement);\n                    $(document.body).prepend(drawerContainer);\n                }\n\n                element.append( drawerWrapper );\n            },\n\n            _addTransition: function() {\n                this.drawerWrapper.css(\"transition\", \"all .3s ease-out\");\n            },\n\n            _removeTransition: function() {\n                this.drawerWrapper.css(\"transition\", \"none\");\n            },\n\n            _setBodyOffset: function() {\n                var overlayMiniOffset = this.element.outerWidth();\n\n                if (this.leftPositioned) {\n                    $(document.body).css(\"padding-left\", overlayMiniOffset);\n                }\n                else {\n                    $(document.body).css(\"padding-right\", overlayMiniOffset);\n                }\n            },\n\n            _initDrawerItems: function() {\n                var drawerItemsWrapper = this.drawerItemsWrapper;\n                var drawerItems = drawerItemsWrapper.find(\"[data-role='drawer-item']\");\n                var separatorItems = drawerItemsWrapper.find(\"[data-role='drawer-separator']\");\n\n                drawerItems.addClass(\"k-drawer-item\").attr(\"role\", \"menuitem\");\n                separatorItems.addClass(\"k-drawer-item k-drawer-separator\").attr(\"role\", \"separator\");\n\n                drawerItems.each((i, item) => {\n                    item.setAttribute(\"aria-label\", item.textContent.trim());\n                });\n\n                if (this._selectedItemIndex >= 0) {\n                    drawerItems.removeClass(\"k-selected\");\n                    drawerItems.eq(this._selectedItemIndex).addClass(\"k-selected\");\n                }\n            },\n\n            _mode: function() {\n                var options = this.options;\n                var drawerContainer = this.drawerContainer;\n                var overlayContainer;\n\n                if (options.mode == PUSH) {\n                    drawerContainer.addClass('k-drawer-' + PUSH);\n                }\n                else {\n                    drawerContainer.addClass('k-drawer-' + OVERLAY);\n                    overlayContainer = this.overlayContainer = $('<div class=\"k-overlay\"></div>');\n                    overlayContainer.hide();\n                    drawerContainer.prepend(overlayContainer);\n                }\n            },\n\n            _miniMode: function() {\n                var options = this.options;\n                var drawerContainer = this.drawerContainer;\n                var miniWidth = options.mini.width;\n                var miniTemplate = this._miniTemplate = options.mini.template && $(options.mini.template);\n                var drawerItemsWrapper = this.drawerItemsWrapper;\n                var drawerWrapper = this.drawerWrapper;\n\n                drawerContainer.addClass(\"k-drawer-mini\");\n\n                if (miniTemplate) {\n                    drawerItemsWrapper.html(miniTemplate);\n                }\n\n                if (miniWidth) {\n                    drawerWrapper.width(miniWidth);\n                }\n\n                this.minWidth = options.mini.width || this.drawerWrapper.width();\n            },\n\n            show: function() {\n                var drawerWrapper = this.drawerWrapper;\n                var drawerContainer = this.drawerContainer;\n                var options = this.options;\n                var isExpanded = drawerContainer.hasClass(\"k-drawer-expanded\");\n                var miniTemplate = this._miniTemplate;\n                var drawerElement = this.drawerElement;\n                var drawerItemsWrapper = this.drawerItemsWrapper;\n\n                if (!isExpanded) {\n                    drawerContainer.addClass('k-drawer-expanded');\n                    this.visible = true;\n                }\n\n                if (miniTemplate) {\n                    drawerItemsWrapper.html(drawerElement);\n                    this._initDrawerItems();\n                    this._selectItem();\n                }\n\n                drawerWrapper.width(options.width);\n\n                if (options.mini) {\n                    drawerContainer.removeClass(\"k-drawer-mini\");\n                }\n\n                if (options.mode === OVERLAY) {\n                    this.overlayContainer.show();\n                    this.visible = true;\n                }\n            },\n\n            hide: function() {\n                var that = this;\n                var drawerWrapper = that.drawerWrapper;\n                var drawerContainer = that.drawerContainer;\n                var options = this.options;\n                var drawerItemsWrapper = this.drawerItemsWrapper;\n                var miniTemplate = this._miniTemplate;\n                var miniWidth = options.mini && options.mini.width;\n\n                this._addTransition();\n\n                if (this._miniTemplate) {\n                    drawerItemsWrapper.html(miniTemplate);\n                    that._initDrawerItems();\n                    this._selectItem();\n                }\n\n                if (options.mini) {\n                    drawerContainer.addClass(\"k-drawer-mini\");\n                    if (miniWidth) {\n                        drawerWrapper.width(miniWidth);\n                    } else {\n                        drawerWrapper.width(\"\");\n                    }\n                } else {\n                    drawerWrapper.width(0);\n                }\n\n                if (this.visible) {\n                    drawerContainer.removeClass('k-drawer-expanded');\n                    this.visible = false;\n                }\n\n                if (options.mode === OVERLAY) {\n                    this.overlayContainer.hide();\n                }\n            },\n\n            position: function(value) {\n                var that = this;\n                var options = that.options;\n                var position = value || options.position;\n\n                if (position == RIGHT) {\n                    that.element.removeClass('k-drawer-' + START);\n                    that.element.addClass('k-drawer-' + END);\n                }\n                else {\n                    that.element.removeClass('k-drawer-' + END);\n                    that.element.addClass('k-drawer-' + START);\n                }\n\n                this.leftPositioned = position === LEFT;\n            },\n\n            _start: function(e) {\n                var that = this;\n                var options = this.options;\n                var drawerWrapper = this.drawerWrapper;\n                var drawerItemsWrapper = this.drawerItemsWrapper;\n                var userEvents = e.sender;\n\n\n                // ignore non-horizontal swipes\n                if (Math.abs(e.x.velocity) < Math.abs(e.y.velocity) || kendo.triggeredByInput(e.event)) {\n                    userEvents.cancel();\n                    return;\n                }\n\n\n                if (this.drawerMini) {\n                    drawerItemsWrapper.html(that.drawerElement);\n                }\n\n                this._removeTransition();\n\n                if (options.mode != PUSH) {\n                    this.overlayContainer.show();\n                }\n            },\n\n            _update: function(e) {\n                var options = this.options;\n                var mode = options.mode;\n\n                    if (mode == PUSH) {\n                        this._push(e);\n                    }\n                    else {\n                        this._overlay(e);\n                    }\n            },\n\n            _end: function(e) {\n                var velocity = e.x.velocity;\n                var options = this.options;\n                var drawerWrapper = this.drawerWrapper;\n                var elementWidth = drawerWrapper.width();\n                var pastHalf = elementWidth > options.width / 2;\n                var velocityThreshold = 0.8;\n                var shouldShow;\n\n                this._addTransition();\n\n                if (this.leftPositioned) {\n                    shouldShow = velocity > -velocityThreshold && (velocity > velocityThreshold || pastHalf);\n                }\n                 else {\n                    shouldShow = velocity < velocityThreshold && (velocity < -velocityThreshold || pastHalf);\n                }\n\n                if (shouldShow) {\n                    if (this.trigger(\"show\", { sender: this })) {\n                        e.preventDefault();\n                        this.hide();\n                    } else {\n                        this.show();\n                    }\n                } else {\n                    if (this.trigger(\"hide\", { sender: this })) {\n                        e.preventDefault();\n                        this.show();\n                    } else {\n                        this.hide();\n                    }\n                }\n            },\n\n            _overlay: function(moveEventArgs) {\n                var options = this.options;\n                var minWidth = (options.mini && options.mini.width) || this.minWidth || 0;\n                var drawerWrapper = this.drawerWrapper;\n                var elementWidth = drawerWrapper.width();\n                var limitedPosition;\n                var updatedPosition;\n\n                updatedPosition = elementWidth + (this.leftPositioned ? moveEventArgs.x.delta : -moveEventArgs.x.delta);\n\n                limitedPosition = Math.min(Math.max(updatedPosition, minWidth), options.width);\n\n                moveEventArgs.event.preventDefault();\n                moveEventArgs.event.stopPropagation();\n\n                drawerWrapper.width(limitedPosition);\n            },\n\n            _push: function(moveEventArgs) {\n                var options = this.options;\n                var minWidth = (options.mini && options.mini.width) || this.minWidth || 0;\n                var drawerWrapper = this.drawerWrapper;\n                var elementWidth = drawerWrapper.width();\n                var limitedPosition;\n                var updatedPosition;\n\n                updatedPosition = elementWidth + (this.leftPositioned ? moveEventArgs.x.delta : -moveEventArgs.x.delta);\n\n                limitedPosition = Math.min(Math.max(updatedPosition, minWidth), options.width);\n\n                moveEventArgs.event.preventDefault();\n                moveEventArgs.event.stopPropagation();\n\n                drawerWrapper.width(limitedPosition);\n            },\n\n            _selectItem: function(item) {\n                var selectedItemIndex;\n\n                if (item) {\n                    item.addClass(\"k-selected\");\n                    this.trigger(\"itemClick\", { item: item, sender: this });\n                    this._selectedItemIndex = item.index();\n                    return;\n                }\n\n                selectedItemIndex = this._selectedItemIndex;\n\n                if (selectedItemIndex) {\n                    this.drawerItemsWrapper.find(\"[data-role='drawer-item']\").eq(selectedItemIndex).addClass(\"k-selected\");\n                }\n            },\n\n            _itemClick: function(e) {\n                var that = this;\n                var item;\n                var items;\n\n                if ($(e.event.target).find(\".k-drawer-item\").length > 0) {\n                    item = $(e.event.target).find(\".k-drawer-item\");\n                }\n                else if ($(e.event.target).closest(\".k-drawer-item\").length > 0) {\n                    item = $(e.event.target).closest(\".k-drawer-item\");\n                }\n                else if ($(e.event.target).hasClass(\".k-drawer-item\")) {\n                    item = $(e.event.target);\n                }\n                items = that.drawerItemsWrapper.find(\".k-drawer-item\").removeClass(\"k-selected\");\n                that._selectItem(item);\n\n                if (that.options.navigatable) {\n                    that._setCurrent(item);\n                }\n            },\n\n            destroy: function() {\n                var options = this.options;\n\n                if (options.mode != PUSH) {\n                    if (this.leftPositioned) {\n                        $(document.body).css(\"padding-left\", 0);\n                    }\n                    else {\n                        $(document.body).css(\"padding-right\", 0);\n                    }\n                }\n\n                Widget.fn.destroy.call(this);\n\n                this.userEvents.destroy();\n\n                kendo.destroy(this.element);\n                this.element = this.drawerWrapper = this.drawerElement = this.drawerContainer = this.drawerItemsWrapper = this._miniTemplate = null;\n            },\n\n            options: {\n                name: \"Drawer\",\n                autoCollapse: true,\n                expanded: false,\n                position: LEFT,\n                mode: \"overlay\",\n                swipeToOpen: true,\n                width: 280,\n                mini: false,\n                navigatable: false,\n                template: \"\"\n            },\n\n            events: [\n                HIDE,\n                SHOW,\n                ITEMCLICK\n            ]\n\n        });\n        kendo.ui.plugin(Drawer);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}
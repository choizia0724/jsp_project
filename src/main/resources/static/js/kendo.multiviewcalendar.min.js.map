{"version":3,"sources":["raw-js/kendo.multiviewcalendar.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendomultiviewcalendar","js","this","$","undefined$1","kendo","window","calendar","support","isInRange","toDateObject","createDate","isEqualDate","getToday","keys","ui","Widget","Selectable","template","mobileOS","ns","CLICK","ID","MONTH","DOT","EMPTY","CENTURY","CHANGE","NAVIGATE","VALUE","FOCUSED","SELECTED","MID","SPLITEND","SPLITSTART","START","END","HOVER","DISABLED","TODAY","OUTOFRANGE","CALENDAR_VIEW","CELLSELECTOR","CELLSELECTORVALID","BLUR","FOCUS","MOUSEENTER","touch","MOUSELEAVE_NS","PREVARROW","NEXTARROW","RANGE","SINGLE","MULTIPLE","TABLE","TBODY","THEAD","TH","ROLE","NONE","ARIA_SELECTED","ARIA_DISABLED","ARIA_LABEL","ARIA_ACTIVEDESCENDANT","DATE","Date","views","month","year","decade","century","RangeSelectable","extend","init","element","options","that","fn","call","userEvents","UserEvents","allowSelection","filter","tap","_tap","bind","touchAction","events","name","inputSelectors","multiple","dragToSelect","relatedTarget","noop","destroy","_lastActive","_start","_end","_allowSelection","target","is","cancel","start","addClass","attr","end","mid","elements","tables","find","each","lastCell","last","firstCell","first","hasClass","clear","clearVariables","removeClass","removeAttr","selectFrom","items","startIdx","inArray","index","selectTo","endIdx","range","temp","length","_useEnd","change","trigger","_clearFlags","_useStart","e","selectRange","currentDate","_toggling","MultiViewCalendar","id","culture","wrapper","disableDates","disabled","getCulture","format","_extractFormat","calendars","standard","patterns","d","_templates","_header","_wrapper","getValidCssClass","size","weekNumber","on","_move","_focus","_blur","link","currentTarget","firstChild","href","indexOf","preventDefault","_click","_mouseEnter","guid","_cellID","_calendarWidth","width","_range","_initViews","viewName","value","_selectable","_footer","footer","_selectDates","_addSelectedCellsToArray","selectable","selectDates","_restoreSelection","notify","min","max","dates","showViewHeader","depth","messages","weekColumnHeader","orientation","setOptions","normalize","i","_views","off","remove","_cell","_currentView","_current","header","_title","rangeSelectable","_today","current","focus","tablesWrapper","_option","view","navigateToPast","_navigate","navigateToFuture","navigateUp","_index","navigate","navigateDown","_value","isNaN","viewsEnum","restrictValue","_aria","rowGroups","add","role","_ariaMonth","rows","noHeaderRows","not","noHeaderCells","columnHeaderCells","rowHeaderCells","outOfRange","row","prev","$row","numberOfEmpty","owned","children","eq","j","cell","$cell","push","join","_updateHeader","lastDate","prevDisabled","nextDisabled","title","_firstViewValue","visibleRange","_visibleRange","shiftDate","html","getFullYear","toggleClass","compare","_navContainer","icon","iconClass","appendTo","_dateInViews","prevent","lastActive","cellIndex","triggerChange","key","keyCode","focusedCell","table","closest","currentValue","isRtl","RIGHT","LEFT","UP","DOWN","SPACEBAR","HOME","_focusCell","next","_todayClick","ctrlKey","metaKey","_cellByDate","ENTER","_toggleSelection","shiftKey","setDate","_nextNavigatable","getMonth","getDate","_selectRange","event","PAGEUP","PAGEDOWN","_visualizeSelectedDatesInView","cells","selectedDates","toDateString","_selectElement","isDisabled","navigatableDate","getTime","_unselect","option","parseDate","_toggle","toLowerCase","_rangeSelection","aria","parseOptions","_selection","_onRelatedTarget","unselect","_unselecting","_getFirstViewDate","currentView","ranges","_canRenderNextView","viewDate","fullYear","date","maxYear","maxMonth","viewOptions","_table","content","url","showHeader","isWeekColumnVisible","otherMonth","contentClasses","sender","useEnd","useStart","initialRange","_preventChange","selectElements","domEvent","isCell","_validateValue","_deselect","item","currentDateIndex","map","Number","splice","firstDateInView","lastDateInView","_fillRange","daysDifference","startDate","endDate","fromDateUTC","UTC","endDateUTC","Math","ceil","MS_PER_DAY","daysBetweenTwoDates","array","numberOfDays","fromDate","nextDay","addDaysToArray","buttons","prependTo","mousetoggle","_calendarTitleClick","_prevViewClick","_nextViewClick","insertAfter","empty","data","cssClass","linkClass","dateString","useWithBlock","toString","today","hide","show","arrow","modifier","offset","originaValue","setFullYear","toggle","isTodayDisabled","adjustDST","contains","cellId","removeAttribute","_updateAria","ariaTemplate","text","valueType","clearSelection","validSelectedDates","datesUnique","position","time","grep","setHours","startInRange","endInRange","type","dimension","numberOfViews","abs","setMonth","plugin","jQuery"],"mappings":"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","file":"kendo.multiviewcalendar.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.selectable.js'), require('kendo.calendar.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.selectable', 'kendo.calendar', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendomultiviewcalendar = global.kendomultiviewcalendar || {}, global.kendomultiviewcalendar.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"multiviewcalendar\",\n        name: \"MultiViewCalendar\",\n        category: \"web\",\n        description: \"Multi-view calendar.\",\n        depends: [ \"core\", \"selectable\", \"calendar\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            calendar = kendo.calendar,\n            support = kendo.support,\n            isInRange = calendar.isInRange,\n            toDateObject = calendar.toDateObject,\n            createDate = calendar.createDate,\n            isEqualDate = calendar.isEqualDate,\n            getToday = calendar.getToday,\n            keys = kendo.keys,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            Selectable = ui.Selectable,\n            template = kendo.template,\n            mobileOS = support.mobileOS,\n            ns = \".kendoMultiViewCalendar\",\n            CLICK = \"click\",\n            KEYDOWN = \"keydown\",\n            ID = \"id\",\n            MIN = \"min\",\n            MONTH = \"month\",\n            DOT = \".\",\n            EMPTY = \" \",\n            CENTURY = \"century\",\n            DECADE = \"decade\",\n            CHANGE = \"change\",\n            NAVIGATE = \"navigate\",\n            VALUE = \"value\",\n            FOCUSED = \"k-focus\",\n            SELECTED = \"k-selected\",\n            MID = \"k-range-mid\",\n            SPLITEND = \"k-range-split-end\",\n            SPLITSTART = \"k-range-split-start\",\n            START = \"k-range-start\",\n            END = \"k-range-end\",\n            HOVER = \"k-hover\",\n            DISABLED = \"k-disabled\",\n            TODAY = \"k-calendar-nav-today\",\n            OTHERMONTH = \"k-other-month\",\n            OUTOFRANGE = \"k-out-of-range\",\n            CALENDAR_VIEW = \"k-calendar-view\",\n            CELLSELECTOR = \"td:has(.k-link):not(.\" + OUTOFRANGE + \")\",\n            CELLSELECTORVALID = \"td:has(.k-link):not(.\" + DISABLED + \"):not(.\" + OUTOFRANGE + \")\",\n            BLUR = \"blur\",\n            FOCUS = \"focus\",\n            MOUSEENTER = support.touch ? \"touchstart\" : \"mouseenter\",\n            MOUSELEAVE_NS = support.touch ? \"touchend\" + ns + \" touchmove\" + ns : \"mouseleave\" + ns,\n            PREVARROW = \"_prevArrow\",\n            NEXTARROW = \"_nextArrow\",\n            RANGE = \"range\",\n            SINGLE = \"single\",\n            MULTIPLE = \"multiple\",\n            TABINDEX = \"tabindex\",\n            TABLE = \"table\",\n            TBODY = \"tbody\",\n            THEAD = \"thead\",\n            TR = \"tr\",\n            TD = \"td\",\n            TH = \"th\",\n            ROLE = \"role\",\n            NONE = \"none\",\n            ROWGROUP = \"rowgroup\",\n            COLUMNHEADER = \"columnheader\",\n            ROWHEADER = \"rowheader\",\n            GRIDCELL = \"gridcell\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_OWNS = \"aria-owns\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            INPUTSELECTOR = \"input,a,textarea,.k-multiselect-wrap,select,button,.k-button>span,.k-button>img,span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,span.k-svg-icon.k-svg-i-caret-alt-down,span.k-svg-icon.k-svg-i-caret-alt-up\",\n            DATE = Date,\n            views = {\n                month: 0,\n                year: 1,\n                decade: 2,\n                century: 3\n            };\n\n        var RangeSelectable = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.calendar = options.calendar;\n\n                that.userEvents = new kendo.UserEvents(that.element, {\n                    global: true,\n                    allowSelection: true,\n                    filter: that.options.filter,\n                    tap: that._tap.bind(that),\n                    touchAction: NONE\n                });\n            },\n\n            events: [CHANGE],\n\n            options: {\n                name: \"RangeSelectable\",\n                filter: \">*\",\n                inputSelectors: INPUTSELECTOR,\n                multiple: false,\n                dragToSelect: true,\n                relatedTarget: $.noop\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.userEvents.destroy();\n                that.calendar = null;\n\n                that._lastActive = that.element = that.userEvents = that._start = that._end = null;\n            },\n\n            _allowSelection: function(target) {\n                if ($(target).is(this.options.inputSelectors)) {\n                    this.userEvents.cancel();\n                    return false;\n                }\n\n                return true;\n            },\n\n            start: function(element) {\n                if (element === undefined$1) {\n                    return this._start;\n                }\n                element.addClass(START + \" \" + SELECTED).attr(ARIA_SELECTED, true);\n                this._start = element;\n            },\n\n            end: function(element) {\n                if (element === undefined$1) {\n                    return this._start;\n                }\n                element.addClass(END + \" \" + SELECTED).attr(ARIA_SELECTED, true);\n                this._end = element;\n            },\n\n            mid: function(elements) {\n                var tables = this.element.find(\"table.k-month\");\n\n                elements.addClass(MID).attr(ARIA_SELECTED, true);\n                tables.each(function() {\n                    var that = $(this);\n                    var lastCell = that.find(CELLSELECTORVALID).last();\n                    var firstCell = that.find(CELLSELECTORVALID).first();\n\n                    if (lastCell.hasClass(MID)) {\n                        lastCell.addClass(SPLITEND);\n                    }\n\n                    if (firstCell.hasClass(MID)) {\n                        firstCell.addClass(SPLITSTART);\n                    }\n                });\n            },\n\n            clear: function(clearVariables) {\n                this.element.find(CELLSELECTOR)\n                    .removeClass(END + \" \" + SELECTED + \" \" + START + \" \" + MID + \" \" + SPLITEND + \" \" + SPLITSTART)\n                    .removeAttr(ARIA_SELECTED);\n\n                if (clearVariables) {\n                    this._start = this._end = null;\n                }\n            },\n\n            selectFrom: function(start) {\n                var that = this;\n                var items;\n                var startIdx;\n\n                items = that.element.find(CELLSELECTOR);\n\n                startIdx = $.inArray($(start)[0], items);\n\n                that.clear();\n                that.start(start);\n\n                items = items.filter(function(index) {\n                    return index > startIdx;\n                });\n                that.mid(items);\n            },\n\n            selectTo: function(end) {\n                var that = this;\n                var items;\n                var endIdx;\n\n                items = that.element.find(CELLSELECTOR);\n\n                endIdx = $.inArray($(end)[0], items);\n\n                that.clear();\n\n                items = items.filter(function(index) {\n                    return index < endIdx;\n                });\n                that.mid(items);\n                that.end($(end));\n            },\n\n            range: function(start, end) {\n                var that = this;\n                var items;\n                var startIdx;\n                var endIdx;\n                var temp;\n\n                if (start === undefined$1) {\n                    return { start: that._start, end: that._end };\n                }\n\n                items = that.element.find(CELLSELECTOR);\n\n                startIdx = $.inArray($(start)[0], items);\n                endIdx = $.inArray($(end)[0], items);\n\n                if (endIdx == -1) {\n                    endIdx = items.length;\n                }\n\n                if (startIdx > endIdx) {\n                    temp = end;\n                    end = start;\n                    start = temp;\n                    temp = startIdx;\n                    startIdx = endIdx;\n                    endIdx = temp;\n                }\n                that.clear();\n                start.addClass(START + \" \" + SELECTED).attr(ARIA_SELECTED, true);\n                that._start = start;\n\n                items = items.filter(function(index) {\n                    return index > startIdx && index < endIdx;\n                });\n                that.mid(items);\n\n                if (end) {\n                    that.end($(end));\n                } else {\n                    that._useEnd = true;\n                }\n            },\n\n            change: function() {\n                this.trigger(CHANGE);\n            },\n\n            _clearFlags: function() {\n                this._useStart = this._useEnd = false;\n            },\n\n            _tap: function(e) {\n                var target = $(e.target),\n                    range = this.calendar.selectRange() || {},\n                    start = range.start,\n                    end = range.end,\n                    that = this,\n                    currentDate = toDateObject($(target).find(\"a\")),\n                    items,\n                    startIdx,\n                    endIdx;\n\n\n                that._lastActive = target;\n\n                if (!start || +start > +currentDate) {\n                    that.clear(true);\n                    that.start(target);\n                    that._clearFlags();\n                    that.trigger(CHANGE);\n                    return;\n                }\n\n                if (start && !end) {\n                    items = that.element.find(CELLSELECTOR);\n\n                    startIdx = $.inArray($(that._start)[0], items);\n                    endIdx = $.inArray($(target)[0], items);\n\n                    if (start) {\n                        that._useStart = true;\n                    }\n\n                    items = items.filter(function(index) {\n                        return index > startIdx && index < endIdx;\n                    });\n                    that.mid(items);\n                    that.end($(target));\n                    that.trigger(CHANGE);\n                    that._clearFlags();\n                    return;\n                }\n\n                if (start && end) {\n                    if (target.hasClass(MID)) {\n                        if (!that._toggling) {\n                            that.range(target, that._end);\n                        } else {\n                            that.range(that._start, target);\n                        }\n                        that._toggling = !that._toggling;\n                        that.trigger(CHANGE);\n                        that._clearFlags();\n                        return;\n                    }\n                    that._toggling = false;\n                    that._end = null;\n                    that.clear();\n                    that.start(target);\n                    that.trigger(CHANGE);\n                    that._clearFlags();\n                }\n            }\n        });\n\n\n        var MultiViewCalendar = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                var id;\n                var culture;\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n                options = that.options;\n\n                that.options.disableDates = calendar.disabled(that.options.disableDates);\n\n                culture = kendo.getCulture(options.culture);\n                options.format = kendo._extractFormat(options.format || culture.calendars.standard.patterns.d);\n\n                that._templates();\n\n                that._header();\n\n                that._wrapper();\n\n                id = element\n                    .addClass(`k-widget k-calendar k-calendar-range ${kendo.getValidCssClass(\"k-calendar-\", \"size\", that.options.size || \"medium\")}` + (options.weekNumber ? \" k-week-number\" : \"\"))\n                    .on(KEYDOWN + ns, DOT + CALENDAR_VIEW, that._move.bind(that))\n                    .on(FOCUS + ns, DOT + CALENDAR_VIEW, that._focus.bind(that))\n                    .on(BLUR + ns, DOT + CALENDAR_VIEW, that._blur.bind(that))\n                    .on(CLICK + ns, CELLSELECTORVALID, function(e) {\n                        var link = e.currentTarget.firstChild;\n\n                        if (link.href.indexOf(\"#\") != -1) {\n                            e.preventDefault();\n                        }\n\n                        that._click($(link));\n                    })\n                    .on(MOUSEENTER + ns, CELLSELECTORVALID, that._mouseEnter.bind(that))\n                    .on(MOUSELEAVE_NS, CELLSELECTORVALID, function() {\n                        $(this).removeClass(HOVER);\n                    })\n                    .attr(ID);\n\n                if (!id) {\n                    id = kendo.guid();\n                }\n\n                that._cellID = id + \"_cell_selected\";\n\n                that._calendarWidth = that.element.width();\n\n                that._range = options.range;\n\n                that._initViews({ viewName: options.start, value: options.value });\n                that._selectable();\n\n                that._footer(that.footer);\n                that._selectDates = [];\n                that.value(options.value);\n                that._addSelectedCellsToArray();\n\n                if (options.selectable == MULTIPLE) {\n                    that._selectDates = options.selectDates.length ? options.selectDates : that._selectDates;\n                    that._restoreSelection();\n                }\n\n                if (options.selectable == RANGE) {\n                    that.selectRange(that._range);\n                }\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"MultiViewCalendar\",\n                value: null,\n                min: new DATE(1900, 0, 1),\n                max: new DATE(2099, 11, 31),\n                dates: [],\n                disableDates: null,\n                culture: \"\",\n                footer: \"\",\n                format: \"\",\n                month: {},\n                range: { start: null, end: null },\n                weekNumber: false,\n                views: 2,\n                showViewHeader: false,\n                selectable: SINGLE,\n                selectDates: [],\n                start: MONTH,\n                depth: MONTH,\n                messages: {\n                    weekColumnHeader: \"\"\n                },\n                size: \"medium\",\n                orientation: \"horizontal\"\n            },\n\n            events: [\n                CHANGE,\n                NAVIGATE\n            ],\n\n            setOptions: function(options) {\n                var that = this;\n\n                calendar.normalize(options);\n\n                options.disableDates = calendar.disabled(options.disableDates);\n\n                Widget.fn.setOptions.call(that, options);\n\n                that._selectable();\n\n                that._templates();\n\n                that._footer(that.footer);\n\n                for (var i = 0; i < that._views.length; i++) {\n                    that._views[i].off(ns).remove();\n                }\n\n                that._initViews({ viewName: options.start, value: options.value });\n\n                that._range = options.range || { start: null, end: null };\n\n                that._restoreSelection();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that._cell = null;\n                that._currentView = null;\n                that._current = null;\n\n                if (that._views) {\n                    for (var i = 0; i < that._views.length; i++) {\n                        that._views[i].off(ns).remove();\n                    }\n                }\n\n                that.element.off(ns);\n\n                if (that.header) {\n                    that.header.off(ns);\n                    that._title = null;\n                    that.header = null;\n                }\n\n                if (that.selectable) {\n                    that.selectable.destroy();\n                    that.selectable = null;\n                }\n\n                if (that.rangeSelectable) {\n                    that.rangeSelectable.destroy();\n                    that.rangeSelectable = null;\n                }\n\n                if (that._today) {\n                    kendo.destroy(that._today.off(ns));\n                }\n\n                that._views = null;\n\n                Widget.fn.destroy.call(that);\n            },\n\n            current: function() {\n                return this._current;\n            },\n\n            focus: function() {\n                this.tablesWrapper.trigger(\"focus\");\n            },\n\n            min: function(value) {\n                return this._option(MIN, value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            view: function() {\n                return this._currentView;\n            },\n\n            navigateToPast: function() {\n                this._navigate(PREVARROW, -1);\n            },\n\n            navigateToFuture: function() {\n                this._navigate(NEXTARROW, 1);\n            },\n\n            navigateUp: function() {\n                var that = this,\n                index = that._index;\n\n                if (that._title.hasClass(DISABLED)) {\n                    return;\n                }\n\n                that.navigate(that._current, ++index);\n            },\n\n            navigateDown: function(value) {\n                var that = this,\n                index = that._index,\n                depth = that.options.depth;\n\n                if (!value) {\n                    return;\n                }\n\n                if (index === views[depth]) {\n                    if (!isEqualDate(that._value, that._current) || !isEqualDate(that._value, value)) {\n                        that.value(value);\n                        that.trigger(CHANGE);\n                    }\n                    return;\n                }\n\n                that.navigate(value, --index);\n            },\n\n            navigate: function(value, view) {\n                view = isNaN(view) ? calendar.views[calendar.viewsEnum[view]] : calendar.views[view];\n\n                var that = this;\n                var options = that.options;\n                var min = options.min;\n                var max = options.max;\n\n                if (!value) {\n                    that._current = value = new DATE(+calendar.restrictValue(value, min, max));\n                } else {\n                    that._current = value;\n                }\n\n                if (view === undefined$1) {\n                    view = that._currentView;\n                }\n\n                that._currentView = view;\n\n                for (var i = 0; i < that._views.length; i++) {\n                    that._views[i].off(ns).remove();\n                }\n\n                that._initViews({ viewName: view.name, value: value });\n\n                that._restoreSelection();\n            },\n\n            _aria: function() {\n                var tables = this.tablesWrapper.find(TABLE),\n                    rowGroups = tables.first().find(THEAD).add(tables.find(TBODY)),\n                    viewName = this._currentView.name;\n\n                tables.removeAttr(TABINDEX);\n\n                tables.attr({\n                    role: NONE\n                });\n\n                rowGroups.attr({\n                    role: ROWGROUP\n                });\n\n                if (viewName === MONTH) {\n                    this._ariaMonth();\n                }\n            },\n\n            _ariaMonth: function() {\n                var tables = this.tablesWrapper.find(TABLE),\n                    rowGroups = tables.first().find(THEAD).add(tables.find(TBODY)),\n                    rows = rowGroups.find(TR),\n                    noHeaderRows = tables.not(\":eq(0)\").find(THEAD + EMPTY + TR),\n                    noHeaderCells = noHeaderRows.find(TH),\n                    columnHeaderCells = tables.first().find(THEAD + EMPTY + TH),\n                    rowHeaderCells = tables.find(TBODY + EMPTY + TH),\n                    outOfRange = tables.find(DOT + OUTOFRANGE),\n                    ariaDataCells = function(i, row) {\n                        var $row = $(row),\n                            numberOfEmpty = $row.find(DOT + OUTOFRANGE).length,\n                            owned = [],\n                            prev, cells;\n\n                        if (i === 1) {\n                            $row.children()\n                                .filter(DOT + OUTOFRANGE)\n                                .attr({\n                                    \"aria-hidden\": \"false\",\n                                    role: GRIDCELL\n                                });\n                        } else if (numberOfEmpty === 7) {\n                            $row.removeAttr(ROLE);\n                            $row.find(TH).removeAttr(ROLE);\n                        } else if (numberOfEmpty > 0 && numberOfEmpty < 7 && $row.children().not(TH).first().hasClass(OUTOFRANGE)) {\n                            $row.find(TH).removeAttr(ROLE);\n                            prev = rows.eq(i - 1);\n\n                            if (!prev.attr(ROLE) || prev.attr(ROLE) === NONE) {\n                                prev = rows.eq(i - 2);\n                            }\n\n                            cells = $row.children().not(TH);\n\n                            cells.each(function(j, cell) {\n                                var $cell = $(cell),\n                                    id;\n\n                                if (!$cell.hasClass(OUTOFRANGE)) {\n                                    id = \"owned_\" + i + \"_\" + j;\n                                    $cell.attr(ID, id);\n                                    owned.push(id);\n                                }\n                            });\n\n                            $row.removeAttr(ROLE);\n                            prev.attr(ARIA_OWNS, owned.join(\" \"));\n                        }\n                    };\n\n                columnHeaderCells.attr({\n                    role: COLUMNHEADER\n                });\n\n                rowHeaderCells.attr({\n                    role: ROWHEADER\n                });\n\n                outOfRange.removeAttr(ROLE);\n                noHeaderRows.removeAttr(ROLE);\n                noHeaderCells.removeAttr(ARIA_LABEL).removeAttr(ROLE);\n\n                rows.each(ariaDataCells);\n            },\n\n            _updateHeader: function() {\n                var that = this;\n                var view = that._currentView;\n                var title = that._title;\n                var value = that._firstViewValue;\n                var options = that.options;\n                var visibleRange = that._visibleRange();\n                var culture = options.culture;\n                var min = options.min;\n                var max = options.max;\n                var lastDate;\n                var disabled;\n                var prevDisabled;\n                var nextDisabled;\n\n                if (view.name === DECADE || view.name === CENTURY) {\n                    lastDate = shiftDate(value, view.name, options.views - 1);\n                    if (!isInRange(lastDate, min, max)) {\n                        lastDate = max;\n                    }\n\n                    title.html('<span class=\"k-button-text\">' + view.first(value).getFullYear() + \" - \" + view.last(lastDate).getFullYear() + \"</span>\");\n                } else {\n                    title.html('<span class=\"k-button-text\">' + view.title(value, min, max, culture) + \" - \" + view.title(shiftDate(value, view.name, options.views - 1), min, max, culture) + \"</span>\");\n                }\n\n                disabled = view.name === CENTURY;\n                title.toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n                prevDisabled = view.compare(visibleRange.start, that.options.min) < 1;\n                nextDisabled = view.compare(visibleRange.end, that.options.max) > -1;\n\n                if (prevDisabled && nextDisabled) {\n                    if (that._navContainer) {\n                        that._navContainer.remove();\n                        that._navContainer = null;\n                    }\n                } else {\n                    if (!that._navContainer) {\n                        that._navContainer = $(`<span class=\"k-calendar-nav ${that.options.orientation != \"vertical\" ? \"k-hstack\" : \"k-vstack\"}\">` +\n                        `<a tabindex=\"-1\" href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-prev-view\" ` + ARIA_LABEL + `=\"Previous\">${kendo.ui.icon({ icon: \"chevron-left\", iconClass: \"k-button-icon\" })}</a>` +\n                        `<a tabindex=\"-1\" href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-next-view\" ` + ARIA_LABEL + `=\"Next\">${kendo.ui.icon({ icon: \"chevron-right\", iconClass: \"k-button-icon\" })}</a>` +\n                        '</span>').appendTo(that.header);\n                        that[PREVARROW] = that._navContainer.find(\".k-calendar-prev-view\");\n                        that[NEXTARROW] = that._navContainer.find(\".k-calendar-next-view\");\n                    }\n\n                    that[PREVARROW].toggleClass(DISABLED, prevDisabled).attr(ARIA_DISABLED, prevDisabled);\n                    if (that[PREVARROW].hasClass(DISABLED)) {\n                        that[PREVARROW].removeClass(HOVER);\n                    }\n\n                    that[NEXTARROW].toggleClass(DISABLED, nextDisabled).attr(ARIA_DISABLED, nextDisabled);\n                    if (that[NEXTARROW].hasClass(DISABLED)) {\n                        that[NEXTARROW].removeClass(HOVER);\n                    }\n                }\n            },\n\n            _mouseEnter: function(e) {\n                var that = this;\n                var cell = $(e.currentTarget);\n                var range;\n                var items;\n                var startIdx;\n                var endIdx;\n\n                cell.addClass(HOVER);\n\n                if (that.rangeSelectable && that._currentView.name === MONTH) {\n                    range = that.selectRange();\n                    if (range.start && !range.end) {\n                        if (that._dateInViews(that.selectRange().start)) {\n                            items = that.element.find(that.rangeSelectable.options.filter);\n                            startIdx = $.inArray($(that.rangeSelectable._start)[0], items);\n                            endIdx = $.inArray($(cell)[0], items);\n                            if (startIdx > endIdx) {\n                                return;\n                            }\n                            that.rangeSelectable.range(that.rangeSelectable._start, cell);\n                        } else if (+toDateObject(that.element.find(CELLSELECTOR).first().find(\"a\")) > +range.start) {\n                            that.rangeSelectable.selectTo(cell);\n                        }\n                        that.rangeSelectable._end = null;\n                    }\n                }\n            },\n\n            _move: function(e) {\n                var that = this;\n                var options = that.options;\n                var key = e.keyCode;\n                var index = that._index;\n                var min = options.min;\n                var max = options.max;\n                var focusedCell = that.element.find(DOT + FOCUSED);\n                var table = focusedCell.closest(TABLE);\n                var currentValue = new DATE(+(that._current || toDateObject(focusedCell.find(\"a\"))));\n                var isRtl = kendo.support.isRtl(that.wrapper);\n                var navigate = false;\n                var value, prevent, method, cell, lastActive, cellIndex, triggerChange;\n\n                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                    value = 1;\n                    prevent = true;\n                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                    value = -1;\n                    prevent = true;\n                } else if (key == keys.UP) {\n                    value = index === 0 ? -7 : -4;\n                    prevent = true;\n                } else if (key == keys.DOWN) {\n                    value = index === 0 ? 7 : 4;\n                    prevent = true;\n                } else if (key == keys.SPACEBAR) {\n                    value = 0;\n                    prevent = true;\n                } else if (key == keys.HOME) {\n                    prevent = true;\n                    cell = table.find(CELLSELECTORVALID).eq(0);\n                    if (cell.hasClass(FOCUSED)) {\n                        table = table.prev();\n                        if (table.length) {\n                            that._focusCell(table.find(CELLSELECTORVALID).eq(0));\n                        } else {\n                            navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                            that._navigate(PREVARROW, -1);\n                            that._focusCell(that.element.find(TABLE).first().find(CELLSELECTORVALID).first());\n                        }\n                    } else {\n                        that._focusCell(cell);\n                    }\n                } else if (key == keys.END) {\n                    prevent = true;\n                    cell = table.find(CELLSELECTORVALID).last();\n                    if (cell.hasClass(FOCUSED)) {\n                        table = table.next();\n                        if (table.length) {\n                            that._focusCell(table.find(CELLSELECTORVALID).last());\n                        } else {\n                            navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                            that._navigate(NEXTARROW, 1);\n                            that._focusCell(that.element.find(TABLE).last().find(CELLSELECTORVALID).last());\n                        }\n                    } else {\n                        that._focusCell(cell);\n                    }\n                } else if (key === 84) {\n                    that._todayClick(e);\n                    prevent = true;\n                }\n\n                if (e.ctrlKey || e.metaKey) {\n                    if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                        navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                        that._navigate(NEXTARROW, 1);\n                        prevent = true;\n                    } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                        navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                        that._navigate(PREVARROW, -1);\n                        prevent = true;\n                    } else if (key == keys.UP) {\n                        navigate = !that._title.hasClass(DISABLED);\n                        that.navigateUp();\n                        that._focusCell(that._cellByDate(that._current));\n                        prevent = true;\n                    } else if (key == keys.DOWN) {\n                        if (that._currentView.name === MONTH) {\n                            that.value(currentValue);\n                        } else {\n                            that.navigateDown(currentValue);\n                            that._focusCell(that._cellByDate(that._current));\n                            navigate = true;\n                        }\n                        prevent = true;\n                    } else if ((key == keys.ENTER || key == keys.SPACEBAR)) {\n                        if (options.selectable === MULTIPLE) {\n                            that._toggleSelection(e);\n                        }\n                    }\n                } else if (e.shiftKey && options.selectable !== SINGLE) {\n                    if (value !== undefined$1 || method) {\n                        if (!method) {\n                            that._currentView.setDate(currentValue, value);\n                        }\n\n                        if (that._currentView.name !== MONTH) {\n                            return;\n                        }\n\n                        if (options.disableDates(currentValue)) {\n                            currentValue = that._nextNavigatable(currentValue, value);\n                        }\n\n                        min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\n                        if (isInRange(currentValue, min, max)) {\n                            if (!that._dateInViews(currentValue)) {\n                                if (value > 0) {\n                                    navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                                    that._navigate(NEXTARROW, 1);\n                                } else {\n                                    navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                                    that._navigate(PREVARROW, -1);\n                                }\n                            }\n                            cell = that._cellByDate(currentValue);\n                            that._current = currentValue;\n\n                            if (that.selectable) {\n                                that._selectRange(toDateObject((that.selectable._lastActive || focusedCell).find(\"a\")), currentValue);\n                                if (!that.selectable._lastActive) {\n                                    that.selectable._lastActive = focusedCell;\n                                }\n                                that.trigger(CHANGE);\n                                that._focusCell(cell);\n                            }\n\n                            if (that.rangeSelectable) {\n                                lastActive = toDateObject((that.rangeSelectable._lastActive || focusedCell).find(\"a\"));\n                                if (!that._dateInViews(lastActive)) {\n                                    if (+lastActive > +currentValue) {\n                                        that.rangeSelectable._end = that.rangeSelectable._lastActive;\n                                        that.rangeSelectable.selectFrom(cell);\n                                    } else {\n                                        that.rangeSelectable.selectTo(cell);\n                                    }\n                                } else {\n                                    if (that.rangeSelectable._end && that.rangeSelectable._end.is(DOT + FOCUSED)) {\n                                        that.rangeSelectable._lastActive = that.rangeSelectable._start;\n                                    } else {\n                                        that.rangeSelectable._lastActive = that._cellByDate(lastActive);\n                                    }\n                                    that.rangeSelectable.range(that.rangeSelectable._lastActive, cell);\n                                }\n                                that.rangeSelectable.change();\n                                that._focusCell(cell);\n                            }\n                        }\n                    }\n                } else {\n                    if (key == keys.ENTER || key == keys.SPACEBAR) {\n                        if (that._currentView.name === MONTH) {\n                            triggerChange = !focusedCell.hasClass(SELECTED) || that.element.find(DOT + SELECTED).length > 1;\n                            that.value(currentValue);\n                            if (that.selectable) {\n                                that.selectable._lastActive = that._cellByDate(currentValue);\n                                if (triggerChange) {\n                                    that.selectable.trigger(CHANGE, { event: e });\n                                }\n                            }\n                            if (that.rangeSelectable) {\n                                that.rangeSelectable.change();\n                            }\n                        } else {\n                            that._click($(that._cell[0].firstChild));\n                        }\n                        prevent = true;\n                    } else if (key == keys.PAGEUP || key == keys.PAGEDOWN) {\n                        prevent = true;\n                        cellIndex = table.find(CELLSELECTORVALID).index(focusedCell);\n                        table = key == keys.PAGEUP ? table.prev() : table.next();\n                        if (!table.length) {\n                            if (key == keys.PAGEUP) {\n                                navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                                that.navigateToPast();\n                                table = that.element.find(TABLE).first();\n                            } else {\n                                navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                                that.navigateToFuture();\n                                table = that.element.find(TABLE).last();\n                            }\n                        }\n                        cell = table.find(CELLSELECTORVALID).eq(cellIndex);\n                        if (cell.length) {\n                            that._focusCell(cell);\n                        } else {\n                            that._focusCell(table.find(CELLSELECTORVALID).last());\n                        }\n                    }\n\n                    if (value || method) {\n                        if (!method) {\n                            that._currentView.setDate(currentValue, value);\n                        }\n\n                        min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\n                        if (isInRange(currentValue, min, max)) {\n                            if (that.selectable && options.disableDates(currentValue)) {\n                                currentValue = that._nextNavigatable(currentValue, value);\n                            }\n                            if (!that._dateInViews(currentValue)) {\n                                if (value > 0) {\n                                    navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                                    that._navigate(NEXTARROW, 1);\n                                } else {\n                                    navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                                    that._navigate(NEXTARROW, -1);\n                                }\n                            }\n                            cell = that._cellByDate(currentValue);\n                            that._current = currentValue;\n                            that._focusCell(cell);\n                        }\n                    }\n                }\n\n                if (navigate) {\n                    that.trigger(NAVIGATE);\n                }\n\n                if (prevent) {\n                    e.preventDefault();\n                }\n\n                return that._current;\n\n            },\n\n            _visualizeSelectedDatesInView: function() {\n                var that = this;\n                var selectedDates = {};\n                var cells;\n\n                $.each(that._selectDates, function(index, value) {\n                    selectedDates[kendo.calendar.views[0].toDateString(value)] = value;\n                });\n                that.selectable.clear();\n                cells = that.element.find(TABLE)\n                    .find(CELLSELECTOR)\n                    .filter(function(index, element) {\n                        return selectedDates[$(element.firstChild).attr(kendo.attr(VALUE))];\n                    });\n\n                if (cells.length > 0) {\n                    that.selectable._selectElement(cells, true);\n                }\n            },\n\n            _nextNavigatable: function(currentValue, value) {\n                var that = this;\n                var disabled = true;\n                var view = that._currentView;\n                var min = that.options.min;\n                var max = that.options.max;\n                var isDisabled = that.options.disableDates;\n                var navigatableDate = new Date(currentValue.getTime());\n\n                view.setDate(navigatableDate, -value);\n                while (disabled) {\n                    view.setDate(currentValue, value);\n                     if (!isInRange(currentValue, min, max)) {\n                        currentValue = navigatableDate;\n                        break;\n                    }\n                    disabled = isDisabled(currentValue);\n                }\n                return currentValue;\n            },\n\n            _toggleSelection: function(event) {\n                var that = this;\n\n                that.selectable._lastActive = $(that._cell[0]);\n\n                if ($(that._cell[0]).hasClass(SELECTED)) {\n                    that.selectable._unselect($(that._cell[0]));\n                }\n                else {\n                    that.selectable.value($(that._cell[0]));\n                }\n                that.selectable.trigger(CHANGE, { event: event });\n            },\n\n            _option: function(option, value) {\n                var that = this;\n                var options = that.options;\n                var currentValue = that._value || that._current;\n                var isBigger;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = kendo.parseDate(value, options.format, options.culture);\n\n                if (!value) {\n                    return;\n                }\n\n                options[option] = new DATE(+value);\n\n                if (option === MIN) {\n                    isBigger = value > currentValue;\n                } else {\n                    isBigger = currentValue > value;\n                }\n\n                if (isBigger) {\n                    that._value = null;\n                }\n\n                that.navigate(that._value);\n\n                that._toggle();\n            },\n\n            _cellByDate: function(value) {\n                if (value instanceof Date) {\n                    value = this._currentView.toDateString(value);\n                }\n                return this.element.find(TABLE).find(\"td:not(.\" + OTHERMONTH + \")\")\n                .filter(function() {\n                    return $(this.firstChild).attr(kendo.attr(VALUE)) === value;\n                });\n            },\n\n            _selectable: function() {\n                var that = this;\n                var selectable = that.options.selectable;\n\n                if (that.selectable) {\n                    that.selectable.destroy();\n                    that.selectable = null;\n                }\n\n                if (that.rangeSelectable) {\n                    that.rangeSelectable.destroy();\n                    that.rangeSelectable = null;\n                }\n\n                if (selectable.toLowerCase() === RANGE) {\n                    that.rangeSelectable = new RangeSelectable(that.wrapper, {\n                        calendar: that,\n                        filter: \"table.k-month \" + CELLSELECTORVALID,\n                        change: that._rangeSelection.bind(that)\n                    });\n                } else {\n                    that.selectable = new Selectable(that.wrapper, {\n                        aria: true,\n                        dragToSelect: false,\n                        inputSelectors: \"input,textarea,.k-multiselect-wrap,select,button,.k-button>span,.k-button>img,span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,span.k-svg-icon.k-svg-i-caret-alt-down,span.k-svg-icon.k-svg-i-caret-alt-up\",\n                        multiple: Selectable.parseOptions(selectable).multiple,\n                        filter: \"table.k-content \" + CELLSELECTORVALID,\n                        change: that._selection.bind(that),\n                        relatedTarget: that._onRelatedTarget.bind(that),\n                        unselect: that._unselecting.bind(that)\n                    });\n                }\n            },\n\n            _onRelatedTarget: function(target) {\n                var that = this;\n\n                if (that.selectable.options.multiple && target.is(CELLSELECTORVALID) && target.length > 1) {\n                    that._focusCell(target.first(), true);\n                }\n            },\n\n            _getFirstViewDate: function(currentView) {\n                var that = this;\n                var options = that.options;\n                var ranges = [];\n                var start;\n                var end;\n                var current = new Date(+that._current);\n                var i;\n\n                for (i = 0; i < options.views; i++) {\n                    start = currentView.first(current);\n                    end = currentView.last(current);\n\n                    if (+end > +options.max) {\n                        if (+start <= +options.max) {\n                            ranges.push({ start: start, end: new Date(+options.max) });\n                        }\n                        break;\n                    }\n\n                    ranges.push({ start: start, end: end });\n\n                    current = new Date(+shiftDate(end, currentView.name, 1));\n                }\n\n                current = new Date(+that._current);\n\n                for (i = 0; i < options.views; i++) {\n                    start = currentView.first(current);\n                    end = currentView.last(current);\n\n                    if (+start < +options.min) {\n                        if (+end >= +options.min) {\n                            ranges.push({ start: new Date(+options.min), end: end });\n                        }\n                        break;\n                    }\n\n                    ranges.push({ start: start, end: end });\n\n                    current = new Date(+shiftDate(start, currentView.name, -1));\n                }\n\n                start = ranges[0].start;\n\n                for (i = 0; i < options.views + 1; i++) {\n                    if (!ranges[i]) {\n                        break;\n                    }\n\n                    if (+start > +ranges[i].start) {\n                        start = ranges[i].start;\n                    }\n                }\n\n                return new Date(+start);\n            },\n\n            _canRenderNextView: function(viewDate) {\n                var fullYear = viewDate.getFullYear();\n                var month = viewDate.getMonth();\n                var date = viewDate.getDate();\n                var max = this.options.max;\n                var maxYear = max.getFullYear();\n                var maxMonth = max.getMonth();\n\n\n                if (fullYear < maxYear) {\n                    return true;\n                }\n\n                if (fullYear === maxYear && month < maxMonth) {\n                    return true;\n                }\n\n                if (fullYear === maxYear && month === maxMonth && date < max.getDate()) {\n                    return true;\n                }\n\n                if (fullYear === maxYear && month === maxMonth && date === max.getDate()) {\n                    return true;\n                }\n\n                return false;\n            },\n\n            _initViews: function(viewOptions) {\n                var that = this;\n                var options = that.options;\n                var index = calendar.viewsEnum[viewOptions.viewName];\n                var currentView = calendar.views[index];\n                var viewDate;\n\n                that._current = new DATE(+calendar.restrictValue(viewOptions.value, options.min, options.max));\n                that._views = [];\n                that._index = index;\n                viewDate = that._getFirstViewDate(currentView);\n                viewDate.setDate(1);\n\n                that._firstViewValue = new Date(+viewDate);\n\n                for (var i = 0; i < options.views; i++) {\n                    viewDate = i ? shiftDate(viewDate, currentView.name, 1) : viewDate;\n                    viewDate.setDate(1);\n\n                    if (!that._canRenderNextView(viewDate)) {\n                        break;\n                    }\n\n                    that._table = $(currentView.content($.extend({\n                        min: options.min,\n                        max: options.max,\n                        date: viewDate,\n                        url: options.url,\n                        dates: options.dates,\n                        format: options.format,\n                        culture: options.culture,\n                        disableDates: options.disableDates,\n                        showHeader: options.showViewHeader,\n                        isWeekColumnVisible: options.weekNumber,\n                        otherMonth: options.otherMonth,\n                        messages: options.messages,\n                        contentClasses: \"k-calendar-table k-content\"\n                    }, that[currentView.name])));\n\n                    that._table.appendTo(that.tablesWrapper).addClass(\"k-\" + currentView.name);\n                    that._views.push(that._table);\n                }\n\n                that._currentView = currentView;\n\n                that.tablesWrapper.attr(\"class\", \"k-calendar-view k-calendar-\" + currentView.name + `view ${that.options.orientation != \"vertical\" ? \"k-hstack\" : \"k-vstack\"} k-align-items-start k-justify-content-center`);\n\n                that._updateHeader();\n\n                that._aria();\n            },\n\n            _rangeSelection: function(e) {\n                var that = this;\n                var range = e.sender.range();\n                var useEnd = e.sender._useEnd;\n                var useStart = e.sender._useStart;\n                var initialRange = that.selectRange() || {};\n                var start;\n                var end;\n\n                if (range.start) {\n                    start = toDateObject(range.start.find(\"a\"));\n                }\n\n                if (range.end) {\n                    end = toDateObject(range.end.find(\"a\"));\n                }\n\n                that._range = { start: useStart ? initialRange.start : start, end: useEnd ? initialRange.end : end };\n\n                if (!that._preventChange) {\n                    that.trigger(CHANGE);\n                }\n            },\n\n            _selection: function(e) {\n                var that = this;\n                var selectElements = e.sender.value();\n                var domEvent = e.event;\n                var currentTarget = $(domEvent && domEvent.currentTarget);\n                var isCell = currentTarget.is(TD);\n                var currentValue;\n\n                if (that.options.selectable === SINGLE) {\n                    that._validateValue(selectElements[0] ? toDateObject(selectElements.first().find(\"a\")) : e.sender._lastActive ? toDateObject(e.sender._lastActive.find(\"a\")) : that.value());\n                }\n\n                if (that.options.selectable == MULTIPLE) {\n\n                    if (isCell) {\n                        currentValue = toDateObject(currentTarget.find(\"a\"));\n                    }\n\n                    if (domEvent && domEvent.ctrlKey) {\n                        if (isCell) {\n                            if (currentTarget.hasClass(SELECTED)) {\n                                that._selectDates.push(currentValue);\n                            } else {\n                                that._deselect(currentValue);\n                            }\n                        } else {\n                            that.element.find(\"table \" + CELLSELECTORVALID).each(function(index, element) {\n                                var value = toDateObject($(element).find(\"a\"));\n                                that._deselect(value);\n                            });\n                            that._addSelectedCellsToArray();\n                        }\n                    } else if (domEvent && domEvent.shiftKey) {\n                        that._selectRange(toDateObject(e.sender._lastActive ? e.sender._lastActive.find(\"a\") : selectElements.first().find(\"a\")), currentValue);\n                    } else if (isCell) {\n                        that._selectDates = [];\n                        that._selectDates.push(currentValue);\n                    } else {\n                        that._selectDates = [];\n                        that._addSelectedCellsToArray();\n                    }\n                }\n\n                if (!that._preventChange) {\n                    that.trigger(CHANGE);\n                }\n            },\n\n            _addSelectedCellsToArray: function() {\n                var that = this;\n                if (!that.selectable) {\n                    return;\n                }\n                that.selectable.value().each(function(index, item) {\n                    var date = toDateObject($(item.firstChild));\n                    if (!that.options.disableDates(date)) {\n                        that._selectDates.push(date);\n                    }\n                });\n            },\n\n            _deselect: function(date) {\n                var that = this;\n                var currentDateIndex = that._selectDates.map(Number).indexOf(+date);\n                 if (currentDateIndex != -1) {\n                    that._selectDates.splice(currentDateIndex, 1);\n                }\n            },\n\n            _unselecting: function(e) {\n                var that = this;\n                var element = e.element;\n\n                if (that.options.selectable === SINGLE && !mobileOS && element.hasClass(FOCUSED)) {\n                    e.preventDefault();\n                }\n            },\n\n            _visibleRange: function() {\n                var tables = this.element.find(DOT + CALENDAR_VIEW + EMPTY + TABLE);\n                var firstDateInView = toDateObject(tables.first().find(CELLSELECTOR).first().find(\"a\"));\n                var lastDateInView = toDateObject(tables.last().find(CELLSELECTOR).last().find(\"a\"));\n                return { start: firstDateInView, end: lastDateInView };\n            },\n\n            _dateInViews: function(date) {\n                var that = this;\n                var tables = that.element.find(DOT + CALENDAR_VIEW + EMPTY + TABLE);\n                var firstDateInView = toDateObject(tables.first().find(CELLSELECTOR).first().find(\"a\"));\n                var lastDateInView = toDateObject(tables.last().find(CELLSELECTOR).last().find(\"a\"));\n\n                date = new Date(date.toDateString());\n\n                return +date <= +lastDateInView && +date >= +firstDateInView;\n            },\n\n            _fillRange: function(start, end) {\n                var that = this;\n                var daysDifference;\n\n                that._selectDates = [];\n                daysDifference = daysBetweenTwoDates(start, end);\n                addDaysToArray(that._selectDates, daysDifference, start, that.options.disableDates);\n            },\n\n            _selectRange: function(start, end) {\n                var that = this;\n                var current;\n\n                if (+end < +start) {\n                    current = end;\n                    end = start;\n                    start = current;\n                }\n\n                that._fillRange(start, end);\n                that._visualizeSelectedDatesInView();\n            },\n\n            _header: function() {\n                var that = this;\n                var element = that.element;\n                var buttons;\n                var header = element.find(\".k-calendar-header\");\n\n                if (!header.length) {\n                    header = $(`<div class=\"k-calendar-header ${that.options.orientation != \"vertical\" ? \"k-hstack\" : \"k-vstack\"}\">` +\n                        `<a id=\"calendar-title\" tabindex=\"-1\" href=\"#\" role=\"button\" class=\"k-calendar-title k-title k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base\" aria-live=\"polite\"></a>` +\n                        '<span class=\"k-spacer\"></span>' +\n                        `<span class=\"k-calendar-nav ${that.options.orientation != \"vertical\" ? \"k-hstack\" : \"k-vstack\"}\">` +\n                            `<a tabindex=\"-1\" href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-prev-view\" ` + ARIA_LABEL + `=\"Previous\">${kendo.ui.icon({ icon: \"chevron-left\", iconClass: \"k-button-icon\" })}</a>` +\n                            `<a tabindex=\"-1\" href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-next-view\" ` + ARIA_LABEL + `=\"Next\">${kendo.ui.icon({ icon: \"chevron-right\", iconClass: \"k-button-icon\" })}</a>` +\n                        '</span>' +\n                    '</div>').prependTo(element);\n                }\n\n                that.header = header;\n\n                header.on(MOUSEENTER + ns + \" \" + MOUSELEAVE_NS + \" \" + FOCUS + ns + \" \" + BLUR + ns, \".k-button\", mousetoggle)\n                    .on(CLICK, function() { return false; })\n                    .on(CLICK + ns, \".k-button.k-calendar-title\", that._calendarTitleClick.bind(that))\n                    .on(CLICK + ns, \".k-button.k-calendar-prev-view\", that._prevViewClick.bind(that))\n                    .on(CLICK + ns, \".k-button.k-calendar-next-view\", that._nextViewClick.bind(that));\n\n                buttons = header.find(\".k-button\");\n\n                that._title = buttons.filter(\".k-calendar-title\");\n                that._navContainer = header.find(\".k-calendar-nav\");\n                that[PREVARROW] = buttons.filter(\".k-calendar-prev-view\");\n                that[NEXTARROW] = buttons.filter(\".k-calendar-next-view\");\n            },\n\n            _calendarTitleClick: function() {\n                this.navigateUp();\n                this.focus();\n                this.trigger(NAVIGATE);\n            },\n\n            _prevViewClick: function(e) {\n                e.preventDefault();\n                this.navigateToPast();\n                this.focus();\n                this.trigger(NAVIGATE);\n            },\n\n            _nextViewClick: function(e) {\n                e.preventDefault();\n                this.navigateToFuture();\n                this.focus();\n                this.trigger(NAVIGATE);\n            },\n\n            _wrapper: function() {\n                this.tablesWrapper = $('<div tabindex=\"0\" role=\"grid\" class=\"k-calendar-view\" aria-labelledby=\"calendar-title\" />').insertAfter(this.element[0].firstChild);\n            },\n\n            _templates: function() {\n                var that = this;\n                var options = that.options;\n                var month = options.month;\n                var content = month.content;\n                var weekNumber = month.weekNumber;\n                var empty = month.empty;\n\n                that.month = {\n                    content: template((data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><a tabindex=\"-1\" class=\"k-link${data.linkClass}\" href=\"${data.url}\" ${kendo.attr(VALUE)}=\"${data.dateString}\" title=\"${data.title}\">${content ? kendo.template(content, { useWithBlock: !!content })(data) : data.value}</a></td>`, { useWithBlock: !!content }),\n                    empty: template((data) => `<td role=\"gridcell\"${empty ? '>' : ' class=\"k-calendar-td k-out-of-range\">'}${(empty ? kendo.template(empty, { useWithBlock: !!empty })(data) : \"<a class='k-link'></a>\")}</td>`, { useWithBlock: !!empty }),\n                    weekNumber: template((data) => `<th class=\"k-calenar-td k-alt\">${weekNumber ? kendo.template(weekNumber, { useWithBlock: !!weekNumber })(data) : data.weekNumber}</th>`, { useWithBlock: !!weekNumber })\n                };\n            },\n\n            _footer: function() {\n                var that = this;\n                var options = that.options;\n                var template = options.footer !== false ? kendo.template(that.options.footer || ((data) => kendo.toString(data,\"D\", options.culture)), { useWithBlock: false }) : null;\n                var today = getToday();\n                var element = that.element;\n                var footer = element.find(\".k-footer\");\n\n                if (!template) {\n                    that._toggle(false);\n                    footer.hide();\n                    return;\n                }\n\n                if (!footer[0]) {\n                    footer = $(`<div class=\"k-footer\">\n                    <button tabindex=\"-1\" class=\"k-calendar-nav-today k-flex k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-button-flat k-button-flat-primary k-rounded-md\">\n                        <span class=\"k-button-text\"></span>\n                    </button>\n                </div>`).appendTo(element);\n                }\n\n                that._today = footer.show()\n                    .find(\".k-button-flat-primary\")\n                    .attr(\"title\", kendo.toString(today, \"D\", that.options.culture));\n\n                footer.find(\".k-button-text\")\n                    .html(template(today));\n\n                that._toggle();\n            },\n\n            _navigate: function(arrow, modifier) {\n                var that = this;\n                var index = that._index + 1;\n                var currentValue = new DATE(+that._current);\n                var originaValue = new DATE(+that._current);\n                var offset;\n\n                arrow = that[arrow];\n\n                offset = that._cellByDate(currentValue).closest(TABLE).index();\n\n                if (modifier > 0) {\n                    offset = 1 - offset;\n                } else {\n                    offset = offset + 1;\n                }\n\n                if (!arrow || !arrow.hasClass(DISABLED)) {\n                    if (index > 3) {\n                        currentValue.setFullYear(currentValue.getFullYear() + 100 * (modifier * offset));\n                    } else {\n                        calendar.views[index].setDate(currentValue, (modifier * offset));\n                    }\n\n                    that.navigate(currentValue);\n\n                    if (that._dateInViews(originaValue)) {\n                        that._focusCell(that._cellByDate(originaValue));\n                        that._current = originaValue;\n                    } else {\n                        if (index > 3) {\n                            originaValue.setFullYear(originaValue.getFullYear() + 100 * modifier);\n                        } else {\n                            calendar.views[index].setDate(originaValue, modifier);\n                        }\n                        that._focusCell(that._cellByDate(originaValue));\n                        that._current = originaValue;\n                    }\n                }\n            },\n\n            _toggle: function(toggle) {\n                var that = this;\n                var options = that.options;\n                var isTodayDisabled = options.selectable !== RANGE && that.options.disableDates(getToday());\n                var link = that._today;\n\n                if (toggle === undefined$1) {\n                    toggle = isInRange(getToday(), options.min, options.max);\n                }\n\n                if (link) {\n                    link.off(CLICK + ns);\n\n                    if (toggle && !isTodayDisabled) {\n                        link.addClass(TODAY)\n                        .removeClass(DISABLED)\n                        .on(CLICK + ns, function(e) { that._todayClick(e); that.focus(); });\n                    } else {\n                        link.removeClass(TODAY)\n                        .addClass(DISABLED)\n                        .on(CLICK + ns, function prevent(e) {\n                            e.preventDefault();\n                        });\n                    }\n                }\n            },\n\n            _click: function(link) {\n                var that = this;\n                var options = that.options;\n                var currentValue = new Date(+that._current);\n                var value = toDateObject(link);\n\n                kendo.date.adjustDST(value, 0);\n\n                that._currentView.setDate(currentValue, value);\n                that._current = value;\n\n                if (that._currentView.name !== options.depth) {\n                    that.navigateDown(calendar.restrictValue(currentValue, options.min, options.max));\n                    that._focusCell(that._cellByDate(that._current));\n                    that.trigger(NAVIGATE);\n                } else {\n                    that._focusCell(link.closest(TD));\n                }\n\n                that.focus();\n            },\n\n            _blur: function() {\n                var that = this;\n\n                if (that._cell) {\n                    that._cell.removeClass(FOCUSED);\n                }\n            },\n\n            _focus: function() {\n                var cell = this._cell;\n\n                if (!cell || !$.contains(this.tablesWrapper[0], cell[0])) {\n                    if (this._current && this._dateInViews(this._current)) {\n                        cell = this._cellByDate(this._current);\n                    } else {\n                        cell = this.tablesWrapper.find(CELLSELECTORVALID).first();\n                    }\n                }\n\n                this._focusCell(cell);\n            },\n\n            _focusCell: function(cell) {\n                var that = this;\n                var cellId = that._cellID;\n\n                if (that._cell && that._cell.length) {\n                    that._cell[0].removeAttribute(ARIA_LABEL);\n                    that._cell.removeClass(FOCUSED);\n                    that.tablesWrapper.removeAttr(ARIA_ACTIVEDESCENDANT);\n\n                    if (that._cell.attr(ID) === cellId) {\n                        that._cell[0].removeAttribute(ID);\n                    }\n                }\n\n                that._cell = cell;\n\n                if (cell.attr(ID)) {\n                    that.tablesWrapper.attr(ARIA_ACTIVEDESCENDANT, cell.attr(ID));\n                } else if (cellId) {\n                    cell.attr(ID, cellId);\n                    that.tablesWrapper.attr(ARIA_ACTIVEDESCENDANT, cellId);\n                }\n\n                cell.addClass(FOCUSED);\n\n                if (cell.length && that._currentView.name == MONTH) {\n                    that._current = toDateObject(cell.find(\"a\"));\n                }\n            },\n\n            _todayClick: function(e) {\n                var that = this;\n                var disabled = that.options.disableDates;\n                var today = getToday();\n                var navigate = false;\n\n                e.preventDefault();\n\n                if (disabled(today)) {\n                    return;\n                }\n\n                that._value = today;\n\n                if (that.options.selectable === MULTIPLE) {\n                    that._selectDates = [today];\n                }\n\n                if (that.options.selectable === RANGE) {\n                    that.rangeSelectable.clear(true);\n                    that._range = { start: today, end: null };\n                }\n\n                if (that._currentView.name != MONTH || !that._dateInViews(today)) {\n                    navigate = true;\n                }\n\n                that.navigate(today, that.options.depth);\n\n                if (that.options.selectable === SINGLE) {\n                    that.selectable._lastActive = null;\n                }\n\n                if (navigate) {\n                    that.trigger(NAVIGATE);\n                }\n\n                that.trigger(CHANGE);\n            },\n\n            _validateValue: function(value) {\n                var that = this;\n                var options = that.options;\n                var min = options.min;\n                var max = options.max;\n\n                value = kendo.parseDate(value, options.format, options.culture);\n\n                if (value !== null) {\n                    value = new DATE(+value);\n\n                    if (!isInRange(value, min, max)) {\n                        value = null;\n                    }\n                }\n\n                if (value === null || !that.options.disableDates(new Date(+value))) {\n                    that._value = value;\n                } else if (that._value === undefined$1) {\n                    that._value = null;\n                }\n\n                return that._value;\n            },\n\n            _updateAria: function(ariaTemplate, date) {\n                var that = this;\n                var cell = that._cellByDate(date || that.current());\n                var valueType = that.view().valueType();\n                var current = date || that.current();\n                var text;\n\n                that._focusCell(cell);\n\n                if (valueType === MONTH) {\n                    text = kendo.toString(current, \"MMMM\");\n                } else if (valueType === \"date\") {\n                    text = kendo.toString(current, \"D\");\n                } else {\n                    text = cell.text();\n                }\n\n                cell.attr(ARIA_LABEL, ariaTemplate({ current: current, valueType: valueType, text: text }));\n                return cell.attr(ID);\n            },\n\n            clearSelection: function() {\n                var that = this;\n\n                if (that.selectable) {\n                    that.element.find(DOT + SELECTED).removeClass(SELECTED).removeAttr(ARIA_SELECTED);\n                }\n\n                if (that.rangeSelectable) {\n                    that.rangeSelectable.clear(true);\n                }\n            },\n\n            _restoreSelection: function() {\n                var that = this;\n                var range;\n                var selectable = that.options.selectable;\n\n                if (that._currentView.name !== that.options.depth) {\n                    return;\n                }\n\n                that._preventChange = true;\n\n                if (selectable === RANGE) {\n                    range = that.selectRange();\n\n                    if (!range || !range.start) {\n                        that._preventChange = false;\n                        return;\n                    }\n\n                    that.selectRange(range);\n                }\n\n                if (selectable === SINGLE && that.value()) {\n                    that.selectable.value(that._cellByDate(that.value()));\n                }\n\n                if (selectable === MULTIPLE) {\n                    that._visualizeSelectedDatesInView();\n                }\n\n                that._preventChange = false;\n            },\n\n            value: function(value) {\n                var that = this;\n                var cell;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                value = that._validateValue(value);\n\n                that.clearSelection();\n\n                if (value && !that._dateInViews(value)) {\n                    that.navigate(value);\n                }\n\n                if (value !== null && that._currentView.name === MONTH) {\n                    cell = that._cellByDate(value);\n\n                    if (that.selectable) {\n                        that.selectable.value(cell);\n                    }\n\n                    if (that.rangeSelectable) {\n                        that.rangeSelectable.start(cell);\n                        that.rangeSelectable._lastActive = cell;\n                    }\n                }\n            },\n\n            selectDates: function(dates) {\n                var that = this;\n                var validSelectedDates;\n                var datesUnique;\n\n                if (dates === undefined$1) {\n                    return that._selectDates;\n                }\n\n                datesUnique = dates\n                    .map(function(date) { return date.getTime(); })\n                    .filter(function(date, position, array) {\n                        return array.indexOf(date) === position;\n                    })\n                    .map(function(time) { return new Date(time); });\n\n                validSelectedDates = $.grep(datesUnique, function(value) {\n                    if (value) {\n                        return +that._validateValue(new Date(value.setHours(0, 0, 0, 0))) === +value;\n                    }\n                });\n                that._selectDates = validSelectedDates.length > 0 ? validSelectedDates : (datesUnique.length === 0 ? datesUnique : that._selectDates);\n                that._visualizeSelectedDatesInView();\n            },\n\n            selectRange: function(range) {\n                var that = this;\n                var startInRange;\n                var endInRange;\n                var visibleRange;\n\n                if (range === undefined$1) {\n                    return that._range;\n                }\n\n                that._range = range;\n\n                if (!range.start) {\n                    return;\n                }\n\n                visibleRange = that._visibleRange();\n\n                startInRange = that._dateInViews(range.start);\n                endInRange = range.end && that._dateInViews(range.end);\n\n                if (!startInRange && endInRange) {\n                    that.rangeSelectable.selectTo(that._cellByDate(range.end));\n                }\n\n                if (startInRange && endInRange) {\n                    that.rangeSelectable.range(that._cellByDate(range.start), that._cellByDate(range.end));\n                }\n\n                if (range.end && startInRange && !endInRange) {\n                    that.rangeSelectable.selectFrom(that._cellByDate(range.start));\n                }\n\n                if (!range.end && startInRange) {\n                    that.rangeSelectable.start(that._cellByDate(range.start));\n                }\n\n                if (+visibleRange.start > +range.start && +visibleRange.end < +range.end) {\n                    that.rangeSelectable.mid(that.element.find(CELLSELECTORVALID));\n                }\n            }\n        });\n\n        kendo.ui.plugin(MultiViewCalendar);\n\n        function mousetoggle(e) {\n            var disabled = $(this).hasClass(\"k-disabled\");\n\n            if (!disabled) {\n                $(this).toggleClass(HOVER, MOUSEENTER.indexOf(e.type) > -1 || e.type == FOCUS);\n            }\n        }\n\n        function addDaysToArray(array, numberOfDays, fromDate, disableDates) {\n            for (var i = 0; i <= numberOfDays; i++) {\n                var nextDay = new Date(fromDate.getTime());\n                nextDay = new Date(nextDay.setDate(nextDay.getDate() + i));\n                if (!disableDates(nextDay)) {\n                    array.push(nextDay);\n                }\n            }\n        }\n\n        function daysBetweenTwoDates(startDate, endDate) {\n            if (+endDate < +startDate) {\n                var temp = +startDate;\n                calendar.views[0].setDate(startDate, endDate);\n                calendar.views[0].setDate(endDate, new Date(temp));\n            }\n            var fromDateUTC = Date.UTC(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\n            var endDateUTC = Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\n\n            return Math.ceil((+endDateUTC - +fromDateUTC) / kendo.date.MS_PER_DAY);\n        }\n\n        function shiftDate(value, dimension, numberOfViews) {\n            var current;\n            if (dimension === MONTH) {\n                current = new DATE(value.getFullYear(), value.getMonth() + numberOfViews, value.getDate());\n                current.setFullYear(value.getFullYear());\n                if (Math.abs(current.getMonth() - value.getMonth()) > numberOfViews || numberOfViews > 10) {\n                    current.setMonth(value.getMonth() + numberOfViews);\n                    current = calendar.views[0].last(current);\n                }\n                return current;\n            } else if (dimension === \"year\") {\n                current = new DATE(1, value.getMonth(), value.getDate());\n                current.setFullYear(value.getFullYear() + numberOfViews);\n                if (Math.abs(current.getFullYear() - value.getFullYear()) > numberOfViews) {\n                    current = new DATE(1, value.getMonth(), 1);\n                    current.setFullYear(value.getFullYear() + numberOfViews);\n                    current = calendar.views[1].last(current);\n                }\n                return current;\n            } else if (dimension === \"decade\") {\n                current = new DATE(1, value.getMonth(), value.getDate());\n                current.setFullYear(value.getFullYear() + 10 * numberOfViews);\n                if (Math.abs(current.getFullYear() - value.getFullYear()) > 10 * numberOfViews) {\n                    current = new DATE(1, value.getMonth(), 1);\n                    current.setFullYear(value.getFullYear() + 10 * numberOfViews);\n                    current = calendar.views[2].last(current);\n                }\n                return current;\n            } else if (dimension === \"century\") {\n                current = new DATE(1, value.getMonth(), value.getDate());\n                current.setFullYear(value.getFullYear() + 100 * numberOfViews);\n                if (Math.abs(current.getFullYear() - value.getFullYear()) > 100 * numberOfViews) {\n                    current = new DATE(1, value.getMonth(), 1);\n                    current.setFullYear(value.getFullYear() + 100 * numberOfViews);\n                    current = calendar.views[3].last(current);\n                }\n                return current;\n            }\n        }\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}
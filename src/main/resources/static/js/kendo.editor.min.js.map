{"version":3,"sources":["raw-js/kendo.editor.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoeditor","js","this","$","editorNS","Command","GenericCommand","registerTool","Tool","RestorePoint","extend","InsertHtmlCommand","InsertHtmlTool","kendo","UndoRedoStack","Observable","init","options","fn","call","clear","events","push","command","stack","slice","currentCommandIndex","undo","canUndo","trigger","redo","canRedo","length","deepExtend","util","undefined$1","window","Class","Widget","ui","os","support","mobileOS","browser","keys","outerWidth","_outerWidth","outerHeight","_outerHeight","FORMATTING_MARKS_STYLE_ID","FORMATTING_MARKS_OVERLAY_ID","FORMATTING_MARKS_OVERLAY_WRAPPER_ID","SELECT","SELECT_OVERLAY_SELECTOR","PLACEHOLDER_CLASS","PLACEHOLDER_TAG_ID","NATIVE_TOOLS","EditorUtils","editorWrapperTemplate","formatByName","name","format","i","inArray","tags","getToolCssClass","icon","cssClass","superscript","subscript","justifyLeft","justifyCenter","justifyRight","justifyFull","insertUnorderedList","insertOrderedList","insertUpperRomanList","insertLowerRomanList","import","indent","outdent","createLink","unlink","insertImage","insertFile","viewHtml","foreColor","backColor","createTable","addColumnLeft","addColumnRight","addRowAbove","addRowBelow","deleteRow","deleteColumn","mergeCellsHorizontally","mergeCellsVertically","splitCellHorizontally","splitCellVertically","tableProperties","tableCellProperties","tableWizardInsert","tableAlignLeft","tableAlignCenter","tableAlignRight","cleanFormatting","copyFormat","applyFormat","pdf","nameToKebab","replace","toLowerCase","toolName","tool","Editor","defaultTools","registerFormat","formatName","formats","cacheComments","content","comments","index","retrieveComments","supportedContentEditable","document","documentElement","toolGroups","basic","scripts","alignment","lines","symbols","links","lists","dent","tablesWizard","tablesInsert","tablesAddDelete","tablesMerge","tablesPosition","formatPainter","element","toolbarContainer","type","domElement","that","editor","dom","Dom","_registerHandler","closest","update","bind","_setupType","_initToolbar","_setupHeight","_resizable","_initializeContentElement","_setupKeyboard","clipboard","Clipboard","undoRedoStack","_populateValue","mousedown","_endTyping","mouseup","e","_mouseup","_initializeImmutables","_ariaLabel","wrapper","find","toolbar","resize","notify","_showWatermarkOverlay","messages","auto","bold","italic","underline","strikethrough","fitToCell","lineHeight","formattingMarks","insertHtml","fontName","fontNameInherit","fontSize","fontSizeInherit","formatBlock","formatting","style","emptyFolder","editAreaTitle","uploadFile","overflowAnchor","orderBy","orderBySize","orderByName","invalidFileType","deleteFile","overwriteFile","directoryNotFound","imageWebAddress","imageAltText","imageWidth","imageHeight","fileWebAddress","fileTitle","fileText","linkWebAddress","linkText","linkToolTip","linkOpenInNewWindow","dialogUpdate","dialogInsert","dialogOk","dialogCancel","createTableHint","tableWizard","tableTab","cellTab","accessibilityTab","caption","summary","width","height","units","cellSpacing","cellPadding","topPadding","leftPadding","bottomPadding","rightPadding","independentCellPaddings","cellMargin","captionAlignment","position","background","tableBackground","id","border","borderStyle","borderWidth","borderColor","collapseBorders","wrapText","associateCellsWithHeaders","alignLeft","alignCenter","alignRight","alignLeftTop","alignCenterTop","alignRightTop","alignLeftMiddle","alignCenterMiddle","alignRightMiddle","alignLeftBottom","alignCenterBottom","alignRightBottom","alignRemove","columns","rows","selectAllCells","applyToColumn","applyToRow","exportAs","print","headerRows","headerColumns","tableSummaryPlaceholder","associateNone","associateScope","associateIds","borderNone","placeholder","nonce","unsafeInline","encoded","formattingMarksRefreshDelay","domain","resizable","deserialization","custom","serialization","entities","semantic","optimizeTags","keepEOL","pasteCleanup","all","css","keepNewLines","msAllFormatting","msConvertLists","msTags","none","span","stylesheets","dialogOptions","modal","draggable","animation","imageBrowser","fileBrowser","navigateOnTab","text","value","tools","destroy","_deregisterHandlers","clearTimeout","_spellCorrectTimeout","_focusOutside","windowInstance","tablePopup","_destroyUploadWidget","_destroyResizings","_destroyFormattingMarksOverlay","setOptions","_setOptionsTools","_initializePlaceholder","createRange","RangeUtils","encodedValue","encode","exec","params","range","Error","body","getAttribute","keyboard","isTypingInProgress","_focusBody","selectRange","_range","getRange","Object","map","key","immutables","test","execCommand","async","change","_selectionChange","managesUndoRedo","focus","restoreSelection","selection","getSelection","rangeCount","getRangeAt","doc","startContainer","endContainer","startOffset","endOffset","setStart","collapse","SelectionUtils","selectionFromDocument","paste","html","refresh","textarea","val","remove","selectionRestorePoint","toRange","saveSelection","container","commonAncestorContainer","contains","selectedHtml","Serializer","domToXhtml","cloneContents","removeAllRanges","addRange","state","textNodes","finder","collapsed","getFormat","isFormatted","_togglePlaceholder","trim","_oldValue","currentHtml","htmlToDom","_refreshTools","_bindTools","unbind","filter","el","each","initialize","_blur","old","_containsRange","isAncestorOrSelf","_createContentElement","iframe","wnd","lang","specifiedDomain","domainScript","src","hide","title","frameBorder","addClass","attr","tabIndex","insertBefore","location","hostname","contentWindow","contentDocument","one","_decorateFormatting","getElementsByTagName","open","write","isRtl","ios","edge","chrome","href","join","close","_deleteSavedRange","component","dataSource","items","tag","className","formattingElement","getKendoDropDownList","data","list","getEffectiveBackground","inlineStyle","_appendFormattingMarksStyles","$head","head","append","_appendFormattingMarksOverlay","_formattingMarksOverlay","handlers","_handlers","h","off","handler","_uploadWidget","endTyping","scrollTop","activeElement","_activeElement","scrollHeight","clientHeight","msie","left","top","opacity","appendTo","_handleToolbarClick","target","_immutablesContext","Immutables","immutablesContext","editableTextNodes","blurTrigger","mousedownTrigger","createElement","setAttribute","appendChild","interval","setInterval","last","clearInterval","setTimeout","_mousedown","touch","keydown","_spellCorrect","parentElement","nodeName","_cachedHeight","restoreHeight","keyCode","BACKSPACE","DELETE","F10","first","preventPopupHide","preventDefault","LEFT","RIGHT","offset","next","nextChar","nodeType","nodeValue","toolFromShortcut","toolOptions","keyPressCommand","_runPostContentKeyCommands","keypress","_showElementResizeHandles","keyup","selectionCodes","TAB","PAGEUP","PAGEDOWN","END","HOME","UP","DOWN","INSERT","ctrlKey","altKey","shiftKey","_refreshInterval","_handleSpaceAndNewLines","click","selectNode","focusin","hasAttribute","_showWindow","focusout","active","popup","toolbarContainerElement","get","_toolbarFocused","hasClass","removeClass","_hideWindow","_initializeColumnResizing","_initializeRowResizing","_initializeElementResizing","defaults","toolbarOptions","_processToolbarItems","_setNativeTools","parentMessages","toggle","evaluateTemplates","ToolBar","on","is","_initToolbarWindow","toolbarEl","wrap","parent","prepend","kendoWindow","dragHandle","effects","minHeight","visible","autoFocus","actions","dragend","_moved","_selectionStarted","parents","stopPropagation","gecko","which","tagName","defaultValue","deserializedRoot","getAllComments","innerHTML","_resetGroups","current","result","optionsTools","j","t","guidGroupName","flatDefaultTools","processedObject","currentGroups","Array","isArray","guid","_processToolOptions","gr","includes","values","group","g","to","_processDefaultTool","isPlainObject","view","shortcuts","uiOptions","originalOptions","palette","template","showText","showIcon","tooltip","attributes","ColorTool","componentOptions","views","preview","input","buttons","_shortcutSequence","nodes","filterBy","htmlIndentSpace","_updateImmutablesState","eventNames","NS","hasOwnProperty","applyEventMap","split","toolsFromShortcut","o","changesContent","refreshDelay","applyFormattingMarks","clearFormattingMarksOverlay","_toggledFormattingMarks","children","_formattingMarksTimeout","empty","heightStyle","expectedHeight","parseInt","actualHeight","indexOf","isNaN","Keyboard","BackspaceHandler","TypingHandler","SystemHandler","SelectAllHandler","_wrapTextarea","res","ctrl","shift","alt","beforeCorrection","falseTrigger","contextmenu","mozilla","_finishUpdate","show","$body","toggleClass","overflowPopup","uiElement","trackImmutables","toolsToBeUpdated","w","editorWrap","editArea","draggableElement","insertAfter","kendoResizable","start","currentTarget","initialSize","delta","y","initialDelta","newSize","min","max","Infinity","Math","resizeend","getKendoResizable","ignore","_destroyElementResizing","ElementResizingFactory","dispose","_destroyRowResizing","RowResizing","_destroyColumnResizing","ColumnResizing","create","_showElementResizeHandlesProxy","elementResizing","parentNode","showResizeHandles","columnResizing","rowResizing","_getWindowWidth","editorElement","_overlapsWindow","box","toolbarWrapper","toolbarWrapperOffset","toolbarWrapperLeft","toolbarWrapperTop","boxOffset","boxOffsetLeft","boxOffsetTop","editorOffset","plugin","commandArguments","noop","UndoTool","enable","removeAttr","emptyElementContent","emptyTableCellContent","PDFMixin","prototype","_drawPDF","drawing","drawDOM","saveAsPDF","progress","Deferred","promise","args","then","root","exportPDF","done","dataURI","saveAs","fileName","proxyURL","proxyTarget","forceProxy","resolve","fail","err","reject","jQuery","STYLE","FLOAT","CSSFLOAT","STYLEFLOAT","CLASS","KMARKER","makeMap","len","obj","nonListBlockElements","blockElements","concat","block","selfClosing","inlineElements","inline","fillAttrs","nonEmptyNonTextContentElements","normalize","node","version","firstChild","prev","nextSibling","persistedScrollTop","whitespace","emptyspace","rgb","bom","whitespaceOrBom","cssAttributes","htmlRe","entityRe","entityTable","findNodeIndex","skipText","previousSibling","isDataNode","isAncestorOf","findClosestAncestor","rootElem","iterator","createNodeIterator","NodeFilter","SHOW_COMMENT","FILTER_ACCEPT","curNode","nextNode","getNodeLength","childNodes","splitDataNode","temp","newNode","cloneNode","denormalizedText","deleteData","attrEquals","cssFloat","blockParentOrBody","parentOfType","ownerDocument","blockParents","blocks","windowFromDocument","defaultView","parentWindow","nodeTypes","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","toHex","color","matches","x","toString","encodableChars","c","charCode","charCodeAt","entity","isBom","stripBom","stripBomNode","removeChild","insignificant","_moz_dirty","_moz_editor_bogus_node","tableCell","significantNodes","grep","child","emptyTextNode","emptyNode","significantChildNodes","isWhitespace","getTextNodes","lastTextNode","lastChild","isMarker","allowsTextContent","every","allWhitespaceContent","isEmptyspace","sibling","direction","isBlock","isPrevBlock","isNextBlock","isSelfClosing","isEmpty","isInline","isImg","isBr","scrollContainer","compatMode","scrollingElement","scrollTo","toStart","elementTop","elementHeight","marker","windowHeight","innerHeight","offsetHeight","ceil","persistScrollTop","offsetParent","offsetTop","offsetLeft","restoreScrollTop","undefined","insertAt","newElement","referenceElement","removeChildren","removeTextSiblings","closestBy","condition","rootCondition","ofType","changeTag","skipAttributes","attribute","specified","cssText","editableParent","contentEditable","unwrap","isChildOfBaseContainer","createEmptyNode","removeAttribute","mergeAttributes","origin","traverseCss","unstyle","backgroundStyle","innerText","classNames","classes","commonAncestor","ancestors","count","arguments","paths","minPathLength","output","reverse","closestSplittableParent","apply","editableParents","editableAncestor","closestEditable","types","editable","closestEditableOfType","invert","match","ensureTrailingBreaks","elements","ensureTrailingBreak","removeTrailingBreak","br","reMapTableColumns","table","colAttr","_mapColIndices","clearTableMappings","registeredColumns","rowIndex","cells","colIndex","cellIndex","cell","rowSpan","_mapColspan","colSpan","ci","ri","associateWithIds","theadRows","numberOfTheadRows","tableRows","numberOfTableRows","theadMatrix","tbodyMatrix","tHead","_getNumberOfHeaderRows","_generateIdsForColumns","_generateIdsForRows","_assignIds","col","colspan","rowspan","k","l","timestamp","Date","getTime","row","headers","pushHeaderId","forEach","_onlyUnique","_getNumberOfColumns","currentIndex","numberOfCols","Number","_getNumberOfHeaderColumns","numberOfHeaderRows","number","fontSizeMappings","quoteRe","brRe","pixelRe","emptyPRe","cssDeclaration","sizzleAttr","scriptAttr","onerrorRe","bomSpan","div","supportsLeadingWhitespace","isFunction","toEditableHtml","_toEditableImmutables","immutable","prependTo","_fillEmptyElements","p","_removeSystemElements","_resetOrderedLists","ol","originalStart","ols","_preventScriptExecution","attributesToRemove","deserialize","semanticFilter","mapStart","tagMap","end","skipEncoding","canOptimize","semanticAttributes","specifiedAttributes","textDecoration","font","fontFamily","size","inlineStyles","ignoredStylePrefixes","prop","startsWith","strong","em","b","u","item","styleObj","splice","face","styleAttr","properties","property","lastIndex","cssProperties","$node","htmlEncode","skip","childNode","mapper","previous","jqNode","serialize","shouldOptimize","isEmptyBomNode","runCustom","script","childrenCount","textOnly","selectionFromWindow","W3CSelection","selectionFromRange","rangeDocument","documentFromRange","W3CRange","updateRangeProperties","fixIvalidRange","setEnd","setStartBefore","setStartAfter","setEndBefore","setEndAfter","selectNodeContents","deleteContents","cloneRange","deleteSubtree","hasPartialSubtree","getSubtreeIterator","RangeIterator","cloneSubtree","frag","createDocumentFragment","extractContents","extractSubtree","originalRange","insertNode","startNodeName","endNodeName","startAncestor","endAncestor","compareBoundaries","ex","isInvalidRange","fromNode","_current","_next","_end","hasNext","traverse","callback","inStartContainer","inEndContainer","nodeIndex","getSubRange","subRange","textRange","createTextRange","adoptContainer","select","duplicate","right","textRangeContainer","adoptEndPoint","compareEndPoints","movedStart","movedEnd","cursorNode","textOffset","isData","anchorNode","anchorParent","cursor","moveToElementText","setEndPoint","comparison","appended","RangeEnumerator","enumerate","visit","ImmutablesRangeIterator","ImmutablesRangeEnumerator","rootNode","getEditable","nodeToPath","serializedImmutables","removeImmutables","restoreImmutables","lastType","restoreHtml","path","toRangePoint","denormalizedOffset","Marker","caret","addCaret","removeCaret","containerIndex","textNode","add","expand","isExpandable","rangeBoundary","_removeDeadMarkers","createTextNode","_normalizedIndex","pointer","shouldNormalizeStart","shouldNormalizeEnd","isBomSelected","charAt","collapsedToStart","startParent","endParent","startIndex","endIndex","boundary","immutableParent","image","stringify","partition","partitionRange","contents","mapAll","mapped","getAll","predicate","selector","getMarkers","isStartOf","isEndOf","wrapSelectedElements","startEditable","endEditable","isEnd","beforeCaret","afterCaret","search","substring","complexBlocks","IMMUTABALE","IMMUTABALE_MARKER_SELECTOR","randomId","chars","round","random","updateToolOptions","_initOptions","_toHtml","replaceWith","isDeleting","_cancelDeleting","_cancelTyping","typingInProgress","isTypingKey","backspace","del","cancelDeleting","nextImmutable","closestSelectionLi","closestImmutableLi","_removeImmutable","forwards","commonContainer","_nextNode","startRestorePoint","expandImmutablesIn","startImmutableParent","endImmutableParent","serialized","restorePoint","formatter","lockRange","releaseRange","point","createDialog","_actionButtonsTemplate","insertButtonIcon","cancelButtonIcon","renderButton","themeColor","endRestorePoint","ViewHtmlCommand","cmd","dialog","_footerTemplate","_footerMessages","center","FormatCommand","FormatTool","getKendoToolBar","getKendoToggleButton","MOUSEDOWN_NS","InlineFormatFinder","numberOfSiblings","referenceNode","textNodesCount","elementNodesCount","markerCount","findSuitable","sourceNode","findFormat","InlineFormatter","activate","formatNode","formatNodes","consolidate","outerMostInline","pop","GreedyInlineFormatFinder","greedyProperty","fontAttr","getInlineCssValue","attributeValue","pair","cssIndex","propertyAndValue","getFormatInner","parentsUntil","addBack","toArray","GreedyInlineFormatter","toCamelCase","action","InlineFormatTool","DelayedExecutionTool","FontTool","cssAttr","domAttr","widget","setDataSource","sender","newRange","ENTER","_widget","getKendoColorPicker","storedRange","_inputFocused","_popup","unselectable","_value","toCssRgba","fontWeight","togglable","fontStyle","overflow","toolIcon","commandOn","closeOnSelect","dataValueField","dataTextField","valuePrimitive","HTTP_PROTOCOL","protocolRegExp","endLinkCharsRegExp","LinkFormatFinder","LinkFormatter","markers","a","ref","UnlinkCommand","LinkCommand","url","_initialText","img","minWidth","_close","_form","_createForm","_apply","_keydown","linkUrl","_dialog","formElement","form","kendoForm","renderButtons","field","label","editorOptions","after","ESC","textInput","anchor","AutoLinkCommand","detectedLink","detectLink","linkMarker","linkRange","_ensureWebProtocol","startNode","traverser","LeftDomTextTraverser","cancelAtNode","DomTextLinkDetection","_hasProtocolPrefix","_prefixWithWebProtocol","UnlinkTool","isLink","DomPos","_detectEnd","blank","clone","_detectStart","_isLinkDetected","puntuationOptions","extendOptions","RightDomTextTraverser","_skipStartPuntuation","lastIndexOfRegExp","ii","r","str","DomTextTraverser","cancel","_traverse","edgeNode","subText","splitIndex","SPACEBAR","BlockFormatFinder","candidate","suitable","f","_resolveListsItems","until","ImmutablesNS","BlockFormatter","ancestor","_handleImmutables","images","imageAttributes","nonImages","applyFormatting","immutableFormat","namedFormat","GreedyBlockFormatter","formatTag","ListFormatter","blockFormatter","BlockFormatTool","listElements","textAlign","float","display","marginLeft","marginRight","listStylePosition","ListFormatFinder","altAttr","matchesType","isList","unwrapTag","li","isImmutable","containsAny","_parentLists","merge","breakable","findSuitableNode","applyOnSection","section","pushAncestor","listStyleType","lastSection","lastNodes","sections","addLastSection","ul","fragment","ListCommand","ListTool","FormattingTool","toFormattingItem","dot","context","decorate","optionLabel","dataItem","toJSON","dataBound","getFormattingValue","n","selectBox","_ancestor","operator","CleanFormatCommand","tagsToClean","clean","listFormatter","unwrapListItem","highlightFirst","autoWidth","KEDITORIMAGEURL","KEDITORIMAGETITLE","KEDITORIMAGEWIDTH","KEDITORIMAGEHEIGHT","ImageCommand","removeIEAttributes","onload","onerror","applied","isIE","showBrowser","ImageBrowser","transport","read","_imageBrowser","ev","selected","dialogHeight","loadingOverlay","ImportCommand","_initializeUploadWidget","importOptions","upload","kendoUpload","success","_onUploadSuccess","_onUploadProgress","_onUploadSelect","error","_onUploadError","complete","_onUploadComplete","showFileList","multiple","saveUrl","autoUpload","saveField","validation","allowedExtensions","maxFileSize","getKendoUpload","_trigger","clearAllFiles","_removeLoadingOverlay","response","files","validationErrors","_initLoadingOverlay","eventType","uploadEvent","_iframeWrapper","_container","postProcess","genericCommand","initialValue","autoSize","ExportAsCommand","exportType","postToProxy","generateForm","submit","exportAsOptions","method","valueInput","exportTypeInput","fileNameInput","antiForgeryInput","csrf_param","ExportAsTool","changeHandler","_exec","itemTemplate","valueTemplate","iconClass","indentDirection","IndentFormatter","parentList","targets","mapImmutables","siblingList","nestedList","getListTypeAttr","targetIndex","styleType","targetNode","listParent","siblings","nextAll","IndentCommand","indentFormatter","OutdentCommand","OutdentTool","isOutdentable","listParentsCount","suitableNodes","ParagraphCommand","_insertMarker","_moveFocus","focusNode","shouldTrim","startInBlock","endInBlock","_blankAfter","paragraph","heading","tableNode","rng","emptyParagraphContent","parentChildrenLength","_insertParagraphAfter","NewLineCommand","filler","kbrParent","oldIE","KEDITORFILEURL","KEDITORFILETEXT","KEDITORFILETITLE","FileCommand","file","FileBrowser","_fileBrowser","ACTIVESTATE","SELECTEDSTATE","SCOPE","ROW","COL","ROWGROUP","COLGROUP","COLSPAN","ROWSPAN","TABLE","THEAD","TBODY","TR","TD","TH","getTouches","columnTemplate","tableFormatFinder","TableCommand","skipCleaners","_tableHtml","columnHtml","rowHeight","insertedTable","PopupTool","btn","popupTemplate","kendoPopup","copyAnchorStyles","_open","_activate","_toggle","_editor","TableWizardTool","TableWizardCommand","insertNewTable","kendoButton","_setTableSize","InsertTableTool","cols","cellWidth","cellHeight","firstCell","eq","lastCell","getOffset","tableFromLocation","floor","clientY","clientX","scrollLeft","offsetWidth","autoApplyNS","_valid","status","initiallyVisible","button","selectedRows","selectedColumns","changed","tableSize","stopImmediatePropagation","TableModificationCommand","_clearColIndexAttr","_findRowSpanCell","_resetElementResizing","_findNextTdInRow","td","lastTd","_adjustColgroups","colgroup","colElements","colgroupElements","numberOfCells","_associateHeaderIds","InsertRowCommand","cellCount","newRow","createdCell","_appendCell","newCell","InsertColumnCommand","columnIndex","_processForColSpan","_resizeCells","selectedCell","colSpanEffect","parsedWidth","unit","calculatedWidth","parseFloat","DeleteRowCommand","focusElement","rowParent","_focusElement","_handleRowSpanCells","adjacentCell","nextRow","firstRow","before","_reduceRowSpan","rowSpanValue","DeleteColumnCommand","columnCount","_handleColSpanCells","_reduceColSpan","colSpanValue","MergeCellsHorizontallyCommand","nextTd","_getColspan","MergeCellsVerticallyCommand","tr","targetRow","bottomTd","_getRowspan","SplitCellCommand","emptyTd","_splitCellHorizontally","_splitCellVertically","_getRowspanValue","_getColspanValue","tdToAdd","colSpanResult","rowSpanResult","TableModificationTool","commandsMap","insert","delete","column","TableFormatCommand","_showResizeHandles","TableFormatTool","isTable","align","nonSplittableTagsOnPaste","cleaners","ScriptCleaner","TabCleaner","MSWordFormatCleaner","WebkitFormatCleaner","HtmlTagsCleaner","HtmlAttrCleaner","HtmlContentCleaner","CustomCleaner","htmlToFragment","_startModification","_inProgress","_endModification","modificationInfo","_contentModification","_removeBomNodes","_onBeforeCopy","oncopy","oncut","_fileToDataURL","blob","deferred","reader","FileReader","File","getAsFile","readAsDataURL","_triggerPaste","_handleImagePaste","clipboardData","originalEvent","_insertImages","when","results","onpaste","clipboardNode","_decoreateClipboardNode","webkit","_moveToCaretPosition","clipboardRange","containers","ondragover","ondrop","dataTransfer","margin","padding","fontVariant","lineSpacing","nodeOffset","caretOffset","_caretOffset","translate","transform","rangeChanged","isStartTextNode","prevLength","bomNode","splittableParent","preventSplit","unwrapPasted","applicable","splitter","splittable","fragmentsHtml","elm","rangeEnd","focusedTable","siblingNodes","lastSiblingIndex","lastSibling","Cleaner","replacements","customReplacements","junkReplacements","convertFontMatch","$0","$1","closing","family","stripEmptyAnchors","listType","listData","startingSymbol","matchSymbol","symbol","isNumber","trimStartText","_guessUnorderedListStyle","_guessOrderedListStyle","_convertToLi","_checkForBullet","_getHtmlNoBullet","extractListLevels","level","_createList","rootMargin","rootIndex","lastRootLi","isLastRootLi","rootList","blockChildren","lastMargin","levels","acceptedNameTags","listIndex","levelType","removeAttributes","significantStyles","addSignificantStyles","isSignificantCss","removeAttributeNode","createColGroup","convertHeaders","boldedCells","removeParagraphs","paragraphs","removeTextNodes","trs","currentNode","tables","longestRow","titles","removeFormatting","filters","DomCleaner","cleanDom","collectTags","collectAttr","TextContainer","HtmlTextLines","separators","line","inlineBlockText","resetLine","appendText","textContainer","appendInlineBlockText","flashInlineBlockText","endLine","il","il1","jl","jl1","DomEnumerator","preventDown","hasText","enumerator","buildText","getDefaultSeparators","htmlLines","thead","tbody","cleaner","cellText","PREVIOUS_SIBLING","getSibling","tableCells","tableCellsWrappers","tableElements","inTable","RemoveTableContent","cellsTypes","startCell","endCell","_removeContent","getNext","evt","Event","isDefaultPrevented","deleteSelection","startTyping","_removeBomSpan","textContent","_addCaret","_restoreCaret","_handleDelete","caretPlaceholder","_merge","_cleanBomBefore","_handleBackspace","startAtLi","liIndex","startAtNonFirstLi","rangeStartNode","previousNode","_handleSelection","parentElementOrNode","_surroundFullyContent","_surroundFullySelectedAnchor","toLocaleLowerCase","_join","startImmutable","endImmutable","_moveMarker","_root","dest","_mergeWithTextNode","appendedNode","_isCaret","systemCommandIsInProgress","createUndoCommand","isModifierKey","isSystem","_toSelectableImmutables","_selectEditorBody","isCharacter","String","fromCharCode","modifier","_getShortcutModifier","navigator","platform","toUpperCase","metaKey","found","matchKey","toolKey","onEndTyping","stopTyping","force","timeout","what","ExportPdfCommand","PrintCommand","CopyFormatCommand","blockStyles","collectStyles","rangeNodes","populateStyles","destination","styleValue","styleKey","attributeKey","styles","nodeStyles","ApplyFormatCommand","removeEmptyElementsFromRange","cleanInlineParents","applyBlockStyles","applyInlineStyles","emptyElements","blockParent","outerWrapper","previousNodes","nextNodes","prevWrapper","nextWrapper","listItems","currentStyle","createdNode","topNode","CopyFormatTool","ApplyFormatTool","LineHeightCommand","LineHeightFormatTool","getKendoComboBox","prefixOptions","DOM","createMark","character","clonedRange","domRect","getBoundingClientRect","createElementNS","setAttributeNS","appendSvgMarks","overlay","FormattingMarksCommand","math","REGEX_NUMBER_IN_PERCENTAGES","REGEX_NUMBER_IN_PIXELS","STRING","inPercentages","ResizingUtils","constrain","lowerBound","upperBound","getScrollBarWidth","scrollbar","calculatePercentageRatio","total","inPixels","toPercentages","toPixels","KEY_DOWN","MOUSE_LEAVE","MOUSE_UP","TableElementResizing","_attachEventHandlers","eventNamespace","rootElement","_destroyResizeHandle","rtl","handle","dataAttribute","detectElementBorderHovering","resizingInProgress","resizing","handleOptions","tableElement","resizeHandle","elementBorderHovered","showResizeHandle","_initResizeHandle","setResizeHandlePosition","setResizeHandleDimensions","setResizeHandleDataAttributes","_attachResizeHandleEventHandlers","_initResizable","_hideResizeMarker","markerClass","_destroyResizable","Resizable","onResizeStart","onResize","onResizeEnd","_disableKeyboard","setResizeHandleDragPosition","_enableKeyboard","_forceResizing","userEvents","ResizingFactory","resizingName","_destroyResizing","_initResizing","parentTable","resizingType","abs","RESIZE_HANDLE_CLASS","RESIZE_MARKER_CLASS","BODY","COLATTR","COMMA","WIDTH","handleWidth","borderOffset","mousePosition","tableInnerElement","tBodies","scrollTopOffset","scrollLeftOffset","columnWidthOffset","scrollBarWidth","columnOffsetLeft","innerElementOffsetTop","tableHead","tableBody","fullHeight","columnWidth","columnLeftOffset","adjacentColumnWidth","resizeHandleOffsetLeft","handleOffset","newWidth","initialAdjacentColumnWidth","initialColumnWidth","nextColumn","rtlModifier","initialDeltaX","_setTableComputedWidth","_setColumnsComputedWidth","_resizeColumn","_resizeTopAndBottomColumns","_resizeAdjacentColumns","innerElementWidth","currentColumnsWidths","topAndBottomColumns","innerTableElement","deltaWidth","adjacentColumns","_resizeAdjacentColumn","adjacentColumn","HEIGHT","handleHeight","rowOffsetLeft","rowOffsetTop","topInnerTableElement","$row","tableTopOffset","resizeHandleOffsetTop","currentRowHeight","initialTableHeight","tableHeadHeight","tableBodyHeight","initialStyleHeight","newRowHeight","_setRowsHeightInPixels","_setTableHeight","_setRowsHeightInPercentages","currentRowsHeights","newHeight","Draggable","DRAG_START","DRAG","DRAG_END","HALF_INSIDE","MOUSE_OVER","MOUSE_OUT","EAST","NORTH","NORTHEAST","NORTHWEST","SOUTH","SOUTHEAST","SOUTHWEST","WEST","ElementResizeHandle","_addStyles","_initDraggable","_initPositioningStrategy","_initDraggingStrategy","resizableElement","_destroyDraggable","_setPosition","_positioningStrategy","getPosition","_onMouseOver","_onMouseOut","HandlePositioningStrategy","_draggable","dragstart","_onDragStart","drag","_onDrag","_onDragEnd","_draggingStrategy","adjustDragDelta","deltaX","deltaY","initialDeltaY","HandleDraggingStrategy","StrategyFactory","_items","register","itemsLength","PositioningStrategyFactory","calculatePosition","handleOffsetPosition","applyHandleOffset","applyScrollOffset","rootLeft","EastPositioningStrategy","NorthPositioningStrategy","NortheastPositioningStrategy","NorthwestPositioningStrategy","SouthPositioningStrategy","SoutheastPositioningStrategy","SouthwestPositioningStrategy","WestPositioningStrategy","DraggingStrategyFactory","adjustment","deltas","xAxisAdjustment","yAxisAdjustment","HorizontalDraggingStrategy","EastDraggingStrategy","WestDraggingStrategy","VerticalDraggingStrategy","NorthDraggingStrategy","SouthDraggingStrategy","HorizontalAndVerticalDraggingStrategy","NorthEastDraggingStrategy","NorthWestDraggingStrategy","SouthEastDraggingStrategy","SouthWestDraggingStrategy","RESIZE_HANDLE_WRAPPER_CLASS","ELEMENT_RESIZING_CLASS","MOUSE_DOWN","ELEMENT_TYPES","isUndefined","ElementResizing","handles","_destroyResizeHandles","appendHandlesTo","_resizeWidth","_resizeHeight","_getMaxDimensionValue","dimension","dimensionLowercase","parentDimension","parentScrollOffset","_initResizeHandles","_bindToResizeHandlesEvents","_onResizeHandleDragStart","_initialElementHeight","_initialElementWidth","_onResizeHandleDrag","_onResizeHandleDragEnd","TableResizing","_hasRowsInPixels","ratioValue","ratioTotalValue","constrainedWidth","styleWidth","currentWidth","parentWidth","maxWidth","_setColumnsWidth","constrainedHeight","styleHeight","currentHeight","parentHeight","maxHeight","hasRowsInPixels","parentColumn","columnsLength","isWidthInPercentages","ImageResizing","_onResizeHandleDragVertical","_onResizeHandleDragHorizontal","_onResizeHandleDragLocked","_getDeltas","initialWidth","initialHeight","MAX_SAFE_INTEGER","hasImg","eventTarget","eventCurrentTarget","isResizeHandleOrChild","tableResizing","cellsFormatFinder","reUnit","COL_INDEX","isTableCellWizard","tableCellWizard","selectedTable","_sourceTable","_selectedTable","selectedCells","_selectedTableCells","_selectedCells","closeCallback","onDialogClose","parseTable","TableWizardDialog","insertTable","createNewTable","updateTable","_ensureFocusableAfterTable","lastSelectedRow","cellProp","tableProp","_lastInCollection","_deleteTableRows","_addRows","_updateColumns","_updateTableProperties","cellProperties","_updateCellProperties","_updateCaption","_updateHeadersWithThead","_updateHeadersNoThead","_updateHeaderAssociates","_isHeadingRow","_isHeadingCell","cellsWithHeadersAssociated","headingIds","checkHeader","header","headersArray","headersAttr","some","_insertCells","insertCell","createTHead","_createTableRows","createTBody","cellsWithHeaders","_addScopes","initialIndex","insertRow","cellsLength","newRowsCount","firstRowLastCell","numberOfColumns","lastCurrentCell","rowColumns","deleteCell","_getStylesData","topCellPadding","leftCellPadding","bottomCellPadding","rightCellPadding","tableData","paddingTop","paddingLeft","paddingBottom","paddingRight","captionContent","deleteCaption","createCaption","_getAlignmentData","verticalAlign","_swapToHeaderCells","deleteTHead","_removeScopes","_removeAssociates","headerCols","whiteSpace","widthUnit","heightUnit","backgroundColor","bgColor","borderCollapse","_getTablePositionData","tStyle","captionClone","tableAlignment","_getAlignment","tablePosition","_getTablePosition","numberOfHeaderColumns","tableJson","_getUnit","parseTableRows","rowData","cellData","parseCell","cStyle","horizontalOnly","hAlign","vAlign","collection","TableWizardEditTool","TableCellWizardEditTool","FORM_FIELD_CLASS","INVISIBLE_CLASS","DOT","numericTextBoxSettings","borderStyles","textWrapDropDownSettings","tablePositionDropDownSettings","tableAlignmentDropDownSettings","cellAlignmentDropDownSettings","accessibilityAlignmentDropDownSettings","tablePropertiesDialogTemplate","cellPropertiesDialogTemplate","_openTablePropertiesDialog","closeHandler","_dialogTemplate","collectTableDialogValues","components","_initTabStripComponent","_tablePropertiesForm","_createTablePropertiesForm","_accessibilityPropertiesForm","_createAccessibilityPropertiesForm","_openCellPropertiesDialog","collectCellDialogValues","_cellPropertiesForm","_createCellPropertiesForm","isCellProperties","tabStrip","kendoTabStrip","_collectTableViewValues","_collectAccessibilityViewValues","_collectCellViewValues","tableView","check","cellView","wrapTextValue","accessibilityView","_addUnit","_initNumericTextbox","storage","settings","kendoNumericTextBox","_initDropDownList","kendoDropDownList","_setComponentValue","_initBorderStyleDropDown","_initTablePositionDropDown","_initPositionDropDown","_initTableAlignmentDropDown","_initAlignmentDropDown","_initCellAlignmentDropDown","_initAccessibilityAlignmentDropDown","_initTextWrapDropDown","_initAssociationDropDown","_initColorPicker","kendoColorPicker","clearButton","_initInput","kendoTextBox","_initCheckbox","kendoCheckBox","_initTextArea","kendoTextArea","_destroyComponents","dialogTemplate","_onPaddingTopChange","viewType","topCellPaddingValue","leftCellPaddingNumeric","bottomCellPaddingNumeric","rightCellPaddingNumeric","_onPaddingCheckChange","checked","_onColumnsNumberChange","headerColumnsNumeric","currentNumberOfColumnsHeaders","_onRowsNumberChange","headerRowsNumeric","currentNumberOfRowHeaders","numberOfRows","layout","grid","gutter","layoutWrapper","hint","optional"],"mappings":"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","file":"kendo.editor.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.combobox.js'), require('kendo.dropdownlist.js'), require('kendo.resizable.js'), require('kendo.window.js'), require('kendo.colorpicker.js'), require('kendo.imagebrowser.js'), require('kendo.numerictextbox.js'), require('kendo.textarea.js'), require('kendo.core.js'), require('kendo.toolbar.js'), require('kendo.icons.js'), require('kendo.form.js'), require('kendo.filebrowser.js'), require('kendo.draganddrop.js'), require('kendo.html.button.js'), require('kendo.tabstrip.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.combobox', 'kendo.dropdownlist', 'kendo.resizable', 'kendo.window', 'kendo.colorpicker', 'kendo.imagebrowser', 'kendo.numerictextbox', 'kendo.textarea', 'kendo.core', 'kendo.toolbar', 'kendo.icons', 'kendo.form', 'kendo.filebrowser', 'kendo.draganddrop', 'kendo.html.button', 'kendo.tabstrip'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoeditor = global.kendoeditor || {}, global.kendoeditor.js = factory()));\n})(this, (function () {\n    (function(kendo) {\n        var UndoRedoStack = kendo.Observable.extend({\n            init: function(options) {\n                kendo.Observable.fn.init.call(this, options);\n                this.clear();\n            },\n            events: [ \"undo\", \"redo\" ],\n            push: function (command) {\n                this.stack = this.stack.slice(0, this.currentCommandIndex + 1);\n                this.currentCommandIndex = this.stack.push(command) - 1;\n            },\n            undo: function () {\n                if (this.canUndo()) {\n                    var command = this.stack[this.currentCommandIndex--];\n                    command.undo();\n                    this.trigger(\"undo\", { command: command });\n                }\n            },\n            redo: function () {\n                if (this.canRedo()) {\n                    var command = this.stack[++this.currentCommandIndex];\n                    command.redo();\n                    this.trigger(\"redo\", { command: command });\n                }\n            },\n            clear: function() {\n                this.stack = [];\n                this.currentCommandIndex = -1;\n            },\n            canUndo: function () {\n                return this.currentCommandIndex >= 0;\n            },\n            canRedo: function () {\n                return this.currentCommandIndex != this.stack.length - 1;\n            }\n        });\n\n        kendo.deepExtend(kendo, {\n            util: {\n                UndoRedoStack: UndoRedoStack\n            }\n        });\n    })(kendo);\n\n    (function($,undefined$1) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            Widget = kendo.ui.Widget,\n            os = kendo.support.mobileOS,\n            browser = kendo.support.browser,\n            extend = $.extend,\n            deepExtend = kendo.deepExtend,\n            keys = kendo.keys,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            NS = \".kendoEditor\";\n\n        const FORMATTING_MARKS_STYLE_ID = \"formatting-marks-style\",\n              FORMATTING_MARKS_OVERLAY_ID = \"formatting-marks-overlay\",\n              FORMATTING_MARKS_OVERLAY_WRAPPER_ID = \"formatting-marks-overlay-wrapper\";\n\n        var SELECT = \"select\";\n        var SELECT_OVERLAY_SELECTOR = \"select.k-select-overlay\";\n        var PLACEHOLDER_CLASS = \"k-placeholder\";\n        var PLACEHOLDER_TAG_ID = \"placeholder\";\n        var REFRESH_INTERVAL = 200;\n        var DEFAULT_LANGUAGE = \"en\";\n\n        var NATIVE_TOOLS = [\n            \"insertLineBreak\",\n            \"insertParagraph\",\n            \"redo\",\n            \"undo\",\n            \"autoLink\"\n        ];\n\n        var EditorUtils = {\n            editorWrapperTemplate: () =>\n                '<div class=\"k-editor\">' +\n                    '<div class=\"k-editor-toolbar\" role=\"toolbar\"></div>' +\n                    '<div class=\"k-editable-area k-editor-content\"></div>' +\n                '</div>',\n\n            formatByName: function(name, format) {\n                for (var i = 0; i < format.length; i++) {\n                    if ($.inArray(name, format[i].tags) >= 0) {\n                        return format[i];\n                    }\n                }\n            },\n\n            getToolCssClass: function(name, icon) {\n                var toolCssClassNames = {\n                    superscript: \"supscript\",\n                    subscript: \"subscript\",\n                    justifyLeft: \"align-left\",\n                    justifyCenter: \"align-center\",\n                    justifyRight: \"align-right\",\n                    justifyFull: \"align-justify\",\n                    insertUnorderedList: \"list-unordered\",\n                    insertOrderedList: \"list-ordered\",\n                    insertUpperRomanList: \"list-roman-upper\",\n                    insertLowerRomanList: \"list-roman-lower\",\n                    \"import\": \"import\",\n                    indent: \"indent\",\n                    outdent: \"outdent\",\n                    createLink: \"link\",\n                    unlink: \"unlink\",\n                    insertImage: \"image\",\n                    insertFile: \"file-add\",\n                    viewHtml: \"code\",\n                    foreColor: \"foreground-color\",\n                    backColor: \"droplet\",\n                    createTable: \"table-add\",\n                    addColumnLeft: \"table-column-insert-left\",\n                    addColumnRight: \"table-column-insert-right\",\n                    addRowAbove: \"table-row-insert-above\",\n                    addRowBelow: \"table-row-insert-below\",\n                    deleteRow: \"table-row-delete\",\n                    deleteColumn: \"table-column-delete\",\n                    mergeCellsHorizontally: \"cells-merge-horizontally\",\n                    mergeCellsVertically: \"cells-merge-vertically\",\n                    splitCellHorizontally: \"cell-split-horizontally\",\n                    splitCellVertically: \"cell-split-vertically\",\n                    tableProperties: \"table-properties\",\n                    tableCellProperties: \"table-cell-properties\",\n                    tableWizardInsert: \"table-wizard\",\n                    tableAlignLeft: \"table-position-start\",\n                    tableAlignCenter: \"table-position-center\",\n                    tableAlignRight: \"table-position-end\",\n                    cleanFormatting: \"clear-css\",\n                    copyFormat: \"copy-format\",\n                    applyFormat: \"apply-format\",\n                    pdf: \"file-pdf\"\n                };\n\n                var cssClass = toolCssClassNames[name];\n\n                if (cssClass) {\n                    return cssClass;\n                }\n\n                if (icon) {\n                    return icon;\n                }\n\n                return EditorUtils.nameToKebab(name);\n            },\n\n            nameToKebab: function(name) {\n                return name.replace(/([a-z])([A-Z])/g, \"$1-$2\")\n                    .replace(/[\\s_]+/g, '-')\n                    .toLowerCase();\n            },\n\n            registerTool: function(toolName, tool) {\n                if (!tool.name) {\n                    tool.options.name = toolName;\n                    tool.name = toolName.toLowerCase();\n                }\n\n                if (!tool.options.ui) {\n                    tool.options.ui = {};\n                }\n\n                tool.options.ui.command = toolName;\n\n                Editor.defaultTools[toolName] = tool;\n            },\n\n            registerFormat: function(formatName, format) {\n                Editor.fn.options.formats[formatName] = format;\n            },\n\n            cacheComments: function(content, comments) {\n                for (var index in comments) {\n                    content = content.replace(comments[index], \"{\" + index + \"}\");\n                }\n                return content;\n            },\n\n            retrieveComments: function(content, comments) {\n                for (var index in comments) {\n                    content = content.replace(\"{\" + index + \"}\", comments[index]);\n                }\n                return content;\n            }\n        };\n\n        var messages = {\n            auto: \"Auto\",\n            bold: \"Bold\",\n            italic: \"Italic\",\n            underline: \"Underline\",\n            strikethrough: \"Strikethrough\",\n            superscript: \"Superscript\",\n            subscript: \"Subscript\",\n            fitToCell: \"Fit to cell\",\n            justifyCenter: \"Center text\",\n            justifyLeft: \"Align text left\",\n            justifyRight: \"Align text right\",\n            justifyFull: \"Justify\",\n            insertUnorderedList: \"Insert unordered list\",\n            insertOrderedList: \"Insert ordered list\",\n            lineHeight: \"Set line height\",\n            formattingMarks: \"Toggle formatting marks\",\n            indent: \"Indent\",\n            outdent: \"Outdent\",\n            createLink: \"Insert hyperlink\",\n            unlink: \"Remove hyperlink\",\n            insertImage: \"Insert image\",\n            insertFile: \"Insert file\",\n            insertHtml: \"Insert HTML\",\n            viewHtml: \"View HTML\",\n            fontName: \"Select font family\",\n            fontNameInherit: \"(inherited font)\",\n            fontSize: \"Select font size\",\n            fontSizeInherit: \"(inherited size)\",\n            formatBlock: \"Format\",\n            formatting: \"Format\",\n            foreColor: \"Color\",\n            backColor: \"Background color\",\n            style: \"Styles\",\n            emptyFolder: \"Empty Folder\",\n            editAreaTitle: \"Editable area. Press F10 for toolbar.\",\n            uploadFile: \"Upload\",\n            overflowAnchor: \"More tools\",\n            orderBy: \"Arrange by:\",\n            orderBySize: \"Size\",\n            orderByName: \"Name\",\n            invalidFileType: \"The selected file \\\"{0}\\\" is not valid. Supported file types are {1}.\",\n            deleteFile: 'Are you sure you want to delete \"{0}\"?',\n            overwriteFile: 'A file with name \"{0}\" already exists in the current directory. Do you want to overwrite it?',\n            directoryNotFound: \"A directory with this name was not found.\",\n            imageWebAddress: \"Web address\",\n            imageAltText: \"Alternate text\",\n            imageWidth: \"Width (px)\",\n            imageHeight: \"Height (px)\",\n            fileWebAddress: \"Web address\",\n            fileTitle: \"Title\",\n            fileText: \"Text\",\n            linkWebAddress: \"Web address\",\n            linkText: \"Text\",\n            linkToolTip: \"ToolTip\",\n            linkOpenInNewWindow: \"Open link in new window\",\n            dialogUpdate: \"Update\",\n            dialogInsert: \"Insert\",\n            dialogOk: \"Confirm\",\n            dialogCancel: \"Cancel\",\n            cleanFormatting: \"Clean formatting\",\n            createTable: \"Create a table\",\n            createTableHint: \"Create a {0} x {1} table\",\n            addColumnLeft: \"Add column on the left\",\n            addColumnRight: \"Add column on the right\",\n            addRowAbove: \"Add row above\",\n            addRowBelow: \"Add row below\",\n            deleteRow: \"Delete row\",\n            deleteColumn: \"Delete column\",\n            mergeCellsHorizontally: \"Merge cells horizontally\",\n            mergeCellsVertically: \"Merge cells vertically\",\n            splitCellHorizontally: \"Split cells horizontally\",\n            splitCellVertically: \"Split cells vertically\",\n            tableAlignLeft: \"Table Align Left\",\n            tableAlignCenter: \"Table Align Center\",\n            tableAlignRight: \"Table Align Right\",\n            tableWizard: \"Table Wizard\",\n            tableProperties: \"Table Properties\",\n            tableCellProperties: \"Cell Properties\",\n            tableTab: \"General\",\n            cellTab: \"Cell\",\n            accessibilityTab: \"Advanced\",\n            caption: \"Caption\",\n            summary: \"Summary\",\n            width: \"Width\",\n            height: \"Height\",\n            units: \"Units\",\n            cellSpacing: \"Cell Spacing\",\n            cellPadding: \"Cell Padding\",\n            topPadding: \"Top\",\n            leftPadding: \"Left\",\n            bottomPadding: \"Bottom\",\n            rightPadding: \"Right\",\n            independentCellPaddings: \"Independent Cell Paddings\",\n            cellMargin: \"Cell Margin\",\n            alignment: \"Alignment\",\n            captionAlignment: \"Caption alignment\",\n            position: \"Position\",\n            background: \"Background\",\n            tableBackground: \"Table background\",\n            cssClass: \"CSS Class\",\n            id: \"ID\",\n            border: \"Border\",\n            borderStyle: \"Border Style\",\n            borderWidth: \"Border Width\",\n            borderColor: \"Border Color\",\n            collapseBorders: \"Collapse borders\",\n            wrapText: \"Wrap text\",\n            associateCellsWithHeaders: \"Associate headers\",\n            alignLeft: \"Align Left\",\n            alignCenter: \"Align Center\",\n            alignRight: \"Align Right\",\n            alignLeftTop: \"Align Left Top\",\n            alignCenterTop: \"Align Center Top\",\n            alignRightTop: \"Align Right Top\",\n            alignLeftMiddle: \"Align Left Middle\",\n            alignCenterMiddle: \"Align Center Middle\",\n            alignRightMiddle: \"Align Right Middle\",\n            alignLeftBottom: \"Align Left Bottom\",\n            alignCenterBottom: \"Align Center Bottom\",\n            alignRightBottom: \"Align Right Bottom\",\n            alignRemove: \"Remove Alignment\",\n            columns: \"Columns\",\n            rows: \"Rows\",\n            selectAllCells: \"Apply to all cells\",\n            applyToColumn: \"apply to column\",\n            applyToRow: \"apply to row\",\n            exportAs: \"Export As\",\n            \"import\": \"Import\",\n            print: \"Print\",\n            headerRows: \"Header Rows\",\n            headerColumns: \"Header Cols\",\n            tableSummaryPlaceholder: \"Summary attribute is not HTML5 compatible.\",\n            associateNone: \"None\",\n            associateScope: \"Associate using 'scope' attribute\",\n            associateIds: \"Associate using Ids\",\n            copyFormat: \"Copy format\",\n            applyFormat: \"Apply format\",\n            borderNone: \"None\",\n            undo: \"Undo\",\n            redo: \"Redo\"\n        };\n\n        var supportedContentEditable = typeof(document.documentElement.contentEditable) != 'undefined';\n\n        var toolGroups = {\n            basic: [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n            undo: [\"undo\", \"redo\"],\n            scripts: [\"subscript\", \"superscript\" ],\n            alignment: [\"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\" ],\n            lines: [\"lineHeight\"],\n            symbols: [\"formattingMarks\"],\n            links: [\"insertImage\", \"insertFile\", \"createLink\", \"unlink\"],\n            lists: [\"insertUnorderedList\", \"insertOrderedList\", \"insertUpperRomanList\", \"insertLowerRomanList\",],\n            dent: [\"indent\", \"outdent\"],\n            tablesWizard: [\"tableProperties\", \"tableCellProperties\"],\n            tablesInsert: [\"createTable\"],\n            tablesAddDelete: [ \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\" ],\n            tablesMerge: [ \"mergeCellsHorizontally\", \"mergeCellsVertically\", \"splitCellHorizontally\", \"splitCellVertically\" ],\n            tablesPosition: [ \"tableAlignLeft\", \"tableAlignCenter\", \"tableAlignRight\" ],\n            formatPainter: [ \"copyFormat\", \"applyFormat\" ]\n        };\n\n        var Editor = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    editorNS = kendo.ui.editor,\n                    dom = editorNS.Dom,\n                    toolbarContainer,\n                    type, domElement;\n\n                /* suppress initialization in devices w/o proper contenteditable support */\n                if (!supportedContentEditable) {\n                    return;\n                }\n\n                Widget.fn.init.call(that, element, options);\n\n                that.options = deepExtend({}, that.options, options);\n\n                element = that.element;\n                domElement = element[0];\n                type = dom.name(domElement);\n\n                this._registerHandler(\n                    element.closest(\"form\"), \"submit\", that.update.bind(that, undefined$1)\n                );\n\n                toolbarContainer = that._setupType(element);\n\n                that._initToolbar(toolbarContainer);\n                that._setupHeight(type);\n                that._resizable();\n                that._initializeContentElement(that);\n                that._setupKeyboard();\n\n                that.clipboard = new editorNS.Clipboard(this);\n                that.undoRedoStack = new kendo.util.UndoRedoStack();\n\n                that._populateValue(options, domElement);\n\n                that._registerHandler(document, {\n                    \"mousedown\": function() { that._endTyping(); },\n                    \"mouseup\": function(e) { that._mouseup(e); }\n                });\n\n                that._initializeImmutables();\n\n                if (type == \"textarea\") {\n                    that._ariaLabel(that.wrapper.find(\"iframe\"));\n                }\n\n                that.toolbar.resize();\n\n                kendo.notify(that);\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay((that.wrapper && that.wrapper[0]) || that.element[0]);\n                }\n            },\n\n            events: [\n                \"select\",\n                \"change\",\n                \"execute\",\n                \"error\",\n                \"paste\",\n                \"keydown\",\n                \"keyup\"\n            ],\n\n            options: {\n                name: \"Editor\",\n                messages: messages,\n                placeholder: \"\",\n                nonce: \"\",\n                unsafeInline: true,\n                formats: {},\n                encoded: true,\n                formattingMarksRefreshDelay: 250,\n                domain: null,\n                resizable: false,\n                deserialization: {\n                    custom: null\n                },\n                serialization: {\n                    entities: true,\n                    semantic: true,\n                    scripts: false,\n                    optimizeTags: false,\n                    keepEOL: false\n                },\n                pasteCleanup: {\n                    all: false,\n                    css: false,\n                    custom: null,\n                    keepNewLines: false,\n                    msAllFormatting: false,\n                    msConvertLists: true,\n                    msTags: true,\n                    none: false,\n                    span: false\n                },\n                stylesheets: [],\n                dialogOptions: {\n                    modal: true, resizable: false, draggable: true,\n                    animation: false\n                },\n                imageBrowser: null,\n                fileBrowser: null,\n                navigateOnTab: false,\n                fontName: [\n                    { text: \"Arial\", value: \"Arial, Helvetica, sans-serif\" },\n                    { text: \"Courier New\", value: \"\\\"Courier New\\\", Courier, monospace\" },\n                    { text: \"Georgia\", value: \"Georgia, serif\" },\n                    { text: \"Impact\", value: \"Impact, Charcoal, sans-serif\" },\n                    { text: \"Lucida Console\", value: \"\\\"Lucida Console\\\", Monaco, monospace\" },\n                    { text: \"Tahoma\", value: \"Tahoma, Geneva, sans-serif\" },\n                    { text: \"Times New Roman\", value: \"\\\"Times New Roman\\\", Times, serif\" },\n                    { text: \"Trebuchet MS\", value: \"\\\"Trebuchet MS\\\", Helvetica, sans-serif\" },\n                    { text: \"Verdana\", value: \"Verdana, Geneva, sans-serif\" }\n                ],\n                fontSize: [\n                    { text: \"1 (8pt)\", value: \"xx-small\" },\n                    { text: \"2 (10pt)\", value: \"x-small\" },\n                    { text: \"3 (12pt)\", value: \"small\" },\n                    { text: \"4 (14pt)\", value: \"medium\" },\n                    { text: \"5 (18pt)\", value: \"large\" },\n                    { text: \"6 (24pt)\", value: \"x-large\" },\n                    { text: \"7 (36pt)\", value: \"xx-large\" }\n                ],\n                formatBlock: [\n                    { text: \"Paragraph\", value: \"p\" },\n                    { text: \"Quotation\", value: \"blockquote\" },\n                    { text: \"Heading 1\", value: \"h1\" },\n                    { text: \"Heading 2\", value: \"h2\" },\n                    { text: \"Heading 3\", value: \"h3\" },\n                    { text: \"Heading 4\", value: \"h4\" },\n                    { text: \"Heading 5\", value: \"h5\" },\n                    { text: \"Heading 6\", value: \"h6\" }\n                ],\n                tools: [\n                    \"formatting\",\n                    \"bold\",\n                    \"italic\",\n                    \"underline\",\n                    \"undo\",\n                    \"redo\",\n                    \"justifyLeft\",\n                    \"justifyCenter\",\n                    \"justifyRight\",\n                    \"copyFormat\",\n                    \"applyFormat\",\n                    \"insertUnorderedList\",\n                    \"insertOrderedList\",\n                    \"indent\",\n                    \"outdent\",\n                    \"createLink\",\n                    \"unlink\",\n                    \"insertImage\",\n                    \"tableProperties\",\n                    \"tableCellProperties\",\n                    \"createTable\",\n                    \"addRowAbove\",\n                    \"addRowBelow\",\n                    \"addColumnLeft\",\n                    \"addColumnRight\",\n                    \"deleteRow\",\n                    \"deleteColumn\",\n                    \"mergeCellsHorizontally\",\n                    \"mergeCellsVertically\",\n                    \"splitCellHorizontally\",\n                    \"splitCellVertically\",\n                    \"tableAlignLeft\",\n                    \"tableAlignCenter\",\n                    \"tableAlignRight\"\n                ]\n            },\n\n            destroy: function() {\n                var editor = this;\n\n                Widget.fn.destroy.call(this);\n\n                this._endTyping(true);\n\n                this._deregisterHandlers();\n\n                clearTimeout(this._spellCorrectTimeout);\n\n                this._focusOutside();\n\n                this.toolbar.destroy();\n\n                if (this.windowInstance) {\n                    this.windowInstance.destroy();\n                }\n                if (this.tablePopup) {\n                    this.tablePopup.destroy();\n                }\n\n                editor._destroyUploadWidget();\n\n                editor._destroyResizings();\n\n                editor._destroyFormattingMarksOverlay();\n\n                kendo.destroy(this.wrapper);\n            },\n\n            setOptions: function(options) {\n                var editor = this;\n\n                Widget.fn.setOptions.call(editor, options);\n\n                if (options.tools) {\n                    this._setOptionsTools(options.tools);\n                }\n\n                this._initializePlaceholder();\n            },\n\n            createRange: function(document) {\n                return kendo.ui.editor.RangeUtils.createRange(document || this.document);\n            },\n\n            encodedValue: function() {\n                return kendo.ui.editor.Dom.encode(this.value());\n            },\n\n            exec: function(name, params) {\n                var that = this;\n                var command = null;\n                var defaultTools = kendo.ui.Editor.defaultTools;\n                var range, tool, prevented;\n\n                if (!name) {\n                    throw new Error(\"kendoEditor.exec(): `name` parameter cannot be empty\");\n                }\n\n                if (that.body.getAttribute(\"contenteditable\") !== \"true\" &&\n                    name !== \"print\" &&\n                    name !== \"pdf\" &&\n                    name !== \"exportAs\") {\n                    return false;\n                }\n\n                if (!that.keyboard.isTypingInProgress()) {\n                    that._focusBody();\n                    that.selectRange(that._range || that.getRange());\n                }\n\n                tool = that.tools[name] || defaultTools[name];\n\n                if (!tool) {\n                    Object.keys(defaultTools).map(key => {\n                        if (key.toLowerCase() === name) {\n                            tool = defaultTools[key];\n                        }\n                    });\n                }\n\n                if (tool) {\n                    range = that.getRange();\n\n                    if (tool.command) {\n                        command = tool.command(extend({ range: range, body: that.body, immutables: !!that.immutables }, params));\n                    }\n\n                    prevented = that.trigger(\"execute\", { name: name, command: command });\n\n                    if (prevented) {\n                        return;\n                    }\n\n                    if (/^(undo|redo)$/i.test(name)) {\n                        that.undoRedoStack[name]();\n                    } else if (command) {\n                        that.execCommand(command);\n\n                        if (command.async) {\n                            command.change = that._selectionChange.bind(that);\n                            return;\n                        }\n                    }\n\n                    that._selectionChange();\n                }\n            },\n\n            execCommand: function(command) {\n                if (!command.managesUndoRedo) {\n                    this.undoRedoStack.push(command);\n                }\n\n                command.editor = this;\n                command.exec();\n            },\n\n            focus: function() {\n                this.restoreSelection();\n            },\n\n            getRange: function() {\n                var selection = this.getSelection(),\n                    range = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : this.createRange(),\n                    doc = this.document;\n\n                if (range.startContainer == doc && range.endContainer == doc && !range.startOffset && !range.endOffset) {\n                    range.setStart(this.body, 0);\n                    range.collapse(true);\n                }\n\n                return range;\n            },\n\n            getSelection: function() {\n                return kendo.ui.editor.SelectionUtils.selectionFromDocument(this.document);\n            },\n\n            paste: function(html, options) {\n                this.focus();\n\n                var command = new kendo.ui.editor.InsertHtmlCommand($.extend({\n                    range: this.getRange(),\n                    html: html\n                }, options));\n\n                command.editor = this;\n\n                command.exec();\n            },\n\n            refresh: function() {\n                var that = this;\n\n                if (that.textarea) {\n                    that._destroyResizings();\n                    // preserve updated value before re-initializing\n                    // don't use update() to prevent the editor from encoding the content too early\n                    var value = that.value();\n                    that.textarea.val(value);\n                    that.wrapper.find(\"iframe\").remove();\n                    that._initializeContentElement(that);\n                    that.value(value);\n                }\n            },\n\n            restoreSelection: function() {\n                this._focusBody();\n\n                if (this.selectionRestorePoint) {\n                    this.selectRange(this.selectionRestorePoint.toRange());\n                }\n            },\n\n            saveSelection: function(range) {\n                range = range || this.getRange();\n                var container = range.commonAncestorContainer,\n                    body = this.body;\n\n                if (container == body || $.contains(body, container)) {\n                    this.selectionRestorePoint = new kendo.ui.editor.RestorePoint(range, body);\n                }\n            },\n\n            selectedHtml: function() {\n                return kendo.ui.editor.Serializer.domToXhtml(this.getRange().cloneContents());\n            },\n\n            selectRange: function(range) {\n                this._focusBody();\n                var selection = this.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n                this.saveSelection(range);\n            },\n\n            state: function(toolName) {\n                var tool = kendo.ui.Editor.defaultTools[toolName];\n                var finder = tool && (tool.options.finder || tool.finder);\n                var RangeUtils = kendo.ui.editor.RangeUtils;\n                var range, textNodes;\n\n                if (finder) {\n                    range = this.getRange();\n\n                    textNodes = RangeUtils.textNodes(range);\n\n                    if (!textNodes.length && range.collapsed) {\n                        textNodes = [range.startContainer];\n                    }\n\n                    return finder.getFormat ? finder.getFormat(textNodes) : finder.isFormatted(textNodes);\n                }\n\n                return false;\n            },\n\n            update: function(value) {\n                value = value || this.options.encoded ? this.encodedValue() : this.value();\n\n                if (this.textarea) {\n                    this.textarea.val(value);\n                    this._togglePlaceholder(!value.trim());\n                } else {\n                    this._oldValue = value;\n                }\n            },\n\n            value: function(html) {\n                var body = this.body,\n                    editorNS = kendo.ui.editor,\n                    options = this.options,\n                    currentHtml = editorNS.Serializer.domToXhtml(body, options.serialization);\n\n                if (html === undefined$1) {\n                    return currentHtml;\n                }\n\n                if (html == currentHtml) {\n                    return;\n                }\n\n                editorNS.Serializer.htmlToDom(html, body, options.deserialization);\n\n                this.selectionRestorePoint = null;\n                this.update();\n                this._refreshTools();\n            },\n\n            _bindTools: function() {\n                var that = this,\n                    defaultTools = this.tools;\n\n                that.unbind(\"select\", that.toolbar.resize.bind(that.toolbar));\n\n                that.toolbar.element.find(\"[data-command]\")\n                    .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                    .each((i, el) => {\n                        var toolName = el.getAttribute(\"data-command\"),\n                            tool = defaultTools[toolName];\n\n                        if (tool && tool.initialize) {\n                            tool.initialize($(el), that);\n                        }\n                    });\n\n                that.bind(\"select\", that.toolbar.resize.bind(that.toolbar));\n            },\n\n            _blur: function() {\n                var textarea = this.textarea;\n                var old = textarea ? textarea.val() : this._oldValue;\n                var value = this.options.encoded ? this.encodedValue() : this.value();\n\n                this.update();\n\n                if (textarea) {\n                    textarea.trigger(\"blur\");\n                }\n\n                if (value != old) {\n                    this.trigger(\"change\");\n                    if (textarea) {\n                        textarea.trigger(\"change\");\n                    }\n                }\n            },\n\n            _containsRange: function(range) {\n                var dom = kendo.ui.editor.Dom;\n                var body = this.body;\n                return range && dom.isAncestorOrSelf(body, range.startContainer) &&\n                    dom.isAncestorOrSelf(body, range.endContainer);\n            },\n\n            _createContentElement: function(stylesheets) {\n                var editor = this;\n                var iframe, wnd, doc;\n                var textarea = editor.textarea;\n                var specifiedDomain = editor.options.domain;\n                var domain = specifiedDomain || document.domain;\n                var domainScript = \"\";\n                var src = 'javascript:\"\"';\n                var lang = \"\";\n\n                textarea.hide();\n\n                iframe = $(\"<iframe />\", { title: editor.options.messages.editAreaTitle, frameBorder: \"0\" })[0];\n\n                $(iframe)\n                    .css(\"display\", \"\")\n                    .addClass(\"k-content k-iframe\")\n                    .attr(\"tabindex\", textarea[0].tabIndex)\n                    .insertBefore(textarea);\n\n                // automatically relax same-origin policy if document.domain != location.hostname,\n                // or forcefully relax if options.domain is specified (for document.domain = document.domain scenario)\n                if (specifiedDomain || domain != location.hostname) {\n                    // relax same-origin policy\n                    domainScript = `<script ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>document.domain=\"${domain}\"</script>`;\n                    src = \"javascript:document.write('\" + domainScript + \"')\";\n                    iframe.src = src;\n                }\n\n                if (!iframe.src) {\n                    iframe.src = \"\";\n                }\n\n                wnd = iframe.contentWindow || iframe;\n                doc = wnd.document || iframe.contentDocument;\n\n                $(iframe).one(\"load\", function() {\n                    editor._decorateFormatting(doc.body);\n                });\n\n                lang = document.getElementsByTagName(\"html\")[0].getAttribute(\"lang\") || DEFAULT_LANGUAGE;\n\n                doc.open();\n                doc.write(\n                    \"<!DOCTYPE html><html lang='\" + lang + \"'><head>\" +\n                    \"<meta charset='utf-8' />\" +\n                    \"<title>Kendo UI Editor content</title>\" +\n                    `<style ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>` +\n                        \"html{padding:0;margin:0;height:100%;min-height:100%;cursor:text;}\" +\n                        \"body{padding:0;margin:0;}\" +\n                        \"body{box-sizing:border-box;font-size:12px;font-family:Verdana,Geneva,sans-serif;margin-top:-1px;padding:5px .4em 0;\" +\n                        \"word-wrap: break-word;-webkit-nbsp-mode: space;-webkit-line-break: after-white-space;\" +\n                        (kendo.support.isRtl(textarea) ? \"direction:rtl;\" : \"\") +\n                        (os.ios ? \"word-break:keep-all;\" : \"\") +\n                        (browser.edge || browser.chrome ? \"height:100%;\" : \"\") +\n                        \"}\" +\n                        \"h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em}h3{font-size:1.16em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.7em}\" +\n                        \"p{margin:0 0 1em;}.k-marker{display:none;}.k-paste-container,.Apple-style-span{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}\" +\n                        \"ul,ol{padding-left:2.5em}\" +\n                        \"span{-ms-high-contrast-adjust:none;}\" +\n                        \"a{color:#00a}\" +\n                        \"code{font-size:1.23em}\" +\n                        \"telerik\\\\3Ascript{display: none;}\" +\n                        \".k-table{width:100%;border-spacing:0;margin: 0 0 1em;}\" +\n                        \".k-table td{min-width:1px;padding:.2em .3em;}\" +\n                        \".k-table,.k-table td{outline:0;border: 1px dotted #ccc;}\" +\n                        \".k-table th{outline:0;border: 1px dotted #999;}\" +\n                        \".k-table p{margin:0;padding:0;}\" +\n                        \".k-column-resize-handle-wrapper {position: absolute; height: 10px; width:10px; cursor: col-resize; z-index: 2;}\" +\n                        \".k-column-resize-handle {width: 100%; height: 100%;}\" +\n                        \".k-column-resize-handle > .k-column-resize-marker {width:2px; height:100%; margin:0 auto; background-color:#00b0ff; display:none; opacity:0.8;}\" +\n                        \".k-row-resize-handle-wrapper {position: absolute; cursor: row-resize; z-index:2; width: 10px; height: 10px;}\" +\n                        \".k-row-resize-handle {display: table; width: 100%; height: 100%;}\" +\n                        \".k-row-resize-marker-wrapper{display: table-cell; height:100%; width:100%; margin:0; padding:0; vertical-align: middle;}\" +\n                        \".k-row-resize-marker{margin: 0; padding:0; width:100%; height:2px; background-color: #00b0ff; opacity:0.8; display:none;}\" +\n                        \".k-element-resize-handle-wrapper {position: absolute; background-color: #fff; border: 1px solid #000; z-index: 100; width: 5px; height: 5px;}\" +\n                        \".k-element-resize-handle {width: 100%; height: 100%;}\" +\n                        \".k-element-resize-handle.k-resize-east{cursor:e-resize;}\" +\n                        \".k-element-resize-handle.k-resize-north{cursor:n-resize;}\" +\n                        \".k-element-resize-handle.k-resize-northeast{cursor:ne-resize;}\" +\n                        \".k-element-resize-handle.k-resize-northwest{cursor:nw-resize;}\" +\n                        \".k-element-resize-handle.k-resize-south{cursor:s-resize;}\" +\n                        \".k-element-resize-handle.k-resize-southeast{cursor:se-resize;}\" +\n                        \".k-element-resize-handle.k-resize-southwest{cursor:sw-resize;}\" +\n                        \".k-element-resize-handle.k-resize-west{cursor:w-resize;}\" +\n                        \".k-table.k-element-resizing{opacity:0.6;}\" +\n                        \".k-placeholder{color:grey}\" +\n                        \"k\\\\:script{display:none;}\" +\n                    \"</style>\" +\n                    domainScript +\n                    $.map(stylesheets, function(href) {\n                        return `<link rel='stylesheet' href='${href}' ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>`;\n                    }).join(\"\") +\n                    \"</head><body autocorrect='off' contenteditable='true'></body></html>\"\n                );\n                doc.close();\n\n                return wnd;\n            },\n\n            _deleteSavedRange: function() {\n                if (\"_range\" in this) {\n                    delete this._range;\n                }\n            },\n\n            _decorateFormatting: function(body) {\n                var formattingElement = this.toolbar.element.find(\"input[data-command=formatting]\"),\n                    dom = kendo.ui.editor.Dom,\n                    component, dataSource, items, i, tag, className, style;\n\n                if (formattingElement.length) {\n                    component = formattingElement.getKendoDropDownList();\n                    if (!component) {\n                        return;\n                    }\n                    dataSource = component.dataSource;\n                    items = dataSource.data();\n\n                    if (body) {\n                        component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n                    }\n\n                    if (this.options.unsafeInline !== false) {\n\n                        for (i = 0; i < items.length; i++) {\n                            tag = items[i].tag || \"span\";\n                            className = items[i].className;\n\n                            style = dom.inlineStyle(body, tag, { className: className });\n                            style = style.replace(/\"/g, \"'\");\n\n                            items[i].style = style + \";display:inline-block\";\n                        }\n                    }\n\n                    dataSource.trigger(\"change\");\n                }\n            },\n\n            _appendFormattingMarksStyles: function() {\n                const that = this;\n\n                let style, $head;\n\n                style = `<style id='${FORMATTING_MARKS_STYLE_ID}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\" } >\n                p::after,li::after{content: '\\\\00B6'; color: #6098f2;}\n                #${FORMATTING_MARKS_OVERLAY_WRAPPER_ID} {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    height: 100%;\n                    z-index: 9999;\n                    pointer-events: none;\n                }\n                #${FORMATTING_MARKS_OVERLAY_ID} {\n                    width: 100%;\n                    height: 100%;\n                    overflow: visible;\n                  }\n            </style>`;\n\n                $head = $(that.document.head);\n                $head.find(\"#\" + FORMATTING_MARKS_STYLE_ID).remove();\n                $head.append(style);\n            },\n\n            _appendFormattingMarksOverlay: function() {\n                const that = this;\n\n                that._formattingMarksOverlay = $(that.document)\n                .find(\"html\")\n                .append(`<div id='${FORMATTING_MARKS_OVERLAY_WRAPPER_ID}'><svg id='${FORMATTING_MARKS_OVERLAY_ID}'></svg><div>`)\n                .find(\"#\" + FORMATTING_MARKS_OVERLAY_ID);\n            },\n\n            _destroyFormattingMarksOverlay: function() {\n                const that = this;\n\n                $(that.document).find(\"#\" + FORMATTING_MARKS_OVERLAY_ID).remove();\n                $(that.document.head).find(\"#\" + FORMATTING_MARKS_STYLE_ID).remove();\n            },\n\n            _deregisterHandlers: function() {\n                var handlers = this._handlers;\n\n                for (var i = 0; i < handlers.length; i++) {\n                    var h = handlers[i];\n                    h.element.off(h.type, h.handler);\n                }\n\n                this._handlers = [];\n            },\n\n            _destroyUploadWidget: function() {\n                var editor = this;\n                if (editor._uploadWidget) {\n                    editor._uploadWidget.destroy();\n                    editor._uploadWidget = null;\n                }\n            },\n\n            _endTyping: function() {\n                var keyboard = this.keyboard;\n\n                try {\n                    if (keyboard.isTypingInProgress()) {\n                        keyboard.endTyping(true);\n                        this.saveSelection();\n                    }\n                } catch (e) { }\n            },\n\n            _focusBody: function() {\n                var body = this.body;\n                var iframe = this.wrapper && this.wrapper.find(\"iframe\")[0];\n                var documentElement = this.document.documentElement;\n                var activeElement = kendo._activeElement();\n                var scrollTop;\n\n\n                if (!iframe && body.scrollHeight > body.clientHeight) {\n                    scrollTop = body.scrollTop;\n                    body.focus();\n                    body.scrollTop = scrollTop;\n\n                } else if (activeElement != body && activeElement != iframe) {\n                    scrollTop = documentElement.scrollTop;\n                    body.focus();\n                    documentElement.scrollTop = scrollTop;\n                }\n            },\n\n            _focusOutside: function() {\n                // move focus outside the Editor, see https://github.com/telerik/kendo/issues/3673\n                if (kendo.support.browser.msie && this.textarea) {\n                    var tempInput = $(\"<input />\")\n                        .css({\n                            position: \"fixed\",\n                            left: \"1px\",\n                            top: \"1px\",\n                            width: \"1px\",\n                            height: \"1px\",\n                            \"font-size\": \"0\",\n                            border: \"0\",\n                            opacity: \"0\"\n                    })\n                    .appendTo(document.body).trigger(\"focus\");\n                    tempInput.trigger(\"blur\").remove();\n                }\n            },\n\n            _handleToolbarClick: function(e) {\n                var toolName = e.target.data(\"command\");\n\n                if (toolName && toolName !== \"createTable\") {\n                    this.exec(toolName);\n                }\n            },\n\n            _immutablesContext: function(range) {\n                var editorNS = kendo.ui.editor;\n\n                if (this.options.immutables) {\n                    if (range.collapsed) {\n                        return editorNS.Immutables.immutablesContext(range);\n                    } else {\n                        return editorNS.RangeUtils.editableTextNodes(range).length === 0;\n                    }\n                }\n            },\n\n            _initializeContentElement: function() {\n                var editor = this;\n                var doc;\n                var blurTrigger;\n                var mousedownTrigger;\n\n                if (editor.textarea) {\n                    editor.window = editor._createContentElement(editor.options.stylesheets);\n                    doc = editor.document = editor.window.contentDocument || editor.window.document;\n\n                    // Ensure that body exists as various Firefox plugins can cause a delay of the body creation\n                    // https://github.com/telerik/kendo-ui-core/issues/3515\n                    if (!doc.body) {\n                        var body = doc.createElement(\"body\");\n                        body.setAttribute(\"contenteditable\", \"true\");\n                        body.setAttribute(\"autocorrect\", \"off\");\n                        doc.getElementsByTagName(\"html\")[0].appendChild(body);\n\n                        var interval = setInterval(function() {\n                            if ($(editor.document).find(\"body\").length > 1) {\n                                $(editor.document).find(\"body\").last().remove();\n                                window.clearInterval(interval);\n                            }\n                        },10);\n                    }\n\n                    editor.body = doc.body;\n\n                    blurTrigger = editor.window;\n                    mousedownTrigger = doc;\n\n                    this._registerHandler(doc, \"mouseup\", this._mouseup.bind(this));\n                } else {\n                    editor.window = window;\n                    doc = editor.document = document;\n                    editor.body = editor.element[0];\n\n                    blurTrigger = editor.body;\n                    mousedownTrigger = editor.body;\n\n                    setTimeout(() => {\n                        editor._decorateFormatting(editor.body);\n                    });\n                }\n\n                this._registerHandler(blurTrigger, \"blur\", this._blur.bind(this));\n                editor._registerHandler(mousedownTrigger, \"down\", editor._mousedown.bind(editor));\n\n                try {\n                    doc.execCommand(\"enableInlineTableEditing\", null, false);\n                } catch (e) { }\n\n                if (kendo.support.touch) {\n                    this._registerHandler(doc, {\n                        \"keydown\": function() {\n                            // necessary in iOS when touch events are bound to the page\n                            if (kendo._activeElement() != doc.body) {\n                                editor.window.focus();\n                            }\n                        }\n                    });\n                }\n\n                this._initializePlaceholder();\n\n                this._spellCorrect(editor);\n\n                this._registerHandler(editor.document, {\n                    \"mouseover dragenter\": function(e) {\n                        var height = $(editor.body).height();\n                        var htmlHeight = $(editor.body.parentElement).height();\n\n                        if (htmlHeight > height && e.target.nodeName.toLowerCase() === \"html\") {\n                            editor._cachedHeight = \"\" + editor.body.style.height;\n                            editor.body.style.height = \"100%\";\n                        }\n                    },\n                    \"mouseout dragleave drop contextmenu\": function(e) {\n                        var restoreHeight = function() {\n                            if (editor._cachedHeight !== undefined$1 && e.target === editor.body) {\n                                editor.body.style.height = editor._cachedHeight;\n                                delete editor._cachedHeight;\n                            }\n                        };\n\n                        if (e.type === \"contextmenu\") {\n                            setTimeout(function() {\n                                restoreHeight();\n                            }, 10);\n                        } else {\n                            restoreHeight();\n                        }\n\n                    }\n                });\n\n                this._registerHandler(editor.body, {\n                    \"keydown\": function(e) {\n                        var range;\n\n                        if ((e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) && editor.body.getAttribute(\"contenteditable\") !== \"true\") {\n                            return false;\n                        }\n\n                        if (e.keyCode === keys.F10) {\n                            editor.toolbar.element.find(\"[tabindex=0]\").first().trigger(\"focus\");\n                            editor.toolbar.preventPopupHide = true;\n                            e.preventDefault();\n                            return;\n                        } else if (e.keyCode == keys.LEFT || e.keyCode == keys.RIGHT) {\n                            // skip bom nodes when navigating with arrows\n                            range = editor.getRange();\n                            var left = e.keyCode == keys.LEFT;\n                            var container = range[left ? \"startContainer\" : \"endContainer\"];\n                            var offset = range[left ? \"startOffset\" : \"endOffset\"];\n                            var direction = left ? -1 : 1;\n\n                            var next = offset + direction;\n                            var nextChar = left ? next : offset;\n\n                            if (container.nodeType == 3 && container.nodeValue[nextChar] == \"\\ufeff\") {\n                                range.setStart(container, next);\n                                range.collapse(true);\n                                editor.selectRange(range);\n                            }\n                        }\n\n                        var tools = editor.tools;\n                        var toolName = editor.keyboard.toolFromShortcut(tools, e);\n                        var toolOptions = toolName ? tools[toolName].options : {};\n\n                        if (toolName && !toolOptions.keyPressCommand) {\n                            e.preventDefault();\n\n                            if (!/^(undo|redo)$/.test(toolName)) {\n                                editor.keyboard.endTyping(true);\n                            }\n\n                            editor.trigger(\"keydown\", e);\n                            editor.exec(toolName);\n                            editor._runPostContentKeyCommands(e);\n\n                            return false;\n                        }\n\n                        editor.keyboard.clearTimeout();\n\n                        editor.keyboard.keydown(e);\n                    },\n                    \"keypress\": function(e) {\n                        setTimeout(function() {\n                            editor._runPostContentKeyCommands(e);\n                            editor._showElementResizeHandles();\n                        }, 0);\n                    },\n                    \"keyup\": function(e) {\n                        var selectionCodes = [\n                           keys.BACKSPACE,\n                           keys.TAB,\n                           keys.PAGEUP,\n                           keys.PAGEDOWN,\n                           keys.END,\n                           keys.HOME,\n                           keys.LEFT,\n                           keys.UP,\n                           keys.RIGHT,\n                           keys.DOWN,\n                           keys.INSERT,\n                           keys.DELETE\n                        ];\n\n                        if ($.inArray(e.keyCode, selectionCodes) > -1 || (e.keyCode == 65 && e.ctrlKey && !e.altKey && !e.shiftKey)) {\n                            window.clearTimeout(this._refreshInterval);\n                            this._refreshInterval = window.setTimeout(function() {\n                                editor._selectionChange();\n                            }, REFRESH_INTERVAL);\n                        }\n\n                        if (e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) {\n                            editor._handleSpaceAndNewLines();\n                        }\n\n                        editor.keyboard.keyup(e);\n                    },\n                    \"click\": function(e) {\n                        var dom = kendo.ui.editor.Dom, range;\n\n                        if (dom.name(e.target) === \"img\") {\n                            range = editor.createRange();\n                            range.selectNode(e.target);\n                            editor.selectRange(range);\n                        }\n                    },\n                    \"cut copy paste drop dragover\": function(e) {\n                        editor.clipboard[\"on\" + e.type](e);\n                    },\n                    \"focusin\": function() {\n                        if (editor.body.hasAttribute(\"contenteditable\")) {\n                            $(this).addClass(\"k-active\");\n                            // To be moved to the Editor\n                            editor._showWindow();\n                            editor._togglePlaceholder(false);\n                        }\n                    },\n                    \"focusout\": function() {\n                        setTimeout(function() {\n                            var active = kendo._activeElement();\n                            var body = editor.body;\n                            // All below to be moved to the Editor\n                            var toolbar = editor.toolbar;\n\n                            if (toolbar.options.popup) {\n                                var toolbarContainerElement = editor.windowInstance.element.get(0);\n                                if (toolbarContainerElement && !($.contains(toolbarContainerElement, active) || toolbarContainerElement == active)) {\n                                    toolbar.preventPopupHide = false;\n                                }\n                            }\n\n                            if (active != body && !$.contains(body, active) && !editor._toolbarFocused() && !toolbar.preventPopupHide && !$(active).hasClass(\"k-context-menu\")) {\n                                $(body).removeClass(\"k-active\");\n                                editor._hideWindow();\n                            }\n\n                            editor._togglePlaceholder(!editor.value().trim());\n                        }, 10);\n                    }\n                });\n\n                editor._initializeColumnResizing();\n                editor._initializeRowResizing();\n                editor._initializeElementResizing();\n            },\n\n            _initializeImmutables: function() {\n                var that = this,\n                    editorNS = kendo.ui.editor;\n\n                if (that.options.immutables) {\n                    that.immutables = new editorNS.Immutables(that);\n                }\n            },\n\n            _initializePlaceholder: function() {\n                var that = this,\n                    placeholder = that.options.placeholder,\n                    style, $head;\n\n                if (!that.textarea || !placeholder) {\n                    return;\n                }\n\n                style = `<style id='${PLACEHOLDER_TAG_ID}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\" } >.` +\n                            PLACEHOLDER_CLASS + \":before { content: '\" + placeholder + \"'; }\" +\n                        \"</style>\";\n\n                $head = $(that.document.head);\n                $head.find(\"#\" + PLACEHOLDER_TAG_ID).remove();\n                $head.append(style);\n\n                that._togglePlaceholder(!that.value().trim());\n            },\n\n            _initToolbar: function(toolbarContainer) {\n                var that = this,\n                    tools, defaults, toolbarOptions;\n\n                that.tools = [];\n                [tools, defaults] = that._processToolbarItems(that.options.tools);\n                that._setNativeTools();\n\n                toolbarOptions = {\n                    tools: tools,\n                    defaultTools: defaults,\n                    parentMessages: that.options.messages,\n                    resizable: that.options.resizable && that.options.resizable.toolbar,\n                    toggle: that._handleToolbarClick.bind(this),\n                    click: that._handleToolbarClick.bind(this),\n                    navigateOnTab: that.options.navigateOnTab,\n                    evaluateTemplates: true\n                };\n\n                that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n                that._bindTools();\n                that.bind(\"select\", that._refreshTools.bind(that));\n\n                toolbarContainer.on(\"mousedown\" + NS, \".k-toolbar-tool\", function(e) {\n                    if (!$(e.target).is(\"input\")) {\n                        e.preventDefault();\n                    }\n                });\n\n                if (!that.textarea) {\n                    that._initToolbarWindow(toolbarContainer);\n                }\n            },\n\n            _initToolbarWindow: function(toolbarEl) {\n                var that = this;\n\n                this.windowInstance = toolbarEl\n                    .wrap(\"<div class='editorToolbarWindow k-editor-window' />\")\n                    .parent()\n                    .prepend(\"<span class='k-editortoolbar-dragHandle'>\" + kendo.ui.icon(\"handle-drag\") + \"</span>\")\n                    .kendoWindow({\n                        title: false,\n                        resizable: false,\n                        draggable: {\n                            dragHandle: \".k-editortoolbar-dragHandle\"\n                        },\n                        animation: {\n                            open: { effects: \"fade:in\" },\n                            close: { effects: \"fade:out\" }\n                        },\n                        minHeight: 42,\n                        visible: false,\n                        autoFocus: false,\n                        actions: [],\n                        dragend: function() {\n                            this._moved = true;\n                        }\n                    })\n                    .on(\"mousedown\", function(e) {\n                        if (!$(e.target).is(\".k-icon,.k-svg-icon,svg\")) {\n                            that.toolbar.preventPopupHide = true;\n                        }\n                    })\n                    .on(\"focusout\", function() {\n                        that.element.focusout();\n                    })\n                    .data(\"kendoWindow\");\n            },\n\n            _mousedown: function(e) {\n                var editor = this;\n                editor._selectionStarted = true;\n\n                if ($(editor.body).parents('.k-window').length) {\n                    e.stopPropagation();\n                }\n\n                // handle middle-click and ctrl-click on links\n                if (browser.gecko) {\n                    return;\n                }\n\n                var target = $(e.target).closest(\"a[href]\");\n\n                if ((e.which == 2 || (e.which == 1 && e.ctrlKey)) && target && target.is(\"a[href]\")) {\n                    window.open(target.attr(\"href\"), \"_new\");\n                }\n\n                if (e.target.tagName && e.target.tagName.toLowerCase() === \"html\") {\n                    setTimeout(function() {\n                        editor.body.focus();\n                    }, 0);\n                }\n            },\n\n            _mouseup: function(e) {\n                var that = this;\n\n                if (kendo.support.mobileOS.ios && e && $(e.target).is(SELECT_OVERLAY_SELECTOR)) {\n                    return;\n                }\n\n                if (that._selectionStarted) {\n                    setTimeout(function() {\n                        that._selectionChange();\n                    }, 1);\n                }\n            },\n\n            _populateValue: function(options, domElement) {\n                var that = this,\n                    editorNS = kendo.ui.editor,\n                    dom = editorNS.Dom,\n                    value, comments;\n\n                if (options && options.value) {\n                    value = options.value;\n                } else if (that.textarea) {\n                    // indented HTML introduces problematic ranges in IE\n                    value = domElement.value;\n\n                    if (!value.replace(/\\s/g, '').length) {\n                        value = value.replace(/\\s/g, '');\n                    }\n\n                    // revert encoding of value when content is fetched from cache\n                    if (that.options.encoded && domElement.defaultValue && domElement.defaultValue.trim().length) {\n                        value = domElement.defaultValue;\n                    }\n\n                    var deserializedRoot = editorNS.Serializer.htmlToDom(value, $(\"<div></div>\")[0], that.options.deserialization);\n                    comments = dom.getAllComments(deserializedRoot);\n                    value = EditorUtils.cacheComments(value, comments);\n                    value = value.replace(/[\\r\\n\\v\\f\\t ]+/ig, \" \");\n                    value = EditorUtils.retrieveComments(value, comments);\n                } else {\n                    value = domElement.innerHTML;\n                }\n\n                that.value(value || '\\ufeff');\n            },\n\n            _resetGroups: function(current) {\n                var result = {};\n\n                Object.keys(current).map(key => {\n                    result[key + \"_\"] = current[key];\n                });\n\n                return result;\n            },\n\n            _processToolbarItems: function(optionsTools) {\n                var flatDefaultTools = {},\n                    processedObject = {},\n                    tools = [],\n                    currentGroups = $.extend(true, {}, toolGroups),\n                    i, j, t, name, guidGroupName;\n\n                for (i = 0; i < optionsTools.length; i++) {\n                    t = optionsTools[i];\n\n                    if (Array.isArray(t)) {\n                        guidGroupName = kendo.guid();\n\n                        for (j = 0; j < t.length; j++) {\n                            [flatDefaultTools, name] = this._processToolOptions(t[j], flatDefaultTools);\n\n                            if (!name) {\n                                continue;\n                            }\n\n                            flatDefaultTools[name].gr = guidGroupName;\n                        }\n                    } else {\n                        [flatDefaultTools, name] = this._processToolOptions(t, flatDefaultTools);\n\n                        if (!name) {\n                            continue;\n                        } else if (name === \"separator\") {\n                            currentGroups = this._resetGroups(currentGroups);\n                        }\n\n                        Object.keys(currentGroups).map(key => {\n                            var group = currentGroups[key];\n\n                            if (group.includes(name)) {\n                                flatDefaultTools[name].gr = key;\n                            }\n                        });\n                    }\n                }\n\n                Object.values(flatDefaultTools).map((tool) => {\n                    var group = tool.gr;\n\n                    delete tool.gr;\n\n                    if (group === undefined$1) {\n                        processedObject[tool.name] = tool;\n                    } else {\n                        if (!processedObject[group]) {\n                            processedObject[group] = [];\n                        }\n\n                        processedObject[group].push(tool);\n                    }\n                });\n\n                tools = Object.values(processedObject).map((g) => {\n                    var result;\n\n                    if (g.length) {\n                        result = g.map((to) => to.name);\n                    } else {\n                        result = g.name;\n                    }\n\n                    if (result.length === 1) {\n                        result = result[0];\n                    }\n\n                    return result;\n                });\n\n                return [tools, flatDefaultTools];\n            },\n\n            _processDefaultTool: function(tool, defaultTools) {\n                var name = tool.name,\n                    result = {},\n                    options;\n\n                if ($.isPlainObject(tool)) {\n                    if (name && defaultTools[name]) {\n                        // configured tool\n                        result = extend({}, defaultTools[name]);\n                        extend(result.options, tool);\n                    } else {\n                        // custom tool\n                        options = extend({ icon: \"gear\", type: \"button\" }, tool);\n\n                        if (!options.name) {\n                            options.name = \"custom\";\n                        }\n\n                        options.cssClass = \"k-\" + options.name;\n\n                        result = {\n                            options: options\n                        };\n\n                        name = options.name;\n                    }\n                } else if (defaultTools[tool]) {\n                    name = tool;\n                    result = defaultTools[name];\n                } else {\n                    return null;\n                }\n\n                this.tools[name] = result;\n\n                return result;\n            },\n\n            _processToolOptions: function(t, flatDefaultTools) {\n                var that = this,\n                    defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                    tool, name, view, shortcuts, options, uiOptions, icon, toolOptions, originalOptions, palette;\n\n                tool = this._processDefaultTool(t, defaultTools);\n\n                if (!tool) {\n                    return [flatDefaultTools, null];\n                }\n\n                options = tool.options;\n                name = options.name;\n                uiOptions = options.ui || {};\n                icon = EditorUtils.getToolCssClass(options.name, options.icon);\n\n                // We want to preserve any custom properties from the original tool object.\n                originalOptions = $.isPlainObject(t) ? $.extend({}, t) : {};\n                delete originalOptions.items;\n\n                toolOptions = $.extend({\n                    name: options.name,\n                    command: options.command,\n                    template: options.template,\n                    type: \"button\",\n                    icon: icon,\n                    showText: \"overflow\",\n                    showIcon: \"both\"\n                }, uiOptions, originalOptions);\n\n                if (options.tooltip) {\n                    if (!toolOptions.attributes) {\n                        toolOptions.attributes = {};\n                    }\n\n                    toolOptions.attributes.title = options.tooltip;\n                }\n                if (options.exec) {\n                    toolOptions.click = options.exec.bind(that);\n                    delete toolOptions.exec;\n                }\n\n                if (toolOptions.component === \"ColorPicker\") {\n                    if (options.palette !== undefined$1 || uiOptions.palette !== kendo.ui.editor.ColorTool.fn.options.palette) {\n                        palette = options.palette || kendo.ui.editor.ColorTool.fn.options.palette;\n                        view = options.palette !== undefined$1 && !options.palette ? \"gradient\" : \"palette\";\n                        toolOptions.componentOptions.palette = view === \"palette\" ? palette : undefined$1;\n                        toolOptions.componentOptions.views = [view];\n                        toolOptions.componentOptions.preview = view === \"gradient\";\n                        toolOptions.componentOptions.input = view === \"gradient\";\n                        toolOptions.componentOptions.buttons = view === \"gradient\";\n\n                        if (view === \"gradient\") {\n                            delete toolOptions.componentOptions.columns;\n                        }\n                    }\n                    if (view === \"palette\" && options.columns) {\n                        toolOptions.componentOptions.columns = options.columns;\n                    }\n                }\n\n                if (toolOptions.component === \"DropDownList\" || toolOptions.component === \"ComboBox\") {\n                    if (!toolOptions.componentOptions) {\n                        toolOptions.componentOptions = {};\n                    }\n\n                    if (!toolOptions.componentOptions.dataSource) {\n                        if (that.options[name] && Array.isArray(that.options[name])) {\n                            toolOptions.componentOptions.dataSource = that.options[name];\n                        } else {\n                            toolOptions.componentOptions.dataSource = options.items;\n                        }\n                    }\n                }\n                if (toolOptions.template) {\n                    delete toolOptions.type;\n                }\n\n                shortcuts = this._shortcutSequence(name);\n\n                if (shortcuts !== \"\") {\n                    if (!toolOptions.attributes) {\n                        toolOptions.attributes = {};\n                    }\n\n                    toolOptions.attributes[\"aria-keyshortcuts\"] = shortcuts;\n                }\n\n                flatDefaultTools[name] = toolOptions;\n\n                return [flatDefaultTools, name];\n            },\n\n            _refreshTools: function() {\n                var that = this,\n                    range = that.getRange(),\n                    editorNS = kendo.ui.editor,\n                    rangeUtils = editorNS.RangeUtils,\n                    nodes = rangeUtils.textNodes(range),\n                    immutables = that.options.immutables,\n                    immutablesContext = that._immutablesContext(range),\n                    defaultTools = that.tools;\n\n                nodes = editorNS.Dom.filterBy(nodes, editorNS.Dom.htmlIndentSpace, true);\n\n                if (!nodes.length) {\n                    nodes = [range.startContainer];\n                }\n\n                that.toolbar.element.find(\"[data-command]\")\n                    .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                    .each(function() {\n                        var toolName = this.getAttribute(\"data-command\"),\n                            tool = defaultTools[toolName],\n                            ui;\n\n                        if (tool) {\n                            ui = $(this);\n\n                            if (tool.update) {\n                                tool.update(ui, nodes, that.undoRedoStack);\n                            }\n\n                            if (immutables) {\n                                that._updateImmutablesState(tool, ui, immutablesContext);\n                            }\n                        }\n                    });\n            },\n\n            _registerHandler: function(element, type, handler) {\n                var editor = this;\n                var NS = \".kendoEditor\";\n                var eventNames;\n                var i;\n\n                element = $(element);\n\n                if (!this._handlers) {\n                    this._handlers = [];\n                }\n\n                if (element.length) {\n                    if ($.isPlainObject(type)) {\n                        for (var t in type) {\n                            if (type.hasOwnProperty(t)) {\n                                this._registerHandler(element, t, type[t]);\n                            }\n                        }\n                    } else {\n                        //map the original event to handle interaction on mobile platforms\n                        eventNames = kendo.applyEventMap(type).split(\" \");\n\n                        for (i = 0; i < eventNames.length; i++) {\n                            editor._handlers.push({\n                                element: element,\n                                type: eventNames[i] + NS,\n                                handler: handler\n                            });\n\n                            element.on(eventNames[i] + NS, handler);\n                        }\n                    }\n                }\n            },\n\n            _runPostContentKeyCommands: function(e) {\n                var range = this.getRange();\n                var tools = this.keyboard.toolsFromShortcut(this.tools, e);\n\n                for (var i = 0; i < tools.length; i++) {\n                    var tool = tools[i];\n                    var o = tool.options;\n                    if (!o.keyPressCommand) {\n                        continue;\n                    }\n\n                    var cmd = new o.command({ range: range });\n                    if (cmd.changesContent()) {\n                        this.keyboard.endTyping(true);\n                        this.exec(tool.name);\n                    }\n                }\n\n                this._handleSpaceAndNewLines();\n            },\n\n            _handleSpaceAndNewLines: function() {\n                const that = this,\n                    refreshDelay = that.options.formattingMarksRefreshDelay,\n                    editorNS = kendo.ui.editor,\n                    applyFormattingMarks = editorNS.applyFormattingMarks,\n                    clearFormattingMarksOverlay = editorNS.clearFormattingMarksOverlay;\n\n                if (that._toggledFormattingMarks) {\n                    if (that._formattingMarksOverlay.children().length) {\n                        clearFormattingMarksOverlay(that);\n                    }\n\n                    if (refreshDelay) {\n                        clearTimeout(that._formattingMarksTimeout);\n                        that._formattingMarksTimeout = setTimeout(() => applyFormattingMarks(that), refreshDelay);\n                    } else {\n                        applyFormattingMarks(that);\n                    }\n\n                }\n            },\n\n            _selectionChange: function() {\n                this._selectionStarted = false;\n                this.saveSelection();\n                this.trigger(\"select\", {});\n            },\n\n            _setOptionsTools: function(optionsTools) {\n                var that = this,\n                    toolbar = that.toolbar,\n                    toolbarContainer = toolbar.element,\n                    tools, defaults, toolbarOptions;\n\n                toolbar.destroy();\n                toolbarContainer.empty();\n\n                that.tools = [];\n                [tools, defaults] = that._processToolbarItems(optionsTools);\n                that._setNativeTools();\n\n                toolbarOptions = {\n                    tools: tools,\n                    defaultTools: defaults,\n                    parentMessages: that.options.messages,\n                    resizable: that.options.resizable && that.options.resizable.toolbar,\n                    toggle: that._handleToolbarClick.bind(this),\n                    click: that._handleToolbarClick.bind(this)\n                };\n\n                that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n                that._bindTools();\n            },\n\n            _setNativeTools: function() {\n                var defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                    i;\n\n                for (i = 0; i < NATIVE_TOOLS.length; i++) {\n                    if (!this.tools[NATIVE_TOOLS[i]]) {\n                        this.tools[NATIVE_TOOLS[i]] = defaultTools[NATIVE_TOOLS[i]];\n                    }\n                }\n            },\n\n            _setupHeight: function(type) {\n                var that = this;\n\n                if (type == \"textarea\") {\n                    setTimeout(function() {\n                        var heightStyle = that.wrapper[0].style.height;\n                        var expectedHeight = parseInt(heightStyle, 10);\n                        var actualHeight = that.wrapper.height();\n                        if (heightStyle.indexOf(\"px\") > 0 && !isNaN(expectedHeight) && actualHeight > expectedHeight) {\n                            that.wrapper.height(expectedHeight - (actualHeight - expectedHeight));\n                        }\n                    });\n                }\n            },\n\n            _setupKeyboard: function() {\n                var that = this,\n                    editorNS = kendo.ui.editor;\n\n                that.keyboard = new editorNS.Keyboard([\n                    new editorNS.BackspaceHandler(that),\n                    new editorNS.TypingHandler(that),\n                    new editorNS.SystemHandler(that),\n                    new editorNS.SelectAllHandler(that)\n                ]);\n            },\n\n            _setupType: function(element) {\n                var domElement = element[0],\n                    type = kendo.ui.editor.Dom.name(domElement),\n                    id = domElement.id,\n                    toolbarContainer;\n\n                if (type == \"textarea\") {\n                    this._wrapTextarea();\n\n                    toolbarContainer = this.wrapper.find(\".k-editor-toolbar\");\n\n                    if (!id) {\n                        id = kendo.guid();\n                        domElement.setAttribute(\"id\", id);\n                    }\n\n                    toolbarContainer.attr(\"aria-controls\", id);\n                } else {\n                    this.element.attr(\"contenteditable\", true).addClass(\"k-widget k-editor k-editor-inline\");\n                    toolbarContainer = $('<div class=\"k-editor-toolbar\"/>').insertBefore(element);\n                }\n\n                return toolbarContainer;\n            },\n\n            _shortcutSequence: function(name) {\n                var tool = kendo.ui.Editor.defaultTools[name],\n                    res = \"\",\n                    options;\n\n                if (!tool || !tool.options) {\n                    return res;\n                }\n\n                options = tool.options;\n\n                if (options.ctrl) {\n                    res += \"Ctrl+\";\n                }\n\n                if (options.shift) {\n                    res += \"Shift+\";\n                }\n\n                if (options.alt) {\n                    res += \"Alt+\";\n                }\n\n                if (options.key) {\n                    res += options.key;\n                }\n\n                return res;\n            },\n\n            _spellCorrect: function(editor) {\n                var beforeCorrection;\n                var falseTrigger = false;\n\n                this._registerHandler(editor.body, {\n                    \"contextmenu\": function() {\n                        editor.one(\"select\", function() {\n                            beforeCorrection = null;\n                        });\n\n                        editor._spellCorrectTimeout = setTimeout(function() {\n                            beforeCorrection = new kendo.ui.editor.RestorePoint(editor.getRange(), editor.body);\n                            falseTrigger = false;\n                        }, 10);\n                    },\n                    \"input\": function() {\n                        if (!beforeCorrection) {\n                            return;\n                        }\n\n                        if (kendo.support.browser.mozilla && !falseTrigger) {\n                            falseTrigger = true;\n                            return;\n                        }\n\n                        kendo.ui.editor._finishUpdate(editor, beforeCorrection);\n                    }\n                });\n            },\n\n            _togglePlaceholder: function(show) {\n                var that = this,\n                    body = that.body,\n                    $body = $(body),\n                    placeholder = that.options.placeholder;\n\n                if (!that.textarea || !placeholder) {\n                    return;\n                }\n\n                $body.attr('aria-label', function() {\n                    return show ? placeholder : \"\";\n                });\n\n                $body.toggleClass(PLACEHOLDER_CLASS, show);\n            },\n\n            _toolbarFocused: function() {\n                var active = kendo._activeElement(),\n                    popup = this.windowInstance,\n                    overflowPopup = this.overflowPopup;\n\n                return (popup && $(active).closest(popup.wrapper).length) ||\n                    (overflowPopup && overflowPopup.visible());\n            },\n\n            _updateImmutablesState: function(tool, ui, immutablesContext) {\n                var toolbar = this.toolbar,\n                    name = tool.name,\n                    uiElement = ui.closest(\".k-toolbar-tool\"),\n                    trackImmutables = tool.options.trackImmutables,\n                    editorNS = kendo.ui.editor;\n\n                if (trackImmutables === undefined$1) {\n                    trackImmutables = $.inArray(name, editorNS.Immutables.toolsToBeUpdated) > -1;\n                }\n\n                if (trackImmutables) {\n                    if (immutablesContext) {\n                        toolbar.hide(uiElement);\n                    } else {\n                        toolbar.show(uiElement);\n                    }\n                }\n            },\n\n            _wrapTextarea: function() {\n                var that = this,\n                    textarea = that.element,\n                    w = textarea[0].style.width,\n                    h = textarea[0].style.height,\n                    template = EditorUtils.editorWrapperTemplate(),\n                    editorWrap = $(template).insertBefore(textarea),\n                    editArea = editorWrap.find(\".k-editable-area\");\n\n                editorWrap.css({\n                    \"width\": w,\n                    \"height\": h\n                });\n\n                textarea.attr(\"autocomplete\", \"off\")\n                    .appendTo(editArea).addClass(\"k-content k-raw-content\").css(\"display\", \"none\");\n\n                that.textarea = textarea;\n                that.wrapper = editorWrap;\n            },\n\n            // Resizing methods\n            _resizable: function() {\n                var resizable = this.options.resizable;\n                var isResizable = $.isPlainObject(resizable) ? (resizable.content === undefined$1 || resizable.content === true) : resizable;\n\n                if (isResizable && this.textarea) {\n                    var draggableElement = $(\"<div class='k-resize-handle'>\" + kendo.ui.icon(\"caret-br\") + \"</div>\")\n                        .insertAfter(this.textarea);\n\n                    this.wrapper.addClass('k-resizable');\n\n                    this.wrapper.kendoResizable(extend({}, this.options.resizable, {\n                        draggableElement: draggableElement,\n                        start: function(e) {\n                            var editor = this.editor = $(e.currentTarget).closest(\".k-editor\");\n                            this.initialSize = editor.height();\n                            editor.find(\".k-editable-area\").last().append(\"<div class='k-overlay' />\");\n                        },\n                        resize: function(e) {\n                            var delta = e.y.initialDelta;\n                            var newSize = this.initialSize + delta;\n                            var min = this.options.min || 0;\n                            var max = this.options.max || Infinity;\n\n                            newSize = Math.min(max, Math.max(min, newSize));\n\n                            this.editor.height(newSize);\n                        },\n                        resizeend: function() {\n                            this.editor.find(\".k-overlay\").remove();\n                            this.editor = null;\n                        }\n                    }));\n\n                    if (kendo.support.mobileOS.ios) {\n                        var resizableWidget = this.wrapper.getKendoResizable();\n                        resizableWidget.draggable.options.ignore = SELECT_OVERLAY_SELECTOR;\n                    }\n                }\n            },\n\n            _destroyResizings: function() {\n                var editor = this;\n\n                editor._destroyElementResizing();\n                kendo.ui.editor.ElementResizingFactory.current.dispose(editor);\n                editor._destroyRowResizing();\n                kendo.ui.editor.RowResizing.dispose(editor);\n                editor._destroyColumnResizing();\n                kendo.ui.editor.ColumnResizing.dispose(editor);\n            },\n\n            _initializeElementResizing: function() {\n                var editor = this;\n\n                kendo.ui.editor.ElementResizingFactory.current.create(editor);\n\n                editor._showElementResizeHandlesProxy = editor._showElementResizeHandles.bind(editor);\n                editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n            },\n\n            _destroyElementResizing: function() {\n                var editor = this;\n                var elementResizing = editor.elementResizing;\n\n                if (elementResizing) {\n                    elementResizing.destroy();\n                    editor.elementResizing = null;\n                }\n\n                if (editor._showElementResizeHandlesProxy) {\n                    editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n                }\n            },\n\n            _showElementResizeHandles: function() {\n                var editor = this;\n                var elementResizing = editor.elementResizing;\n\n                if (elementResizing && elementResizing.element && elementResizing.element.parentNode) {\n                    elementResizing.showResizeHandles();\n                } else if (elementResizing && (!elementResizing.element || !elementResizing.element.parentNode)) {\n                    editor._destroyElementResizing();\n                }\n            },\n\n            _initializeColumnResizing: function() {\n                kendo.ui.editor.ColumnResizing.create(this);\n            },\n\n            _destroyColumnResizing: function() {\n                var editor = this;\n\n                if (editor.columnResizing) {\n                    editor.columnResizing.destroy();\n                    editor.columnResizing = null;\n                }\n            },\n\n            _initializeRowResizing: function() {\n                kendo.ui.editor.RowResizing.create(this);\n            },\n\n            _destroyRowResizing: function() {\n                var editor = this;\n\n                if (editor.rowResizing) {\n                    editor.rowResizing.destroy();\n                    editor.rowResizing = null;\n                }\n            },\n\n            // ToolBar Window methods\n            _getWindowWidth: function() {\n                var that = this,\n                    wrapper = that.windowInstance.wrapper,\n                    editorElement = that.element;\n\n                return outerWidth(editorElement) - parseInt(wrapper.css(\"border-left-width\"), 10) - parseInt(wrapper.css(\"border-right-width\"), 10);\n            },\n\n            _hideWindow: function() {\n                if (this.windowInstance) {\n                    this.windowInstance.close();\n                }\n            },\n\n            _overlapsWindow: function(box) {\n                var toolbarWrapper = this.windowInstance.wrapper,\n                    toolbarWrapperOffset = toolbarWrapper.offset(),\n                    toolbarWrapperLeft = toolbarWrapperOffset.left,\n                    toolbarWrapperTop = toolbarWrapperOffset.top,\n                    boxOffset = box.offset(),\n                    boxOffsetLeft = boxOffset.left,\n                    boxOffsetTop = boxOffset.top;\n\n                return !(boxOffsetLeft + box.width() < toolbarWrapperLeft ||\n                        boxOffsetLeft > toolbarWrapperLeft + toolbarWrapper.width() ||\n                        boxOffsetTop + box.height() < toolbarWrapperTop ||\n                        boxOffsetTop > toolbarWrapperTop + toolbarWrapper.height());\n            },\n\n            _showWindow: function() {\n                var that = this,\n                    windowInstance = that.windowInstance,\n                    wrapper, editorElement, editorOffset,\n                    browser = kendo.support.browser;\n\n                if (windowInstance) {\n                    wrapper = windowInstance.wrapper;\n                    editorElement = that.element;\n\n                    if (!wrapper.is(\":visible\") || !that.windowInstance.options.visible) {\n\n                        if (!wrapper[0].style.width) {\n                            wrapper.width(this._getWindowWidth());\n                        }\n\n                        // track content position when other parts of page change\n                        if (!windowInstance._moved) {\n                            editorOffset = editorElement.offset();\n                            wrapper.css({\n                                top: Math.max(0, parseInt(editorOffset.top, 10) - outerHeight(wrapper) - parseInt(that.windowInstance.element.css(\"padding-bottom\"), 10)),\n                                left: Math.max(0, parseInt(editorOffset.left, 10))\n                            });\n                        }\n\n                        if ((browser.msie || browser.edge) && that._overlapsWindow(editorElement)) {\n                            setTimeout(function() {\n                                windowInstance.open();\n                            }, 0);\n                        } else {\n                            windowInstance.open();\n                        }\n                    }\n                }\n            }\n        });\n\n        Editor.defaultTools = {};\n\n        kendo.ui.plugin(Editor);\n\n        var Tool = Class.extend({\n            init: function(options) {\n                this.options = options;\n            },\n\n            command: function(commandArguments) {\n                return new this.options.command(commandArguments);\n            },\n\n            update: $.noop\n        });\n\n        Tool.exec = function(editor, name, value) {\n            editor.exec(name, { value: value });\n        };\n\n        var UndoTool = Tool.extend({\n            command: $.noop,\n            update: function(ui, nodes, undoRedoStack) {\n                var that = this,\n                    name = that.options.name,\n                    toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n                switch (name) {\n                    case \"undo\":\n                        toolbar.enable(ui, undoRedoStack.canUndo());\n                        break;\n                    case \"redo\":\n                        toolbar.enable(ui, undoRedoStack.canRedo());\n                        break;\n                    default:\n                        break;\n                }\n\n                ui.removeAttr(\"disabled\");\n            }\n        });\n\n        EditorUtils.registerTool(\"separator\", new Tool({ ui: { type: \"separator\" } }));\n        EditorUtils.registerTool(\"undo\", new UndoTool({ key: \"Z\", ctrl: true }));\n        EditorUtils.registerTool(\"redo\", new UndoTool({ key: \"Y\", ctrl: true }));\n\n        // Exports ================================================================\n\n        var emptyElementContent = '\\ufeff';\n        var emptyTableCellContent = emptyElementContent;\n\n        if (browser.msie || browser.edge) {\n            emptyTableCellContent = emptyElementContent = \"&nbsp;\";\n        }\n\n        extend(kendo.ui, {\n            editor: {\n                EditorUtils: EditorUtils,\n                Tool: Tool,\n                emptyElementContent: emptyElementContent,\n                emptyTableCellContent: emptyTableCellContent\n            }\n        });\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Editor.prototype);\n            Editor.prototype._drawPDF = function() {\n                return kendo.drawing.drawDOM(this.body, this.options.pdf);\n            };\n            Editor.prototype.saveAsPDF = function() {\n                var progress = new $.Deferred();\n                var promise = progress.promise();\n                var args = { promise: promise };\n\n                if (this.trigger(\"pdfExport\", args)) {\n                    return;\n                }\n\n                var options = this.options.pdf;\n\n                this._drawPDF(progress)\n                .then(function(root) {\n                    return kendo.drawing.exportPDF(root, options);\n                })\n                .done(function(dataURI) {\n                    kendo.saveAs({\n                        dataURI: dataURI,\n                        fileName: options.fileName,\n                        proxyURL: options.proxyURL,\n                        proxyTarget: options.proxyTarget,\n                        forceProxy: options.forceProxy\n                    });\n                    progress.resolve();\n                })\n                .fail(function(err) {\n                    progress.reject(err);\n                });\n\n                return promise;\n            };\n        }\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        map = $.map,\n        extend = $.extend,\n        browser = kendo.support.browser,\n        STYLE = \"style\",\n        FLOAT = \"float\",\n        CSSFLOAT = \"cssFloat\",\n        STYLEFLOAT = \"styleFloat\",\n        CLASS = \"class\",\n        KMARKER = \"k-marker\";\n\n    function makeMap(items) {\n        var obj = {},\n            i, len;\n\n        for (i = 0, len = items.length; i < len; i++) {\n            obj[items[i]] = true;\n        }\n        return obj;\n    }\n\n    var empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed\".split(\",\")),\n        nonListBlockElements = \"p,div,h1,h2,h3,h4,h5,h6,address,applet,blockquote,button,center,dd,dir,dl,dt,fieldset,form,frameset,hr,iframe,isindex,map,menu,noframes,noscript,object,pre,script,table,tbody,td,tfoot,th,thead,tr,header,article,nav,footer,section,aside,main,figure,figcaption\".split(\",\"),\n        blockElements = nonListBlockElements.concat([\"ul\",\"ol\",\"li\"]),\n        block = makeMap(blockElements),\n        selfClosing = makeMap(\"area,base,br,col,command,embed,hr,img,input,keygen,link,menuitem,meta,param,source,track,wbr\".split(\",\")),\n        inlineElements = \"span,em,a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,strike,strong,sub,sup,textarea,tt,u,var,data,time,mark,ruby\".split(\",\"),\n        inline = makeMap(inlineElements),\n        fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\".split(\",\")),\n        nonEmptyNonTextContentElements = [\"hgroup\",\"ol\",\"ul\",\"dl\",\"object\",\"video\",\"audio\",\"table\",\"colgroup\",\"tbody\",\"thead\",\"tfoot\",\"tr\",\"select\",\"optgroup\"];\n\n    var normalize = function(node) {\n        if (node.nodeType == 1) {\n            node.normalize();\n        }\n    };\n\n    if (browser.msie && browser.version >= 8) {\n        normalize = function(parent) {\n            if (parent.nodeType == 1 && parent.firstChild) {\n                var prev = parent.firstChild,\n                    node = prev;\n\n                normalize(node);\n\n                while (true) {\n                    node = node.nextSibling;\n\n                    if (!node) {\n                        break;\n                    }\n\n                    normalize(node);\n\n                    if (node.nodeType == 3 && prev.nodeType == 3) {\n                        node.nodeValue = prev.nodeValue + node.nodeValue;\n                        Dom.remove(prev);\n                    }\n\n                    prev = node;\n                }\n            }\n        };\n    }\n\n    var whitespace = /^\\s+$/,\n        emptyspace = /^[\\n\\r\\t]+$/,\n        rgb = /rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i,\n        bom = /\\ufeff/g,\n        whitespaceOrBom = /^(\\s+|\\ufeff)$/,\n        persistedScrollTop,\n        cssAttributes =\n               (\"color,padding-left,padding-right,padding-top,padding-bottom,\" +\n                \"background-color,background-attachment,background-image,background-position,background-repeat,\" +\n                \"border-top-style,border-top-width,border-top-color,\" +\n                \"border-bottom-style,border-bottom-width,border-bottom-color,\" +\n                \"border-left-style,border-left-width,border-left-color,\" +\n                \"border-right-style,border-right-width,border-right-color,\" +\n                \"font-family,font-size,font-style,font-variant,font-weight,line-height\"\n               ).split(\",\"),\n        htmlRe = /[<>\\&]/g,\n        entityRe = /[\\u00A0-\\u2666<>\\&]/g,\n        entityTable = {\n                34: 'quot', 38: 'amp', 39: 'apos', 60: 'lt', 62: 'gt',\n                160: 'nbsp', 161: 'iexcl', 162: 'cent', 163: 'pound', 164: 'curren',\n                165: 'yen', 166: 'brvbar', 167: 'sect', 168: 'uml', 169: 'copy',\n                170: 'ordf', 171: 'laquo', 172: 'not', 173: 'shy', 174: 'reg',\n                175: 'macr', 176: 'deg', 177: 'plusmn', 178: 'sup2', 179: 'sup3',\n                180: 'acute', 181: 'micro', 182: 'para', 183: 'middot', 184: 'cedil',\n                185: 'sup1', 186: 'ordm', 187: 'raquo', 188: 'frac14', 189: 'frac12',\n                190: 'frac34', 191: 'iquest', 192: 'Agrave', 193: 'Aacute', 194: 'Acirc',\n                195: 'Atilde', 196: 'Auml', 197: 'Aring', 198: 'AElig', 199: 'Ccedil',\n                200: 'Egrave', 201: 'Eacute', 202: 'Ecirc', 203: 'Euml', 204: 'Igrave',\n                205: 'Iacute', 206: 'Icirc', 207: 'Iuml', 208: 'ETH', 209: 'Ntilde',\n                210: 'Ograve', 211: 'Oacute', 212: 'Ocirc', 213: 'Otilde', 214: 'Ouml',\n                215: 'times', 216: 'Oslash', 217: 'Ugrave', 218: 'Uacute', 219: 'Ucirc',\n                220: 'Uuml', 221: 'Yacute', 222: 'THORN', 223: 'szlig', 224: 'agrave',\n                225: 'aacute', 226: 'acirc', 227: 'atilde', 228: 'auml', 229: 'aring',\n                230: 'aelig', 231: 'ccedil', 232: 'egrave', 233: 'eacute', 234: 'ecirc',\n                235: 'euml', 236: 'igrave', 237: 'iacute', 238: 'icirc', 239: 'iuml',\n                240: 'eth', 241: 'ntilde', 242: 'ograve', 243: 'oacute', 244: 'ocirc',\n                245: 'otilde', 246: 'ouml', 247: 'divide', 248: 'oslash', 249: 'ugrave',\n                250: 'uacute', 251: 'ucirc', 252: 'uuml', 253: 'yacute', 254: 'thorn',\n                255: 'yuml', 402: 'fnof', 913: 'Alpha', 914: 'Beta', 915: 'Gamma',\n                916: 'Delta', 917: 'Epsilon', 918: 'Zeta', 919: 'Eta', 920: 'Theta',\n                921: 'Iota', 922: 'Kappa', 923: 'Lambda', 924: 'Mu', 925: 'Nu',\n                926: 'Xi', 927: 'Omicron', 928: 'Pi', 929: 'Rho', 931: 'Sigma',\n                932: 'Tau', 933: 'Upsilon', 934: 'Phi', 935: 'Chi', 936: 'Psi',\n                937: 'Omega', 945: 'alpha', 946: 'beta', 947: 'gamma', 948: 'delta',\n                949: 'epsilon', 950: 'zeta', 951: 'eta', 952: 'theta', 953: 'iota',\n                954: 'kappa', 955: 'lambda', 956: 'mu', 957: 'nu', 958: 'xi',\n                959: 'omicron', 960: 'pi', 961: 'rho', 962: 'sigmaf', 963: 'sigma',\n                964: 'tau', 965: 'upsilon', 966: 'phi', 967: 'chi', 968: 'psi',\n                969: 'omega', 977: 'thetasym', 978: 'upsih', 982: 'piv', 8226: 'bull',\n                8230: 'hellip', 8242: 'prime', 8243: 'Prime', 8254: 'oline', 8260: 'frasl',\n                8472: 'weierp', 8465: 'image', 8476: 'real', 8482: 'trade', 8501: 'alefsym',\n                8592: 'larr', 8593: 'uarr', 8594: 'rarr', 8595: 'darr', 8596: 'harr',\n                8629: 'crarr', 8656: 'lArr', 8657: 'uArr', 8658: 'rArr', 8659: 'dArr',\n                8660: 'hArr', 8704: 'forall', 8706: 'part', 8707: 'exist', 8709: 'empty',\n                8711: 'nabla', 8712: 'isin', 8713: 'notin', 8715: 'ni', 8719: 'prod',\n                8721: 'sum', 8722: 'minus', 8727: 'lowast', 8730: 'radic', 8733: 'prop',\n                8734: 'infin', 8736: 'ang', 8743: 'and', 8744: 'or', 8745: 'cap',\n                8746: 'cup', 8747: 'int', 8756: 'there4', 8764: 'sim', 8773: 'cong',\n                8776: 'asymp', 8800: 'ne', 8801: 'equiv', 8804: 'le', 8805: 'ge',\n                8834: 'sub', 8835: 'sup', 8836: 'nsub', 8838: 'sube', 8839: 'supe',\n                8853: 'oplus', 8855: 'otimes', 8869: 'perp', 8901: 'sdot', 8968: 'lceil',\n                8969: 'rceil', 8970: 'lfloor', 8971: 'rfloor', 9001: 'lang', 9002: 'rang',\n                9674: 'loz', 9824: 'spades', 9827: 'clubs', 9829: 'hearts', 9830: 'diams',\n                338: 'OElig', 339: 'oelig', 352: 'Scaron', 353: 'scaron', 376: 'Yuml',\n                710: 'circ', 732: 'tilde', 8194: 'ensp', 8195: 'emsp', 8201: 'thinsp',\n                8204: 'zwnj', 8205: 'zwj', 8206: 'lrm', 8207: 'rlm', 8211: 'ndash',\n                8212: 'mdash', 8216: 'lsquo', 8217: 'rsquo', 8218: 'sbquo', 8220: 'ldquo',\n                8221: 'rdquo', 8222: 'bdquo', 8224: 'dagger', 8225: 'Dagger', 8240: 'permil',\n                8249: 'lsaquo', 8250: 'rsaquo', 8364: 'euro'\n            };\n\n    var Dom = {\n        block: block,\n        inline: inline,\n\n        findNodeIndex: function(node, skipText) {\n            var i = 0;\n\n            if (!node) {\n                return -1;\n            }\n\n            while (true) {\n                node = node.previousSibling;\n\n                if (!node) {\n                    break;\n                }\n\n                if (!(skipText && node.nodeType == 3)) {\n                    i++;\n                }\n            }\n\n            return i;\n        },\n\n        isDataNode: function(node) {\n            return node && node.nodeValue !== null && node.data !== null;\n        },\n\n        isAncestorOf: function(parent, node) {\n            try {\n                return !Dom.isDataNode(parent) && ($.contains(parent, Dom.isDataNode(node) ? node.parentNode : node) || node.parentNode == parent);\n            } catch (e) {\n                return false;\n            }\n        },\n\n        isAncestorOrSelf: function(root, node) {\n            return Dom.isAncestorOf(root, node) || root == node;\n        },\n\n        findClosestAncestor: function(root, node) {\n            if (Dom.isAncestorOf(root, node)) {\n                while (node && node.parentNode != root) {\n                    node = node.parentNode;\n                }\n            }\n\n            return node;\n        },\n\n        getAllComments: function(rootElem) {\n            var comments = [];\n            // Fourth argument, which is actually obsolete according to the DOM4 standard, is required in IE 11\n            var iterator = document.createNodeIterator(rootElem,\n                NodeFilter.SHOW_COMMENT,\n                function() {\n                    return NodeFilter.FILTER_ACCEPT;\n                }, false);\n\n            var curNode = iterator.nextNode();\n            while (curNode) {\n                comments.push(curNode.nodeValue);\n                curNode = iterator.nextNode();\n            }\n            return comments;\n        },\n\n        getNodeLength: function(node) {\n            return Dom.isDataNode(node) ? node.length : node.childNodes.length;\n        },\n\n        splitDataNode: function(node, offset) {\n            var newNode = node.cloneNode(false);\n            var denormalizedText = \"\";\n            var iterator = node.nextSibling;\n            var temp;\n\n            while (iterator && iterator.nodeType == 3 && iterator.nodeValue) {\n                denormalizedText += iterator.nodeValue;\n                temp = iterator;\n                iterator = iterator.nextSibling;\n                Dom.remove(temp);\n            }\n\n            node.deleteData(offset, node.length);\n            newNode.deleteData(0, offset);\n            newNode.nodeValue += denormalizedText;\n            Dom.insertAfter(newNode, node);\n        },\n\n        attrEquals: function(node, attributes) {\n            for (var key in attributes) {\n                var value = node[key];\n\n                if (key == FLOAT) {\n                    value = node[kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT];\n                }\n\n                if (typeof value == \"object\") {\n                    if (!Dom.attrEquals(value, attributes[key])) {\n                        return false;\n                    }\n                } else if (value != attributes[key]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        blockParentOrBody: function(node) {\n            return Dom.parentOfType(node, blockElements) || node.ownerDocument.body;\n        },\n\n        blockParents: function(nodes) {\n            var blocks = [],\n                i, len;\n\n            for (i = 0, len = nodes.length; i < len; i++) {\n                var block = Dom.parentOfType(nodes[i], Dom.blockElements);\n                if (block && $.inArray(block, blocks) < 0) {\n                    blocks.push(block);\n                }\n            }\n\n            return blocks;\n        },\n\n        windowFromDocument: function(document) {\n            return document.defaultView || document.parentWindow;\n        },\n\n        normalize: normalize,\n        blockElements: blockElements,\n        nonListBlockElements: nonListBlockElements,\n        inlineElements: inlineElements,\n        empty: empty,\n        fillAttrs: fillAttrs,\n        nodeTypes: {\n            ELEMENT_NODE: 1,\n            ATTRIBUTE_NODE: 2,\n            TEXT_NODE: 3,\n            CDATA_SECTION_NODE: 4,\n            ENTITY_REFERENCE_NODE: 5,\n            ENTITY_NODE: 6,\n            PROCESSING_INSTRUCTION_NODE: 7,\n            COMMENT_NODE: 8,\n            DOCUMENT_NODE: 9,\n            DOCUMENT_TYPE_NODE: 10,\n            DOCUMENT_FRAGMENT_NODE: 11,\n            NOTATION_NODE: 12\n        },\n\n        toHex: function(color) {\n            var matches = rgb.exec(color);\n\n            if (!matches) {\n                return color;\n            }\n\n            return \"#\" + map(matches.slice(1), function(x) {\n                x = parseInt(x, 10).toString(16);\n                return x.length > 1 ? x : \"0\" + x;\n            }).join(\"\");\n        },\n\n        encode: function(value, options) {\n            var encodableChars = (!options || options.entities) ? entityRe : htmlRe;\n            return value.replace(encodableChars, function(c) {\n                var charCode = c.charCodeAt(0);\n                var entity = entityTable[charCode];\n                return entity ? '&' + entity + ';' : c;\n            });\n        },\n        isBom: function(node) {\n            return node && node.nodeType === 3 && /^[\\ufeff]+$/.test(node.nodeValue);\n        },\n        stripBom: function(text) {\n            return (text || \"\").replace(bom, \"\");\n        },\n\n        stripBomNode: function(node) {\n            if (Dom.isBom(node)) {\n                node.parentNode.removeChild(node);\n            }\n        },\n\n        insignificant: function(node) {\n            var attr = node.attributes;\n\n            return node.className == \"k-marker\" || (Dom.is(node, 'br') && (node.className == \"k-br\" || attr._moz_dirty || attr._moz_editor_bogus_node)) || (Dom.is(node, 'span') && (node.className == \"k-br\"));\n        },\n        tableCell: function(node) {\n            return Dom.is(node, \"td\") || Dom.is(node, \"th\");\n        },\n        significantNodes: function(nodes) {\n            return $.grep(nodes, function(child) {\n                var name = Dom.name(child);\n\n                if (name == 'br') {\n                    return false;\n                } else if (Dom.insignificant(child)) {\n                    return false;\n                } else if (Dom.emptyTextNode(child)) {\n                    return false;\n                } else if (child.nodeType == 1 && !empty[name] && Dom.emptyNode(child)) {\n                    return false;\n                }\n\n                return true;\n            });\n        },\n\n        emptyTextNode: function(node) {\n            return node && node.nodeType == 3 && whitespaceOrBom.test(node.nodeValue);\n        },\n\n        emptyNode: function(node) {\n            return node.nodeType == 1 && !Dom.significantNodes(node.childNodes).length;\n        },\n\n        name: function(node) {\n            return node.nodeName.toLowerCase();\n        },\n\n        significantChildNodes: function(node) {\n            return $.grep(node.childNodes, function(child) {\n                return child.nodeType != 3 || !Dom.isWhitespace(child);\n            });\n        },\n\n        getTextNodes: function(body, nodes) {\n            const childNodes = body.childNodes;\n            nodes = nodes || [];\n\n            for (const node of childNodes) {\n                if (node.nodeType === this.nodeTypes.TEXT_NODE &&\n                    (blockElements.includes(Dom.name(node.parentNode)) ||\n                    inlineElements.includes(Dom.name(node.parentNode)))) {\n                    nodes.push(node);\n                } else if (node.nodeType === this.nodeTypes.ELEMENT_NODE) {\n                    this.getTextNodes(node, nodes);\n                }\n            }\n\n            return nodes;\n        },\n\n        lastTextNode: function(node) {\n            var result = null;\n\n            if (node.nodeType == 3) {\n                return node;\n            }\n\n            for (var child = node.lastChild; child; child = child.previousSibling) {\n                result = Dom.lastTextNode(child);\n\n                if (result) {\n                    return result;\n                }\n            }\n\n            return result;\n        },\n\n        is: function(node, nodeName) {\n            return node && Dom.name(node) == nodeName;\n        },\n\n        isMarker: function(node) {\n            return node.className == KMARKER;\n        },\n\n        isWhitespace: function(node) {\n            return whitespace.test(node.nodeValue);\n        },\n\n        allowsTextContent: function(node) {\n            var result = true;\n\n            nonEmptyNonTextContentElements.every(function(name) {\n                if (Dom.is(node, name)) {\n                    result = false;\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n\n            return result;\n        },\n\n        allWhitespaceContent: function(node) {\n            var child = node.firstChild;\n            while (child && Dom.isWhitespace(child)) {\n                child = child.nextSibling;\n            }\n\n            return !child;\n        },\n\n        isEmptyspace: function(node) {\n            return emptyspace.test(node.nodeValue);\n        },\n\n        htmlIndentSpace: function(node) {\n            if (!(Dom.isDataNode(node) && Dom.isWhitespace(node))) {\n                return false;\n            }\n\n            if (emptyspace.test(node.nodeValue)) {\n                return true;\n            }\n\n            var sibling = function(el, direction) {\n                while (el[direction]) {\n                    el = el[direction];\n                    if (Dom.significantNodes([el]).length > 0) {\n                        return el;\n                    }\n                }\n            };\n\n            var parent = node.parentNode;\n            var prev = sibling(node, \"previousSibling\");\n            var next = sibling(node, \"nextSibling\");\n\n            if (bom.test(node.nodeValue)) {\n                return !!(prev || next);\n            }\n\n            if ($(parent).is(\"tr,tbody,thead,tfoot,table,ol,ul\")) {\n                return true;\n            }\n\n            if (Dom.isBlock(parent) || Dom.is(parent, \"body\")) {\n                var isPrevBlock = prev && Dom.isBlock(prev);\n                var isNextBlock = next && Dom.isBlock(next);\n                if ((!next && isPrevBlock) || (!prev && isNextBlock) || (isPrevBlock && isNextBlock)) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        isBlock: function(node) {\n            return block[Dom.name(node)];\n        },\n\n        isSelfClosing: function(node) {\n            return selfClosing[Dom.name(node)];\n        },\n\n        isEmpty: function(node) {\n            return empty[Dom.name(node)];\n        },\n\n        isInline: function(node) {\n            return inline[Dom.name(node)];\n        },\n\n        isImg: function(node) {\n            return Dom.name(node) == \"img\";\n        },\n\n        isBr: function(node) {\n            return Dom.name(node) == \"br\";\n        },\n\n        list: function(node) {\n            var name = node ? Dom.name(node) : \"\";\n            return name == \"ul\" || name == \"ol\" || name == \"dl\";\n        },\n\n        scrollContainer: function(doc) {\n            var wnd = Dom.windowFromDocument(doc),\n                scrollContainer = (wnd.contentWindow || wnd).document || wnd.ownerDocument || wnd;\n\n            if (scrollContainer.compatMode == 'BackCompat') {\n                scrollContainer = scrollContainer.body;\n            } else {\n                scrollContainer = scrollContainer.scrollingElement || scrollContainer.documentElement;\n            }\n\n            return scrollContainer;\n        },\n\n        scrollTo: function(node, toStart) {\n            var doc = node.ownerDocument;\n            var wnd = Dom.windowFromDocument(doc);\n            var windowHeight = wnd.innerHeight;\n            var scrollContainer = Dom.scrollContainer(doc);\n            var element, elementTop, elementHeight, marker;\n\n            if (Dom.isDataNode(node)) {\n                if (toStart) {\n                    marker = Dom.create(doc, \"span\", { \"innerHTML\": \"&#xfeff;\" });\n                    Dom.insertBefore(marker, node);\n                    element = $(marker);\n                } else {\n                    element = $(node.parentNode);\n                }\n            } else {\n                element = $(node);\n            }\n\n            elementTop = element.offset().top;\n            elementHeight = element[0].offsetHeight;\n\n            if (toStart || !elementHeight) {\n                elementHeight = parseInt(element.css(\"line-height\"), 10) ||\n                                Math.ceil(1.2 * parseInt(element.css(\"font-size\"), 10)) ||\n                                15;\n            }\n\n            if (marker) {\n                Dom.remove(marker);\n            }\n\n            if (elementHeight + elementTop > scrollContainer.scrollTop + windowHeight) {\n                scrollContainer.scrollTop = elementHeight + elementTop - windowHeight;\n            }\n        },\n\n        persistScrollTop: function(doc) {\n            persistedScrollTop = Dom.scrollContainer(doc).scrollTop;\n        },\n\n        offset: function(target, offsetParent) {\n            var result = { top: target.offsetTop, left: target.offsetLeft };\n            var parent = target.offsetParent;\n\n            while (parent && (!offsetParent || Dom.isAncestorOf(offsetParent, parent))) {\n                result.top += parent.offsetTop;\n                result.left += parent.offsetLeft;\n                parent = parent.offsetParent;\n            }\n\n            return result;\n        },\n\n        restoreScrollTop: function(doc) {\n            if (typeof persistedScrollTop == \"number\") {\n                Dom.scrollContainer(doc).scrollTop = persistedScrollTop;\n                persistedScrollTop = undefined;\n            }\n        },\n\n        insertAt: function(parent, newElement, position) {\n            parent.insertBefore(newElement, parent.childNodes[position] || null);\n        },\n\n        insertBefore: function(newElement, referenceElement) {\n            if (referenceElement.parentNode) {\n                return referenceElement.parentNode.insertBefore(newElement, referenceElement);\n            } else {\n                return referenceElement;\n            }\n        },\n\n        insertAfter: function(newElement, referenceElement) {\n            return referenceElement.parentNode.insertBefore(newElement, referenceElement.nextSibling);\n        },\n\n        remove: function(node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        },\n\n        removeChildren: function(node) {\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n        },\n\n        removeTextSiblings: function(node) {\n            var parentNode = node.parentNode;\n\n            while (node.nextSibling && node.nextSibling.nodeType == 3) {\n                parentNode.removeChild(node.nextSibling);\n            }\n\n            while (node.previousSibling && node.previousSibling.nodeType == 3) {\n                parentNode.removeChild(node.previousSibling);\n            }\n        },\n\n        trim: function(parent) {\n            for (var i = parent.childNodes.length - 1; i >= 0; i--) {\n                var node = parent.childNodes[i];\n                if (Dom.isDataNode(node)) {\n                    if (!Dom.stripBom(node.nodeValue).length) {\n                        Dom.remove(node);\n                    }\n                } else if (node.className != KMARKER) {\n                    Dom.trim(node);\n\n                    if ((!Dom.isEmpty(node) && node.childNodes.length === 0) ||\n                        (Dom.isBlock(node) && Dom.allWhitespaceContent(node))) {\n                        Dom.remove(node);\n                    }\n                }\n            }\n\n            return parent;\n        },\n\n        closest: function(node, tags) {\n            if (typeof tags === \"string\") {\n                tags = [tags];\n            }\n\n            while (node && tags.indexOf(Dom.name(node)) < 0) {\n                node = node.parentNode;\n            }\n\n            return node;\n        },\n\n        closestBy: function(node, condition, rootCondition) {\n            while (node && !condition(node)) {\n                if (rootCondition && rootCondition(node)) {\n                    return null;\n                }\n                node = node.parentNode;\n            }\n            return node;\n        },\n\n        sibling: function(node, direction) {\n            do {\n                node = node[direction];\n            } while (node && node.nodeType != 1);\n\n            return node;\n        },\n\n        next: function(node) {\n            return Dom.sibling(node, \"nextSibling\");\n        },\n\n        prev: function(node) {\n            return Dom.sibling(node, \"previousSibling\");\n        },\n\n        parentOfType: function(node, tags) {\n            do {\n                node = node.parentNode;\n            } while (node && !(Dom.ofType(node, tags)));\n\n            return node;\n        },\n\n        ofType: function(node, tags) {\n            return $.inArray(Dom.name(node), tags) >= 0;\n        },\n\n        changeTag: function(referenceElement, tagName, skipAttributes) {\n            var newElement = Dom.create(referenceElement.ownerDocument, tagName),\n                attributes = referenceElement.attributes,\n                i, len, name, value, attribute;\n\n            if (!skipAttributes) {\n                for (i = 0, len = attributes.length; i < len; i++) {\n                    attribute = attributes[i];\n                    if (attribute.specified) {\n                        // IE < 8 cannot set class or style via setAttribute\n                        name = attribute.nodeName;\n                        value = attribute.nodeValue;\n                        if (name == CLASS) {\n                            newElement.className = value;\n                        } else if (name == STYLE) {\n                            newElement.style.cssText = referenceElement.style.cssText;\n                        } else {\n                            newElement.setAttribute(name, value);\n                        }\n                    }\n                }\n            }\n\n            while (referenceElement.firstChild) {\n                newElement.appendChild(referenceElement.firstChild);\n            }\n\n            Dom.insertBefore(newElement, referenceElement);\n            Dom.remove(referenceElement);\n            return newElement;\n        },\n\n        editableParent: function(node) {\n            while (node && (node.nodeType == 3 || node.contentEditable !== 'true')) {\n                node = node.parentNode;\n            }\n\n            return node;\n        },\n\n        wrap: function(node, wrapper) {\n            Dom.insertBefore(wrapper, node);\n            wrapper.appendChild(node);\n            return wrapper;\n        },\n\n        unwrap: function(node) {\n            var parent = node.parentNode;\n            while (node.firstChild) {\n                parent.insertBefore(node.firstChild, node);\n            }\n\n            parent.removeChild(node);\n        },\n\n        wrapper: function(node) {\n            var wrapper = Dom.closestBy(node, function(el) {\n                return el.parentNode && Dom.significantNodes(el.parentNode.childNodes).length > 1;\n            });\n\n            return $(wrapper).is(\"body,.k-editor\") ? undefined : wrapper;\n        },\n\n        isChildOfBaseContainer: function(node) {\n            return $(node).parent().is(\"body,.k-editor\");\n        },\n\n        create: function(document, tagName, attributes) {\n            return Dom.attr(document.createElement(tagName), attributes);\n        },\n\n        createEmptyNode: function(document, tagName, attributes) {\n            var node = Dom.attr(document.createElement(tagName), attributes);\n            node.innerHTML = \"\\ufeff\";\n            return node;\n        },\n\n        attr: function(element, attributes) {\n            attributes = extend({}, attributes);\n\n            if (attributes && STYLE in attributes) {\n                Dom.style(element, attributes.style);\n                delete attributes.style;\n            }\n\n            for (var attr in attributes) {\n                if (attributes[attr] === null) {\n                    element.removeAttribute(attr);\n                    delete attributes[attr];\n                } else if (attr == \"className\") {\n                    element[attr] = attributes[attr];\n                }\n            }\n\n            return extend(element, attributes);\n        },\n\n        mergeAttributes: function(origin, target, traverseCss) {\n            if (!origin.attributes.length) {\n                return;\n            }\n\n            $.each(origin.attributes, function() {\n                if (this.name !== \"contenteditable\" && (!traverseCss || this.name !== STYLE)) {\n                    $(target).attr(this.name, this.value);\n                }\n\n                if (traverseCss && this.name === STYLE) {\n                    $.each(origin.style, function() {\n                        target.style[this] = origin.style[this];\n                    });\n                }\n            });\n        },\n\n        style: function(node, value) {\n            $(node).css(value || {});\n        },\n\n        unstyle: function(node, value) {\n            for (var key in value) {\n                if (key == FLOAT) {\n                    key = kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT;\n                }\n\n                node.style[key] = \"\";\n            }\n\n            if (node.style.cssText === \"\") {\n                node.removeAttribute(STYLE);\n            }\n        },\n\n        inlineStyle: function(body, name, attributes) {\n            var span = $(Dom.create(body.ownerDocument, name, attributes)),\n                style;\n\n            body.appendChild(span[0]);\n\n            style = map(cssAttributes, function(value) {\n                if (browser.msie && value == \"line-height\" && span.css(value) == \"1px\") {\n                    return \"line-height:1.5\";\n                } else {\n                    return value + \":\" + span.css(value);\n                }\n            }).join(\";\");\n\n            span.remove();\n\n            return style;\n        },\n\n        getEffectiveBackground: function(element) {\n            var backgroundStyle = element.css(\"background-color\") || \"\";\n\n            if (backgroundStyle.indexOf(\"rgba(0, 0, 0, 0\") < 0 && backgroundStyle !== \"transparent\") {\n                return backgroundStyle;\n            } else if (element[0].tagName.toLowerCase() === \"html\") {\n                return \"Window\";\n            } else {\n                return Dom.getEffectiveBackground(element.parent());\n            }\n        },\n\n        innerText: function(node) {\n            var text = node.innerHTML;\n            text = text.replace(/<!--(.|\\s)*?-->/gi, \"\");\n            text = text.replace(/<\\/?[^>]+?\\/?>/gm, \"\");\n\n            return text;\n        },\n\n        removeClass: function(node, classNames) {\n            var className = \" \" + node.className + \" \",\n                classes = classNames.split(\" \"),\n                i, len;\n\n            for (i = 0, len = classes.length; i < len; i++) {\n                className = className.replace(\" \" + classes[i] + \" \", \" \");\n            }\n\n            className = kendo.trim(className);\n\n            if (className.length) {\n                node.className = className;\n            } else {\n                node.removeAttribute(CLASS);\n            }\n        },\n\n        commonAncestor: function() {\n            var count = arguments.length,\n                paths = [],\n                minPathLength = Infinity,\n                output = null,\n                i, ancestors, node, first, j;\n\n            if (!count) {\n                return null;\n            }\n\n            if (count == 1) {\n                return arguments[0];\n            }\n\n            for (i = 0; i < count; i++) {\n                ancestors = [];\n                node = arguments[i];\n                while (node) {\n                    ancestors.push(node);\n                    node = node.parentNode;\n                }\n                paths.push(ancestors.reverse());\n                minPathLength = Math.min(minPathLength, ancestors.length);\n            }\n\n            if (count == 1) {\n                return paths[0][0];\n            }\n\n            for (i = 0; i < minPathLength; i++) {\n                first = paths[0][i];\n\n                for (j = 1; j < count; j++) {\n                    if (first != paths[j][i]) {\n                        return output;\n                    }\n                }\n\n                output = first;\n            }\n            return output;\n        },\n\n        closestSplittableParent: function(nodes) {\n            var result;\n\n            if (nodes.length == 1) {\n                result = Dom.parentOfType(nodes[0], [\"ul\",\"ol\"]);\n            } else {\n                result = Dom.commonAncestor.apply(null, nodes);\n            }\n\n            if (!result) {\n                result = Dom.parentOfType(nodes[0], [\"p\", \"td\"]) || nodes[0].ownerDocument.body;\n            }\n\n            if (Dom.isInline(result)) {\n                result = Dom.blockParentOrBody(result);\n            }\n\n            var editableParents = map(nodes, Dom.editableParent);\n            var editableAncestor = Dom.commonAncestor(editableParents)[0];\n\n            if ($.contains(result, editableAncestor)) {\n                result = editableAncestor;\n            }\n\n            return result;\n        },\n\n        closestEditable: function(node, types) {\n            var closest;\n            var editable = Dom.editableParent(node);\n\n            if (Dom.ofType(node, types)) {\n                closest = node;\n            } else {\n                closest = Dom.parentOfType(node, types);\n            }\n\n            if (closest && editable && $.contains(closest, editable)) {\n                closest = editable;\n            } else if (!closest && editable) {\n                closest = editable;\n            }\n\n            return closest;\n        },\n\n        closestEditableOfType: function(node, types) {\n            var editable = Dom.closestEditable(node, types);\n\n            if (editable && Dom.ofType(editable, types) && !$(editable).is(\".k-editor\")) {\n                return editable;\n            }\n        },\n\n        filter: function(tagName, nodes, invert) {\n            var filterFn = function(node) {\n                return Dom.name(node) == tagName;\n            };\n\n            return Dom.filterBy(nodes, filterFn, invert);\n        },\n\n        filterBy: function(nodes, condition, invert) {\n            var i = 0;\n            var len = nodes.length;\n            var result = [];\n            var match;\n\n            for (; i < len; i++) {\n                match = condition(nodes[i]);\n                if ((match && !invert) || (!match && invert)) {\n                    result.push(nodes[i]);\n                }\n            }\n\n            return result;\n        },\n\n        ensureTrailingBreaks: function(node) {\n            var elements = $(node).find(\"p,td,th\");\n            var length = elements.length;\n            var i = 0;\n\n            if (length) {\n                for (; i < length; i++) {\n                    Dom.ensureTrailingBreak(elements[i]);\n                }\n            } else {\n                Dom.ensureTrailingBreak(node);\n            }\n        },\n\n        removeTrailingBreak: function(node) {\n            $(node).find(\"br[type=_moz],.k-br\").remove();\n        },\n\n        ensureTrailingBreak: function(node) {\n            Dom.removeTrailingBreak(node);\n\n            var lastChild = node.lastChild;\n            var name = lastChild && Dom.name(lastChild);\n            var br;\n\n            if (!name ||\n                (name != \"br\" && name != \"img\") ||\n                (name == \"br\" && lastChild.className != \"k-br\")) {\n                br = node.ownerDocument.createElement(\"br\");\n                br.className = \"k-br\";\n                node.appendChild(br);\n            }\n        },\n\n        // Start: Table Utilities\n\n        reMapTableColumns: function(table, colAttr) {\n            Dom._mapColIndices(table, colAttr);\n        },\n\n        clearTableMappings: function(table, colAttr) {\n            $(table).find(\"[\" + colAttr + \"]\").removeAttr(colAttr);\n        },\n\n        _mapColIndices: function(table, colAttr) {\n            var registeredColumns = {};\n\n            for (var rowIndex = 0; rowIndex < table.rows.length; rowIndex++) {\n                var cells = table.rows[rowIndex].cells;\n                var colIndex = 0;\n                for (var cellIndex = 0; cellIndex < cells.length; cellIndex++, colIndex++) {\n                    var cell = cells[cellIndex];\n\n                    if (cell.rowSpan > 1) {\n                        this._mapColspan(cell, rowIndex, colIndex, registeredColumns);\n                    }\n\n                    if (registeredColumns[rowIndex]) {\n                        while (registeredColumns[rowIndex][colIndex]) {\n                            colIndex++;\n                        }\n                    }\n\n                    cell.setAttribute(colAttr, colIndex);\n\n                    if (cell.colSpan > 1) {\n                        colIndex = colIndex + cell.colSpan - 1;\n                    }\n                }\n            }\n        },\n\n        _mapColspan: function(cell, rowIndex, colIndex, registeredColumns) {\n            var rowSpan = cell.rowSpan,\n                colSpan = cell.colSpan,\n                index;\n\n            for (var ci = 0; ci < colSpan; ci++) {\n                index = colIndex + ci;\n\n                for (var ri = rowIndex + 1; ri < rowIndex + rowSpan; ri++) {\n\n                    if (!registeredColumns[ri]) {\n                        registeredColumns[ri] = {};\n                        registeredColumns[ri].length = 0;\n                    }\n\n                    if (registeredColumns[rowIndex]) {\n                        while (registeredColumns[rowIndex][index]) {\n                            index++;\n                        }\n                    }\n\n                    registeredColumns[ri][index] = true;\n                    registeredColumns[ri].length++;\n                }\n            }\n\n        },\n\n        associateWithIds: function(table) {\n            var that = this;\n            var numberOfTheadRows = 0;\n            var tableRows = table.rows;\n            var numberOfTableRows = tableRows.length;\n            var theadMatrix = [];\n            var tbodyMatrix = [];\n            var theadRows, i;\n\n            if (table.tHead) {\n                theadRows = table.tHead.rows;\n                numberOfTheadRows = theadRows.length;\n            } else {\n                numberOfTheadRows = that._getNumberOfHeaderRows(table);\n                theadRows = [];\n                for (i = 0; i < numberOfTheadRows; i++) {\n                    theadRows.push(tableRows[i]);\n                }\n            }\n            for (i = 0; i < numberOfTheadRows; i++) {\n                theadMatrix.push([]);\n            }\n            for (i = 0; i < numberOfTableRows; i++) {\n                tbodyMatrix.push([]);\n            }\n\n            that._generateIdsForColumns(theadMatrix, theadRows);\n            that._generateIdsForRows(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n            that._assignIds(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n        },\n\n        _generateIdsForColumns: function(theadMatrix, theadRows) {\n            var timestamp = new Date().getTime();\n            var numberOfTheadRows = theadRows ? theadRows.length : 0;\n            var row, cells, cell, col, id, colspan, rowspan, i, j, k, l;\n\n            for (i = 0; i < numberOfTheadRows; i++) {\n                row = theadRows[i];\n                cells = row.cells;\n                col = 0;\n\n                for (j = 0; j < cells.length; j++) {\n                    cell = cells[j];\n                    id = \"table\" + i + j + (++timestamp);\n                    cell.setAttribute(\"id\", id);\n                    colspan = cell.getAttribute(\"colspan\") || 1;\n                    rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                    while (theadMatrix[i][j + col]) {\n                        col += 1;\n                    }\n\n                    for (k = 0; k < rowspan; k++) {\n                        for (l = 0; l < colspan; l++) {\n                            theadMatrix[i + k][j + col + l] = id;\n                        }\n                    }\n                }\n            }\n        },\n\n        _generateIdsForRows: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n            var that = this;\n            var timestamp = new Date().getTime();\n            var numberOfTableRows = tableRows.length;\n            var row, cells, cell, col, id, colspan, rowspan, i, j, k, l, colIndex, headers;\n\n            var pushHeaderId = function(row) {\n                headers.push(row[colIndex]);\n            };\n\n            for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n                row = tableRows[i];\n                cells = $(row.cells).filter(\"th\");\n                col = 0;\n\n                for (j = 0; j < cells.length; j++) {\n                    cell = cells[j];\n                    id = \"table\" + i + j + (++timestamp);\n                    cell.setAttribute(\"id\", id);\n                    colspan = cell.getAttribute(\"colspan\") || 1;\n                    rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                    while (tbodyMatrix[i][j + col]) {\n                        col += 1;\n                    }\n\n                    for (k = 0; k < rowspan; k++) {\n                        for (l = 0; l < colspan; l++) {\n                            tbodyMatrix[i + k][j + col + l] = id;\n                        }\n                    }\n\n                    colIndex = cell.getAttribute(\"col-index\");\n                    headers = [];\n                    theadMatrix.forEach(pushHeaderId);\n                    headers = headers.filter(that._onlyUnique);\n                    cell.setAttribute(\"headers\", headers.join(\" \").trim());\n                }\n            }\n        },\n\n        _assignIds: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n            var that = this;\n            var numberOfTableRows = tableRows.length;\n            var row, cells, cell, i, j, colIndex, headers;\n\n            var pushHeaderId = function(row) {\n                headers.push(row[colIndex]);\n            };\n\n            for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n                row = tableRows[i];\n                cells = $(row.cells).filter(\"td\");\n\n                for (j = 0; j < cells.length; j++) {\n                    cell = cells[j];\n                    colIndex = cell.getAttribute(\"col-index\");\n                    headers = tbodyMatrix[i].slice();\n\n                    theadMatrix.forEach(pushHeaderId);\n                    headers = headers.filter(that._onlyUnique);\n                    cell.setAttribute(\"headers\", headers.join(\" \").trim());\n                }\n            }\n        },\n\n        _getNumberOfColumns: function(table) {\n            var cells = $(table).find(\"th, td\");\n            var numberOfCols = 0;\n            var cell, i, currentIndex;\n\n            for (i = 0; i < cells.length; i++) {\n                cell = cells[i];\n                currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n                if (currentIndex > numberOfCols) {\n                    numberOfCols = currentIndex;\n                }\n            }\n\n            return numberOfCols;\n        },\n\n        _getNumberOfHeaderColumns: function(table, numberOfHeaderRows) {\n            var rows = table.rows;\n            var numberOfCols = 0;\n            var currentIndex, row, i, j, cell;\n\n            for (i = numberOfHeaderRows; i < rows.length; i++) {\n                row = rows[i];\n\n                for (j = 0; j < row.cells.length; j++) {\n                    cell = row.cells[j];\n\n                    if (this.is(cell, \"th\")) {\n                        currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n                        if (currentIndex > numberOfCols) {\n                            numberOfCols = currentIndex;\n                        }\n                    }\n                }\n            }\n\n            return numberOfCols;\n        },\n\n        _getNumberOfHeaderRows: function(table) {\n            var rows = table.rows;\n            var thead = table.tHead;\n            var number = thead && table.tHead.rows ? table.tHead.rows.length : 0;\n            var j, row, cell, length;\n\n            if (number === 0) {\n                row = rows[0];\n                length = row.cells && row.cells.length;\n\n                while (row && length && this.is(row.cells[0], \"th\")) {\n                    for (j = 0; j < length; j++) {\n                        cell = row ? row.cells[j] : null;\n\n                        if (!this.is(cell, \"th\")) {\n                            row = null;\n                        }\n                    }\n\n                    if (row) {\n                        number += 1;\n                        row = this.next(row);\n                        length = row && row.cells && row.cells.length;\n                    }\n                }\n            }\n\n            return number;\n        },\n\n        // End: Table Utilities\n\n        _onlyUnique: function(value, index, self) {\n            return self.indexOf(value) === index;\n        }\n    };\n\n    kendo.ui.editor.Dom = Dom;\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    // Imports ================================================================\n    var kendo = window.kendo;\n    var Editor = kendo.ui.editor;\n    var dom = Editor.Dom;\n    var extend = $.extend;\n\n    var fontSizeMappings = 'xx-small,x-small,small,medium,large,x-large,xx-large'.split(',');\n    var quoteRe = /\"/g; //\"\n    var brRe = /<br[^>]*>/i;\n    var pixelRe = /^\\d+(\\.\\d*)?(px)?$/i;\n    var emptyPRe = /<p>(?:&nbsp;)?<\\/p>/i;\n    var cssDeclaration = /(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/g;\n    var sizzleAttr = /^sizzle-\\d+/i;\n    var scriptAttr = /^k-script-/i;\n    var onerrorRe = /\\s*onerror\\s*=\\s*(?:'|\")?([^'\">\\s]*)(?:'|\")?/i;\n    var br = '<br class=\"k-br\">';\n    var bomSpan = \"<span class='k-br'>\\ufeff</span>\";\n\n    var div = document.createElement(\"div\");\n    div.innerHTML = \" <hr>\";\n    var supportsLeadingWhitespace = div.firstChild.nodeType === 3;\n    div = null;\n    var isFunction = kendo.isFunction;\n\n    var TD = \"td\";\n\n    var Serializer = {\n        toEditableHtml: function(html) {\n            return (html || \"\")\n                .replace(/<!\\[CDATA\\[(.*)?\\]\\]>/g, \"<!--[CDATA[$1]]-->\")\n                .replace(/<(\\/?)script([^>]*)>/ig, \"<$1k:script$2>\")\n                .replace(/<img([^>]*)>/ig, function(match) {\n                    return match.replace(onerrorRe, \"\");\n                })\n                .replace(/(<\\/?img[^>]*>)[\\r\\n\\v\\f\\t ]+/ig, \"$1\")\n                .replace(/^<(table|blockquote)/i, br + '<$1')\n                .replace(/^[\\s]*(&nbsp;|\\u00a0)/i, '$1')\n                .replace(/<\\/(table|blockquote)>$/i, '</$1>' + br);\n        },\n\n        _toEditableImmutables: function(body) {\n            var immutable = Editor.Immutables.immutable,\n                emptyTextNode = dom.emptyTextNode,\n                first = body.firstChild,\n                last = body.lastChild;\n\n            while (emptyTextNode(first)) {\n                first = first.nextSibling;\n            }\n\n            while (emptyTextNode(last)) {\n                last = last.previousSibling;\n            }\n\n            if (first && immutable(first)) {\n                $(bomSpan).prependTo(body);\n            }\n\n            if (last && immutable(last)) {\n                $(bomSpan).appendTo(body);\n            }\n        },\n\n        _fillEmptyElements: function(body) {\n            // fills empty elements to allow them to be focused\n            $(body).find(\"p,td\").each(function() {\n                var p = $(this);\n                if (/^\\s*$/g.test(p.text()) && !p.find(\"img,input\").length) {\n                    var node = this;\n                    while (node.children[0] && node.children[0].nodeType != 3) {\n                        node = node.children[0];\n                    }\n\n                    if (node.nodeType == 1 && !dom.empty[dom.name(node)]) {\n                        if (dom.is(node, \"td\")) {\n                            node.innerHTML = kendo.ui.editor.emptyTableCellContent;\n                        }\n                        else {\n                            node.innerHTML = kendo.ui.editor.emptyElementContent;\n                        }\n                    }\n                }\n            });\n        },\n\n        _removeSystemElements: function(body) {\n            // removes persisted system elements\n            $(\".k-paste-container\", body).remove();\n        },\n\n        _resetOrderedLists: function(root) {\n            // fix for IE9 OL bug -- https://connect.microsoft.com/IE/feedback/details/657695/ordered-list-numbering-changes-from-correct-to-0-0\n            var ols = root.getElementsByTagName(\"ol\"), i, ol, originalStart;\n\n            for (i = 0; i < ols.length; i++) {\n                ol = ols[i];\n                originalStart = ol.getAttribute(\"start\");\n\n                ol.setAttribute(\"start\", 1);\n\n                if (originalStart) {\n                    ol.setAttribute(\"start\", originalStart);\n                } else {\n                    ol.removeAttribute(originalStart);\n                }\n            }\n        },\n\n        _preventScriptExecution: function(root) {\n            $(root).find(\"*\").each(function() {\n                var attributes = this.attributes;\n                var attribute, i, l, name;\n                var attributesToRemove = [];\n\n                for (i = 0, l = attributes.length; i < l; i++) {\n                    attribute = attributes[i];\n                    name = attribute.nodeName;\n\n                    if (attribute.specified && /^on/i.test(name)) {\n                        this.setAttribute(\"k-script-\" + name, attribute.value);\n                        attributesToRemove.push(name);\n                    }\n                }\n\n                for (i = 0, l = attributesToRemove.length; i < l; i++) {\n                    this.removeAttribute(attributesToRemove[i]);\n                }\n            });\n        },\n\n        htmlToDom: function(html, root, options) {\n            var browser = kendo.support.browser;\n            var msie = browser.msie;\n            var o = options || {};\n            var immutables = o.immutables;\n\n            html = Serializer.toEditableHtml(html);\n\n            if (isFunction(o.custom)) {\n                html = o.custom(html) || html;\n            }\n            root.innerHTML = html;\n\n            if (immutables) {\n                immutables.deserialize(root);\n            }\n\n            if (msie) {\n                // unicode characters denormalize the DOM tree in IE9\n                dom.normalize(root);\n\n                Serializer._resetOrderedLists(root);\n            }\n\n            Serializer._preventScriptExecution(root);\n\n            Serializer._fillEmptyElements(root);\n\n            Serializer._removeSystemElements(root);\n\n            Serializer._toEditableImmutables(root);\n\n            // add k-table class to all tables\n            $(\"table\", root).addClass(\"k-table\");\n\n            return root;\n        },\n\n        domToXhtml: function(root, options) {\n            var result = [];\n            var immutables = options && options.immutables;\n\n            function semanticFilter(attributes) {\n                return $.grep(attributes, function(attr) {\n                    return attr.name != \"style\";\n                });\n            }\n\n            function mapStart(node, tag) {\n                result.push('<' + tag);\n                attr(node);\n                result.push('>');\n            }\n\n            var tagMap = {\n                iframe: {\n                    start: function(node) { mapStart(node, \"iframe\"); },\n                    end: function() { result.push('</iframe>'); }\n                },\n                'k:script': {\n                    start: function(node) { mapStart(node, \"script\"); },\n                    end: function() { result.push('</script>'); },\n                    skipEncoding: true\n                },\n                span: {\n                    canOptimize: true,\n                    semantic: true,\n                    start: function(node) {\n                        var style = node.style;\n\n                        var attributes = specifiedAttributes(node);\n                        var semanticAttributes = semanticFilter(attributes);\n\n                        if (semanticAttributes.length) {\n                            result.push(\"<span\"); attr(node, semanticAttributes); result.push(\">\");\n                        }\n\n                        if (style.textDecoration == \"underline\") {\n                            result.push(\"<u>\");\n                        }\n\n                        var font = [];\n                        if (style.color) {\n                            font.push('color=\"' + dom.toHex(style.color) + '\"');\n                        }\n\n                        if (style.fontFamily) {\n                            font.push('face=\"' + style.fontFamily + '\"');\n                        }\n\n                        if (style.fontSize) {\n                            var size = $.inArray(style.fontSize, fontSizeMappings);\n                            font.push('size=\"' + size + '\"');\n                        }\n\n                        // Apply the rest of the inline styles back\n                        var inlineStyles = [];\n                        var ignoredStylePrefixes = [\"text-decoration\", \"color\", \"font\"];\n\n                        for (let i = 0; i < style.length; i++) {\n                            var inlineStyle = style[i];\n\n                            if (ignoredStylePrefixes.filter(prop => inlineStyle.startsWith(prop)).length <= 0) {\n                                inlineStyles.push(`${inlineStyle}: ${style[inlineStyle]}`);\n                            }\n                        }\n\n                        if (inlineStyles.length) {\n                            font.push('style=\"' + inlineStyles.join(\";\") + '\"');\n                        }\n\n                        if (font.length) {\n                            result.push(\"<font \" + font.join(\" \") + \">\");\n                        }\n                    },\n                    end: function(node) {\n                        var style = node.style;\n\n                        if (style.color || style.fontFamily || style.fontSize) {\n                            result.push(\"</font>\");\n                        }\n\n                        if (style.textDecoration == \"underline\") {\n                            result.push(\"</u>\");\n                        }\n\n                        if (semanticFilter(specifiedAttributes(node)).length) {\n                            result.push(\"</span>\");\n                        }\n                    }\n                },\n                strong: {\n                    semantic: true,\n                    start: function(node) { mapStart(node, \"b\"); },\n                    end: function() { result.push('</b>'); }\n                },\n                em: {\n                    semantic: true,\n                    start: function(node) { mapStart(node, \"i\"); },\n                    end: function() { result.push('</i>'); }\n                },\n                b: {\n                    semantic: false,\n                    start: function(node) { mapStart(node, \"strong\"); },\n                    end: function() { result.push('</strong>'); }\n                },\n                i: {\n                    semantic: false,\n                    start: function(node) { mapStart(node, \"em\"); },\n                    end: function() { result.push('</em>'); }\n                },\n                u: {\n                    semantic: false,\n                    start: function(node) {\n                        result.push('<span');\n\n                        var attributes = specifiedAttributes(node);\n                        var style = $(attributes).filter(function(i, item) { return item.name == \"style\"; })[0];\n                        var styleObj = { nodeName: \"style\", value: \"text-decoration:underline;\" };\n\n                        if (style) {\n                            styleObj.value = style.value;\n                            if (!/text-decoration/i.test(styleObj.value)) {\n                                styleObj.value = \"text-decoration:underline;\" + styleObj.value;\n                            }\n                            attributes.splice($.inArray(style, attributes), 1);\n                        }\n                        attributes.push(styleObj);\n\n                        attr(node, attributes);\n                        result.push('>');\n                    },\n                    end: function() { result.push('</span>'); }\n                },\n                font: {\n                    canOptimize: true,\n                    semantic: false,\n                    start: function(node) {\n                        result.push('<span style=\"');\n\n                        var color = node.getAttribute('color');\n                        var size = fontSizeMappings[node.getAttribute('size')];\n                        var face = node.getAttribute('face');\n\n                        if (color) {\n                            result.push('color:');\n                            result.push(dom.toHex(color));\n                            result.push(';');\n                        }\n\n                        if (face) {\n                            result.push('font-family:');\n                            result.push(face);\n                            result.push(';');\n                        }\n\n                        if (size) {\n                            result.push('font-size:');\n                            result.push(size);\n                            result.push(';');\n                        }\n\n                        result.push('\">');\n                    },\n                    end: function() {\n                        result.push('</span>');\n                    }\n                }\n            };\n\n            tagMap.script = tagMap[\"k:script\"];\n\n            options = options || {};\n\n            if (typeof options.semantic == \"undefined\") {\n                options.semantic = true;\n            }\n\n            function cssProperties(cssText) {\n                var trim = kendo.trim;\n                var css = trim(cssText);\n                var match;\n                var property, value;\n                var properties = [];\n\n                cssDeclaration.lastIndex = 0;\n\n                while (true) {\n                    match = cssDeclaration.exec(css);\n\n                    if (!match) {\n                        break;\n                    }\n\n                    property = trim(match[1].toLowerCase());\n                    value = trim(match[2]);\n\n                    if (property == \"font-size-adjust\" || property == \"font-stretch\") {\n                        continue;\n                    }\n\n                    if (property.indexOf('color') >= 0) {\n                        value = dom.toHex(value);\n                    } else if (property.indexOf('font') >= 0) {\n                        value = value.replace(quoteRe, \"'\");\n                    } else if (/\\burl\\(/g.test(value)) {\n                        value = value.replace(quoteRe, \"\");\n                    }\n\n                    properties.push({ property: property, value: value });\n                }\n\n                return properties;\n            }\n\n            function styleAttr(cssText) {\n                var properties = cssProperties(cssText);\n                var i;\n\n                for (i = 0; i < properties.length; i++) {\n                    result.push(properties[i].property);\n                    result.push(':');\n                    result.push(properties[i].value);\n                    result.push(';');\n                }\n            }\n\n            function specifiedAttributes(node) {\n                var result = [];\n                var attributes = node.attributes;\n                var attribute, i, l;\n                var name, value, specified;\n\n                for (i = 0, l = attributes.length; i < l; i++) {\n                    attribute = attributes[i];\n\n                    name = attribute.nodeName;\n                    value = attribute.value;\n                    specified = attribute.specified;\n\n                    // In IE < 8 the 'value' attribute is not returned as 'specified'. The same goes for type=\"text\"\n                    if (name == 'value' && 'value' in node && node.value) {\n                        specified = true;\n                    } else if (name == 'type' && value == 'text') {\n                        specified = true;\n                    } else if (name == \"class\" && !value) {\n                        specified = false;\n                    } else if (sizzleAttr.test(name)) {\n                        specified = false;\n                    } else if (name == 'complete') {\n                        specified = false;\n                    } else if (name == 'altHtml') {\n                        specified = false;\n                    } else if (name == 'start' && dom.is(node, \"ul\")) {\n                        specified = false;\n                    } else if (name == 'start' && dom.is(node, \"ol\") && value == \"1\") {\n                        specified = false;\n                    } else if (name.indexOf('_moz') >= 0) {\n                        specified = false;\n                    } else if (scriptAttr.test(name)) {\n                        specified = !!options.scripts;\n                    } else if (name == 'data-role' && value == 'resizable' && (dom.is(node, \"tr\") || dom.is(node, \"td\"))) {\n                        specified = false;\n                    }\n\n                    if (specified) {\n                        result.push(attribute);\n                    }\n                }\n\n                return result;\n            }\n\n            function attr(node, attributes) {\n                var i, l, attribute, name, value;\n\n                attributes = attributes || specifiedAttributes(node);\n\n                if (dom.is(node, 'img')) {\n                    var width = node.style.width,\n                        height = node.style.height,\n                        $node = $(node);\n\n                    if (width && pixelRe.test(width)) {\n                        $node.attr('width', parseInt(width, 10));\n                        dom.unstyle(node, { width: undefined$1 });\n                    }\n\n                    if (height && pixelRe.test(height)) {\n                        $node.attr('height', parseInt(height, 10));\n                        dom.unstyle(node, { height: undefined$1 });\n                    }\n                }\n\n                if (!attributes.length) {\n                    return;\n                }\n\n                // Remove the following if everything seems to be in order.\n                // https://github.com/telerik/kendo-ui-core/issues/3639\n                // attributes.sort(function (a, b) {\n                //     return a.nodeName > b.nodeName ? 1 : a.nodeName < b.nodeName ? -1 : 0;\n                // });\n\n                for (i = 0, l = attributes.length; i < l; i++) {\n                    attribute = attributes[i];\n                    name = attribute.nodeName;\n                    value = attribute.value;\n\n                    if (name == \"class\" && value == \"k-table\") {\n                        continue;\n                    }\n\n                    name = name.replace(scriptAttr, \"\");\n\n                    result.push(' ');\n                    result.push(name);\n                    result.push('=\"');\n\n                    if (name == 'style') {\n                        styleAttr(value || node.style.cssText);\n                    } else if (name == 'src' || name == 'href') {\n                        result.push(kendo.htmlEncode(node.getAttribute(name, 2)));\n                    } else {\n                        result.push(dom.fillAttrs[name] ? name : value);\n                    }\n\n                    result.push('\"');\n                }\n            }\n\n            function children(node, skip, skipEncoding) {\n                for (var childNode = node.firstChild; childNode; childNode = childNode.nextSibling) {\n                    child(childNode, skip, skipEncoding);\n                }\n            }\n\n            function text(node) {\n                return node.nodeValue.replace(/\\ufeff/g, \"\");\n            }\n\n            function isEmptyBomNode(node) {\n                if (dom.isBom(node)) {\n                    do {\n                        node = node.parentNode;\n\n                        if (dom.is(node, TD) && node.childNodes.length === 1) {\n                            return true;\n                        }\n\n                        if (node.childNodes.length !== 1) {\n                            return false;\n                        }\n                    } while (!dom.isBlock(node));\n\n                    return true;\n                }\n\n                return false;\n            }\n\n            function child(node, skip, skipEncoding) {\n                var nodeType = node.nodeType,\n                    tagName, mapper,\n                    parent, value, previous, jqNode;\n\n                if (immutables && Editor.Immutables.immutable(node)) {\n                    result.push(immutables.serialize(node));\n                } else if (nodeType == 1) {\n                    tagName = dom.name(node);\n                    jqNode = $(node);\n\n                    if (jqNode.hasClass(\"k-element-resize-handle-wrapper\") || jqNode.hasClass(\"k-column-resize-handle-wrapper\") || jqNode.hasClass(\"k-row-resize-handle-wrapper\")) {\n                        return;\n                    }\n\n                    if (!tagName || dom.insignificant(node)) {\n                        return;\n                    }\n\n                    if (!options.scripts && (tagName == \"script\" || tagName == \"k:script\")) {\n                        return;\n                    }\n\n                    mapper = tagMap[tagName];\n\n                    if (mapper) {\n                        if (mapper.canOptimize &&\n                            options.optimizeTags &&\n                            shouldOptimize(node)) {\n                                children(node, false, mapper.skipEncoding);\n                            return;\n                        }\n\n                        if (typeof mapper.semantic == \"undefined\" ||\n                            (options.semantic ^ mapper.semantic)) {\n                            mapper.start(node);\n                            children(node, false, mapper.skipEncoding);\n                            mapper.end(node);\n                            return;\n                        }\n                    }\n\n                    result.push('<');\n                    result.push(tagName);\n\n                    attr(node);\n\n                    if (dom.empty[tagName]) {\n                        result.push(' />');\n                    } else {\n                        result.push('>');\n                        children(node, skip || dom.is(node, 'pre'));\n                        result.push('</');\n                        result.push(tagName);\n                        result.push('>');\n                    }\n                } else if (nodeType == 3) {\n                    if (isEmptyBomNode(node)) {\n                        result.push('&nbsp;');\n                        return;\n                    }\n\n                    value = text(node);\n\n                    if (!skip && supportsLeadingWhitespace) {\n                        parent = node.parentNode;\n                        previous = node.previousSibling;\n\n                        if (!previous) {\n                             previous = (dom.isInline(parent) ? parent : node).previousSibling;\n                        }\n\n                        if (!previous || previous.innerHTML === \"\" || dom.isBlock(previous)) {\n                            if (options.keepEOL) {\n                                value = value.replace(/[\\r\\n\\v\\f\\t ]+/, ' ');\n                            } else {\n                                value = value.replace(/^[\\r\\n\\v\\f\\t ]+/, '');\n                            }\n                        }\n\n                        value = value.replace(/ +/, ' ');\n                    }\n\n                    result.push(skipEncoding ? value : dom.encode(value, options));\n\n                } else if (nodeType == 4) {\n                    result.push('<![CDATA[');\n                    result.push(node.data);\n                    result.push(']]>');\n                } else if (nodeType == 8) {\n                    if (node.data.indexOf('[CDATA[') < 0) {\n                        result.push('<!--');\n                        result.push(node.data);\n                        result.push('-->');\n                    } else {\n                        result.push('<!');\n                        result.push(node.data);\n                        result.push('>');\n                    }\n                }\n            }\n\n            function shouldOptimize(node) {\n                return node.attributes.length === 0;\n            }\n\n            function textOnly(root) {\n                var childrenCount = root.childNodes.length;\n                var textChild = childrenCount && root.firstChild.nodeType == 3;\n\n                return textChild && (childrenCount == 1 || (childrenCount == 2 && dom.insignificant(root.lastChild)));\n            }\n\n            function runCustom() {\n                if (kendo.isFunction(options.custom)) {\n                    result = options.custom(result) || result;\n                }\n            }\n\n            if (textOnly(root)) {\n                result = dom.encode(text(root.firstChild).replace(/[\\r\\n\\v\\f\\t ]+/, ' '), options);\n                runCustom();\n\n                return result;\n            }\n\n            children(root);\n            result = result.join('');\n            runCustom();\n\n            // if serialized dom contains only whitespace elements, consider it empty (required field validation)\n            if (result.replace(brRe, \"\").replace(emptyPRe, \"\") === \"\") {\n                return \"\";\n            }\n\n            return result;\n        }\n\n    };\n\n    extend(Editor, {\n        Serializer: Serializer\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            extend = $.extend,\n            Editor = kendo.ui.editor,\n            browser = kendo.support.browser,\n            dom = Editor.Dom,\n            findNodeIndex = dom.findNodeIndex,\n            isDataNode = dom.isDataNode,\n            findClosestAncestor = dom.findClosestAncestor,\n            getNodeLength = dom.getNodeLength,\n            normalize = dom.normalize;\n\n    var SelectionUtils = {\n        selectionFromWindow: function(window) {\n            if (!window) {\n                return;\n            }\n\n            if (!(\"getSelection\" in window)) {\n                return new W3CSelection(window.document);\n            }\n\n            return window.getSelection();\n        },\n\n        selectionFromRange: function(range) {\n            var rangeDocument = RangeUtils.documentFromRange(range);\n            return SelectionUtils.selectionFromDocument(rangeDocument);\n        },\n\n        selectionFromDocument: function(document) {\n            return SelectionUtils.selectionFromWindow(dom.windowFromDocument(document));\n        }\n    };\n\n    var W3CRange = Class.extend({\n        init: function(doc) {\n            $.extend(this, {\n                ownerDocument: doc, /* not part of the spec; used when cloning ranges, traversing the dom and creating fragments */\n                startContainer: doc,\n                endContainer: doc,\n                commonAncestorContainer: doc,\n                startOffset: 0,\n                endOffset: 0,\n                collapsed: true\n            });\n        },\n\n        // Positioning Methods\n        setStart: function(node, offset) {\n            this.startContainer = node;\n            this.startOffset = offset;\n            updateRangeProperties(this);\n            fixIvalidRange(this, true);\n        },\n\n        setEnd: function(node, offset) {\n            this.endContainer = node;\n            this.endOffset = offset;\n            updateRangeProperties(this);\n            fixIvalidRange(this, false);\n        },\n\n        setStartBefore: function(node) {\n            this.setStart(node.parentNode, findNodeIndex(node));\n        },\n\n        setStartAfter: function(node) {\n            this.setStart(node.parentNode, findNodeIndex(node) + 1);\n        },\n\n        setEndBefore: function(node) {\n            this.setEnd(node.parentNode, findNodeIndex(node));\n        },\n\n        setEndAfter: function(node) {\n            this.setEnd(node.parentNode, findNodeIndex(node) + 1);\n        },\n\n        selectNode: function(node) {\n            this.setStartBefore(node);\n            this.setEndAfter(node);\n        },\n\n        selectNodeContents: function(node) {\n            this.setStart(node, 0);\n            this.setEnd(node, node[node.nodeType === 1 ? 'childNodes' : 'nodeValue'].length);\n        },\n\n        collapse: function(toStart) {\n            var that = this;\n\n            if (toStart) {\n                that.setEnd(that.startContainer, that.startOffset);\n            } else {\n                that.setStart(that.endContainer, that.endOffset);\n            }\n        },\n\n        // Editing Methods\n\n        deleteContents: function() {\n            var that = this,\n                range = that.cloneRange();\n\n            if (that.startContainer != that.commonAncestorContainer) {\n                that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n            }\n\n            that.collapse(true);\n\n            (function deleteSubtree(iterator) {\n                while (iterator.next()) {\n                    if (iterator.hasPartialSubtree()) {\n                        deleteSubtree(iterator.getSubtreeIterator());\n                    } else {\n                        iterator.remove();\n                    }\n                }\n            })(new RangeIterator(range));\n        },\n\n        cloneContents: function() {\n            // clone subtree\n            var document = RangeUtils.documentFromRange(this);\n            return (function cloneSubtree(iterator) {\n                    var node, frag = document.createDocumentFragment();\n\n                    while (node = iterator.next()) {\n                        node = node.cloneNode(!iterator.hasPartialSubtree());\n\n                        if (iterator.hasPartialSubtree()) {\n                            node.appendChild(cloneSubtree(iterator.getSubtreeIterator()));\n                        }\n\n                        frag.appendChild(node);\n                    }\n\n                    return frag;\n            })(new RangeIterator(this));\n        },\n\n        extractContents: function() {\n            var that = this,\n                range = that.cloneRange();\n\n            if (that.startContainer != that.commonAncestorContainer) {\n                that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n            }\n\n            that.collapse(true);\n\n            var document = RangeUtils.documentFromRange(that);\n\n            return (function extractSubtree(iterator) {\n                var node, frag = document.createDocumentFragment();\n\n                while (node = iterator.next()) {\n                    if (iterator.hasPartialSubtree()) {\n                        node = node.cloneNode(false);\n                        node.appendChild(extractSubtree(iterator.getSubtreeIterator()));\n                    } else {\n                        iterator.remove(that.originalRange);\n                    }\n\n                    frag.appendChild(node);\n                }\n\n                return frag;\n            })(new RangeIterator(range));\n        },\n\n        insertNode: function(node) {\n            var that = this;\n\n            if (isDataNode(that.startContainer)) {\n                if (that.startOffset != that.startContainer.nodeValue.length) {\n                    dom.splitDataNode(that.startContainer, that.startOffset);\n                }\n\n                dom.insertAfter(node, that.startContainer);\n            } else {\n                dom.insertAt(that.startContainer, node, that.startOffset);\n            }\n\n            that.setStart(that.startContainer, that.startOffset);\n        },\n\n        cloneRange: function() {\n            // fast copy\n            return $.extend(new W3CRange(this.ownerDocument), {\n                startContainer: this.startContainer,\n                endContainer: this.endContainer,\n                commonAncestorContainer: this.commonAncestorContainer,\n                startOffset: this.startOffset,\n                endOffset: this.endOffset,\n                collapsed: this.collapsed,\n\n                originalRange: this /* not part of the spec; used to update the original range when calling extractContents() on clones */\n            });\n        },\n\n        // used for debug purposes\n        toString: function() {\n            var startNodeName = this.startContainer.nodeName,\n                endNodeName = this.endContainer.nodeName;\n\n            return [startNodeName == \"#text\" ? this.startContainer.nodeValue : startNodeName, '(', this.startOffset, ') : ',\n                    endNodeName == \"#text\" ? this.endContainer.nodeValue : endNodeName, '(', this.endOffset, ')'].join('');\n        }\n    });\n\n    W3CRange.fromNode = function(node) {\n        return new W3CRange(node.ownerDocument);\n    };\n\n    /* can be used in Range.compareBoundaryPoints if we need it one day */\n    function compareBoundaries(start, end, startOffset, endOffset) {\n        if (start == end) {\n            return endOffset - startOffset;\n        }\n\n        // end is child of start\n        var container = end;\n        while (container && container.parentNode != start) {\n            container = container.parentNode;\n        }\n\n        if (container) {\n            return findNodeIndex(container) - startOffset;\n        }\n\n        // start is child of end\n        container = start;\n        while (container && container.parentNode != end) {\n            container = container.parentNode;\n        }\n\n        if (container) {\n            return endOffset - findNodeIndex(container) - 1;\n        }\n\n        // deep traversal\n        var root = dom.commonAncestor(start, end);\n        var startAncestor = start;\n\n        while (startAncestor && startAncestor.parentNode != root) {\n            startAncestor = startAncestor.parentNode;\n        }\n\n        if (!startAncestor) {\n            startAncestor = root;\n        }\n\n        var endAncestor = end;\n        while (endAncestor && endAncestor.parentNode != root) {\n            endAncestor = endAncestor.parentNode;\n        }\n\n        if (!endAncestor) {\n            endAncestor = root;\n        }\n\n        if (startAncestor == endAncestor) {\n            return 0;\n        }\n\n        return findNodeIndex(endAncestor) - findNodeIndex(startAncestor);\n    }\n\n    function fixIvalidRange(range, toStart) {\n        function isInvalidRange(range) {\n            try {\n                return compareBoundaries(range.startContainer, range.endContainer, range.startOffset, range.endOffset) < 0;\n            } catch (ex) {\n                // range was initially invalid (e.g. when cloned from invalid range) - it must be fixed\n                return true;\n            }\n        }\n\n        if (isInvalidRange(range)) {\n            if (toStart) {\n                range.commonAncestorContainer = range.endContainer = range.startContainer;\n                range.endOffset = range.startOffset;\n            } else {\n                range.commonAncestorContainer = range.startContainer = range.endContainer;\n                range.startOffset = range.endOffset;\n            }\n\n            range.collapsed = true;\n        }\n    }\n\n    function updateRangeProperties(range) {\n        range.collapsed = range.startContainer == range.endContainer && range.startOffset == range.endOffset;\n\n        var node = range.startContainer;\n        while (node && node != range.endContainer && !dom.isAncestorOf(node, range.endContainer)) {\n            node = node.parentNode;\n        }\n\n        range.commonAncestorContainer = node;\n    }\n\n    var RangeIterator = Class.extend({\n        init: function(range) {\n            $.extend(this, {\n                range: range,\n                _current: null,\n                _next: null,\n                _end: null\n            });\n\n            if (range.collapsed) {\n                return;\n            }\n\n            var root = range.commonAncestorContainer;\n\n            this._next = range.startContainer == root && !isDataNode(range.startContainer) ?\n            range.startContainer.childNodes[range.startOffset] :\n            findClosestAncestor(root, range.startContainer);\n\n            this._end = range.endContainer == root && !isDataNode(range.endContainer) ?\n            range.endContainer.childNodes[range.endOffset] :\n            findClosestAncestor(root, range.endContainer).nextSibling;\n        },\n\n        hasNext: function() {\n            return !!this._next;\n        },\n\n        next: function() {\n            var that = this,\n                current = that._current = that._next;\n            that._next = that._current && that._current.nextSibling != that._end ?\n            that._current.nextSibling : null;\n\n            if (isDataNode(that._current)) {\n                if (that.range.endContainer == that._current) {\n                    current = current.cloneNode(true);\n                    current.deleteData(that.range.endOffset, current.length - that.range.endOffset);\n                }\n\n                if (that.range.startContainer == that._current) {\n                    current = current.cloneNode(true);\n                    current.deleteData(0, that.range.startOffset);\n                }\n            }\n\n            return current;\n        },\n\n        traverse: function(callback) {\n            var that = this,\n                current;\n\n            function next() {\n                that._current = that._next;\n                that._next = that._current && that._current.nextSibling != that._end ? that._current.nextSibling : null;\n                return that._current;\n            }\n\n            while (current = next()) {\n                if (that.hasPartialSubtree()) {\n                    that.getSubtreeIterator().traverse(callback);\n                } else {\n                    callback(current);\n                }\n            }\n\n            return current;\n        },\n\n        remove: function(originalRange) {\n            var that = this,\n                inStartContainer = that.range.startContainer == that._current,\n                inEndContainer = that.range.endContainer == that._current,\n                start, end, delta;\n\n            if (isDataNode(that._current) && (inStartContainer || inEndContainer)) {\n                start = inStartContainer ? that.range.startOffset : 0;\n                end = inEndContainer ? that.range.endOffset : that._current.length;\n                delta = end - start;\n\n                if (originalRange && (inStartContainer || inEndContainer)) {\n                    if (that._current == originalRange.startContainer && start <= originalRange.startOffset) {\n                        originalRange.startOffset -= delta;\n                    }\n\n                    if (that._current == originalRange.endContainer && end <= originalRange.endOffset) {\n                        originalRange.endOffset -= delta;\n                    }\n                }\n\n                that._current.deleteData(start, delta);\n            } else {\n                var parent = that._current.parentNode;\n\n                if (originalRange && (that.range.startContainer == parent || that.range.endContainer == parent)) {\n                    var nodeIndex = findNodeIndex(that._current);\n\n                    if (parent == originalRange.startContainer && nodeIndex <= originalRange.startOffset) {\n                        originalRange.startOffset -= 1;\n                    }\n\n                    if (parent == originalRange.endContainer && nodeIndex < originalRange.endOffset) {\n                        originalRange.endOffset -= 1;\n                    }\n                }\n\n                dom.remove(that._current);\n            }\n        },\n\n        hasPartialSubtree: function() {\n            return !isDataNode(this._current) &&\n            (dom.isAncestorOrSelf(this._current, this.range.startContainer) ||\n                dom.isAncestorOrSelf(this._current, this.range.endContainer));\n        },\n\n        getSubtreeIterator: function() {\n            return new RangeIterator(this.getSubRange());\n        },\n\n        getSubRange: function() {\n            var that = this,\n                subRange = that.range.cloneRange();\n            subRange.selectNodeContents(that._current);\n            if (dom.isAncestorOrSelf(that._current, that.range.startContainer)) {\n                subRange.setStart(that.range.startContainer, that.range.startOffset);\n            }\n            if (dom.isAncestorOrSelf(that._current, that.range.endContainer)) {\n                subRange.setEnd(that.range.endContainer, that.range.endOffset);\n            }\n\n            return subRange;\n        }\n    });\n\n    var W3CSelection = Class.extend({\n        init: function(doc) {\n            this.ownerDocument = doc;\n            this.rangeCount = 1;\n        },\n\n        addRange: function(range) {\n            var textRange = this.ownerDocument.body.createTextRange();\n\n            // end container should be adopted first in order to prevent selection with negative length\n            adoptContainer(textRange, range, false);\n            adoptContainer(textRange, range, true);\n\n            textRange.select();\n        },\n\n        removeAllRanges: function() {\n            var selection = this.ownerDocument.selection;\n\n            if (selection.type != \"None\") {\n                selection.empty();\n            }\n        },\n\n        getRangeAt: function() {\n            var textRange,\n                range = new W3CRange(this.ownerDocument),\n                selection = this.ownerDocument.selection,\n                element, commonAncestor;\n\n            try {\n                textRange = selection.createRange();\n                element = textRange.item ? textRange.item(0) : textRange.parentElement();\n                if (element.ownerDocument != this.ownerDocument) {\n                    return range;\n                }\n            } catch (ex) {\n                return range;\n            }\n\n            if (selection.type == \"Control\") {\n                range.selectNode(textRange.item(0));\n            } else {\n                commonAncestor = textRangeContainer(textRange);\n                adoptEndPoint(textRange, range, commonAncestor, true);\n                adoptEndPoint(textRange, range, commonAncestor, false);\n\n                if (range.startContainer.nodeType == 9) {\n                    range.setStart(range.endContainer, range.startOffset);\n                }\n\n                if (range.endContainer.nodeType == 9) {\n                    range.setEnd(range.startContainer, range.endOffset);\n                }\n\n                if (textRange.compareEndPoints(\"StartToEnd\", textRange) === 0) {\n                    range.collapse(false);\n                }\n\n                var startContainer = range.startContainer,\n                    endContainer = range.endContainer,\n                    body = this.ownerDocument.body;\n\n                if (!range.collapsed && range.startOffset === 0 && range.endOffset == getNodeLength(range.endContainer) && // check for full body selection\n                    !(startContainer == endContainer && isDataNode(startContainer) && startContainer.parentNode == body)) { // but not when single textnode is selected\n                    var movedStart = false,\n                        movedEnd = false;\n\n                    while (findNodeIndex(startContainer) === 0 && startContainer == startContainer.parentNode.firstChild && startContainer != body) {\n                        startContainer = startContainer.parentNode;\n                        movedStart = true;\n                    }\n\n                    while (findNodeIndex(endContainer) == getNodeLength(endContainer.parentNode) - 1 && endContainer == endContainer.parentNode.lastChild && endContainer != body) {\n                        endContainer = endContainer.parentNode;\n                        movedEnd = true;\n                    }\n\n                    if (startContainer == body && endContainer == body && movedStart && movedEnd) {\n                        range.setStart(startContainer, 0);\n                        range.setEnd(endContainer, getNodeLength(body));\n                    }\n                }\n            }\n\n            return range;\n        }\n    });\n\n    function textRangeContainer(textRange) {\n        var left = textRange.duplicate(),\n            right = textRange.duplicate();\n\n        left.collapse(true);\n        right.collapse(false);\n\n        return dom.commonAncestor(textRange.parentElement(), left.parentElement(), right.parentElement());\n    }\n\n    function adoptContainer(textRange, range, start) {\n        // find anchor node and offset\n        var container = range[start ? \"startContainer\" : \"endContainer\"],\n            offset = range[start ? \"startOffset\" : \"endOffset\"],\n            textOffset = 0,\n            isData = isDataNode(container),\n            anchorNode = isData ? container : container.childNodes[offset] || null,\n            anchorParent = isData ? container.parentNode : container,\n            doc = range.ownerDocument,\n            cursor = doc.body.createTextRange(),\n            cursorNode;\n\n        // visible data nodes need a text offset\n        if (container.nodeType == 3 || container.nodeType == 4) {\n            textOffset = offset;\n        }\n\n        if (!anchorParent) {\n            anchorParent = doc.body;\n        }\n\n        if (anchorParent.nodeName.toLowerCase() == \"img\") {\n            cursor.moveToElementText(anchorParent);\n            cursor.collapse(false);\n            textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n        } else {\n            // create a cursor element node to position range (since we can't select text nodes)\n            cursorNode = anchorParent.insertBefore(dom.create(doc, \"a\"), anchorNode);\n\n            cursor.moveToElementText(cursorNode);\n            dom.remove(cursorNode);\n            cursor[start ? \"moveStart\" : \"moveEnd\"](\"character\", textOffset);\n            cursor.collapse(false);\n            textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n        }\n    }\n\n    function adoptEndPoint(textRange, range, commonAncestor, start) {\n        var cursorNode = dom.create(range.ownerDocument, \"a\"),\n            cursor = textRange.duplicate(),\n            comparison = start ? \"StartToStart\" : \"StartToEnd\",\n            result, parent, target,\n            previous, next,\n            args, index,\n            appended = false;\n\n        cursorNode.innerHTML = \"\\ufeff\";\n        cursor.collapse(start);\n\n        parent = cursor.parentElement();\n\n        if (!dom.isAncestorOrSelf(commonAncestor, parent)) {\n            parent = commonAncestor;\n        }\n\n        // detect range end points\n        // insert cursorNode within the textRange parent and move the cursor until it gets outside of the textRange\n        do {\n            if (appended) {\n                parent.insertBefore(cursorNode, cursorNode.previousSibling);\n            } else {\n                parent.appendChild(cursorNode);\n                appended = true;\n            }\n            cursor.moveToElementText(cursorNode);\n        } while ((result = cursor.compareEndPoints(comparison, textRange)) > 0 && cursorNode.previousSibling);\n\n        target = cursorNode.nextSibling;\n\n        if (result == -1 && isDataNode(target)) {\n            cursor.setEndPoint(start ? \"EndToStart\" : \"EndToEnd\", textRange);\n\n            dom.remove(cursorNode);\n\n            args = [target, cursor.text.length];\n        } else {\n            previous = !start && cursorNode.previousSibling;\n            next = start && cursorNode.nextSibling;\n\n            if (isDataNode(next)) {\n                args = [next, 0];\n            } else if (isDataNode(previous)) {\n                args = [previous, previous.length];\n            } else {\n                index = findNodeIndex(cursorNode);\n\n                if (parent.nextSibling && index == parent.childNodes.length - 1) {\n                    args = [parent.nextSibling, 0];\n                } else {\n                    args = [parent, index];\n                }\n            }\n\n            dom.remove(cursorNode);\n        }\n\n        range[start ? \"setStart\" : \"setEnd\"].apply(range, args);\n    }\n\n    var RangeEnumerator = Class.extend({\n        init: function(range) {\n            this.enumerate = function() {\n                var nodes = [];\n\n                function visit(node) {\n                    if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                        nodes.push(node);\n                    } else {\n                        node = node.firstChild;\n                        while (node) {\n                            visit(node);\n                            node = node.nextSibling;\n                        }\n                    }\n                }\n\n                new RangeIterator(range).traverse(visit);\n\n                return nodes;\n            };\n        }\n    });\n\n    var ImmutablesRangeIterator = RangeIterator.extend({\n        hasPartialSubtree: function() {\n            var immutable = Editor.Immutables && Editor.Immutables.immutable;\n            return immutable && !immutable(this._current) && RangeIterator.fn.hasPartialSubtree.call(this);\n        },\n\n        getSubtreeIterator: function() {\n            return new ImmutablesRangeIterator(this.getSubRange());\n        }\n    });\n\n    var ImmutablesRangeEnumerator = Class.extend({\n        init: function(range) {\n            this.enumerate = function() {\n                var nodes = [];\n                var immutable = Editor.Immutables && Editor.Immutables.immutable;\n                function visit(node) {\n                    if (immutable && !immutable(node)) {\n                        if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                            nodes.push(node);\n                        } else {\n                            node = node.firstChild;\n                            while (node) {\n                                visit(node);\n                                node = node.nextSibling;\n                            }\n                        }\n                    }\n                }\n\n                new ImmutablesRangeIterator(range).traverse(visit);\n\n                return nodes;\n            };\n        }\n    });\n\n    var RestorePoint = Class.extend({\n        init: function(range, body, options) {\n            var that = this;\n            that.range = range;\n            that.rootNode = RangeUtils.documentFromRange(range);\n            that.body = body || that.getEditable(range);\n            if (dom.name(that.body) != \"body\") {\n                that.rootNode = that.body;\n            }\n\n            that.startContainer = that.nodeToPath(range.startContainer);\n            that.endContainer = that.nodeToPath(range.endContainer);\n            that.startOffset = that.offset(range.startContainer, range.startOffset);\n            that.endOffset = that.offset(range.endContainer, range.endOffset);\n\n            that.immutables = options && options.immutables;\n\n            if (that.immutables) {\n                that.serializedImmutables = Editor.Immutables.removeImmutables(that.body);\n            }\n\n            that.html = that.body.innerHTML;\n\n            if (that.immutables && !that.serializedImmutables.empty) {\n                Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n            }\n        },\n\n        index: function(node) {\n            var result = 0,\n                lastType = node.nodeType;\n\n            while (node = node.previousSibling) {\n                var nodeType = node.nodeType;\n\n                if (nodeType != 3 || lastType != nodeType) {\n                    result ++;\n                }\n\n                lastType = nodeType;\n            }\n\n            return result;\n        },\n\n        getEditable: function(range) {\n            var root = range.commonAncestorContainer;\n\n            while (root && (root.nodeType == 3 || root.attributes && (!root.attributes.contentEditable || root.attributes.contentEditable.nodeValue.toLowerCase() == \"false\"))) {\n                root = root.parentNode;\n            }\n\n            return root;\n        },\n\n        restoreHtml: function() {\n            var that = this;\n\n            dom.removeChildren(that.body);\n            that.body.innerHTML = that.html;\n            if (that.immutables && !that.serializedImmutables.empty) {\n                Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n            }\n        },\n\n        offset: function(node, value) {\n            if (node.nodeType == 3) {\n                while ((node = node.previousSibling) && node.nodeType == 3) {\n                    value += node.nodeValue.length;\n                }\n            }\n\n            return value;\n        },\n\n        nodeToPath: function(node) {\n            var path = [];\n\n            while (node != this.rootNode) {\n                path.push(this.index(node));\n                node = node.parentNode;\n            }\n\n            return path;\n        },\n\n        toRangePoint: function(range, start, path, denormalizedOffset) {\n            var node = this.rootNode,\n                length = path.length,\n                offset = denormalizedOffset;\n\n            while (length-- && node) {\n                node = node.childNodes[path[length]];\n            }\n\n            while (node && node.nodeType == 3 && node.nodeValue.length < offset) {\n                offset -= node.nodeValue.length;\n                node = node.nextSibling;\n            }\n\n            if (node && offset >= 0) {\n                range[start ? 'setStart' : 'setEnd'](node, offset);\n            }\n        },\n\n        toRange: function() {\n            var that = this,\n                result = that.range.cloneRange();\n\n            that.toRangePoint(result, true, that.startContainer, that.startOffset);\n            that.toRangePoint(result, false, that.endContainer, that.endOffset);\n\n            return result;\n        }\n\n    });\n\n    var Marker = Class.extend({\n        init: function() {\n            this.caret = null;\n        },\n\n        addCaret: function(range) {\n            var that = this;\n            var caret = that.caret = dom.create(RangeUtils.documentFromRange(range), 'span', { className: 'k-marker' });\n            range.insertNode(caret);\n\n            dom.stripBomNode(caret.previousSibling);\n            dom.stripBomNode(caret.nextSibling);\n\n            range.selectNode(caret);\n            return caret;\n        },\n\n        removeCaret: function(range) {\n            var that = this,\n                previous = that.caret.previousSibling,\n                startOffset = 0;\n\n            if (previous) {\n                startOffset = isDataNode(previous) ? previous.nodeValue.length : findNodeIndex(previous);\n            }\n\n            var container = that.caret.parentNode;\n            var containerIndex = previous ? findNodeIndex(previous) : 0;\n\n            dom.remove(that.caret);\n            normalize(container);\n\n            var node = container.childNodes[containerIndex];\n\n            if (isDataNode(node)) {\n                range.setStart(node, startOffset);\n            } else if (node) {\n                var textNode = dom.lastTextNode(node);\n                if (textNode) {\n                    range.setStart(textNode, textNode.nodeValue.length);\n                } else {\n                    range[previous ? 'setStartAfter' : 'setStartBefore'](node);\n                }\n            } else {\n                if (!browser.msie && !container.innerHTML) {\n                    container.innerHTML = '<br _moz_dirty=\"\" />';\n                }\n\n                range.selectNodeContents(container);\n            }\n            range.collapse(true);\n        },\n\n        add: function(range, expand) {\n            var that = this;\n\n            var collapsed = range.collapsed && !RangeUtils.isExpandable(range);\n            var doc = RangeUtils.documentFromRange(range);\n\n            if (expand && range.collapsed) {\n                that.addCaret(range);\n                range = RangeUtils.expand(range);\n            }\n\n            var rangeBoundary = range.cloneRange();\n\n            rangeBoundary.collapse(false);\n            that.end = dom.create(doc, 'span', { className: 'k-marker' });\n            rangeBoundary.insertNode(that.end);\n\n            rangeBoundary = range.cloneRange();\n            rangeBoundary.collapse(true);\n            that.start = that.end.cloneNode(true);\n            rangeBoundary.insertNode(that.start);\n\n            that._removeDeadMarkers(that.start, that.end);\n\n            if (collapsed) {\n                var bom = doc.createTextNode(\"\\ufeff\");\n                dom.insertAfter(bom.cloneNode(), that.start);\n                dom.insertBefore(bom, that.end);\n            }\n\n            normalize(range.commonAncestorContainer);\n\n            range.setStartBefore(that.start);\n            range.setEndAfter(that.end);\n\n            return range;\n        },\n\n        _removeDeadMarkers: function(start, end) {\n            if (start.previousSibling && start.previousSibling.nodeValue == \"\\ufeff\") {\n                dom.remove(start.previousSibling);\n            }\n\n            if (end.nextSibling && end.nextSibling.nodeValue == \"\\ufeff\") {\n                dom.remove(end.nextSibling);\n            }\n        },\n\n        _normalizedIndex: function(node) {\n            var index = findNodeIndex(node);\n            var pointer = node;\n\n            while (pointer.previousSibling) {\n                if (pointer.nodeType == 3 && pointer.previousSibling.nodeType == 3) {\n                    index--;\n                }\n\n                pointer = pointer.previousSibling;\n            }\n\n            return index;\n        },\n\n        remove: function(range) {\n            var that = this,\n                start = that.start,\n                end = that.end,\n                shouldNormalizeStart,\n                shouldNormalizeEnd,\n                shouldNormalize;\n\n            normalize(range.commonAncestorContainer);\n\n            while (!start.nextSibling && start.parentNode) {\n                start = start.parentNode;\n            }\n\n            while (!end.previousSibling && end.parentNode) {\n                end = end.parentNode;\n            }\n\n            // merely accessing the siblings will solve range issues in IE\n            shouldNormalizeStart = (start.previousSibling && start.previousSibling.nodeType == 3) &&\n                                   (start.nextSibling && start.nextSibling.nodeType == 3);\n\n            shouldNormalizeEnd = (end.previousSibling && end.previousSibling.nodeType == 3) &&\n                                 (end.nextSibling && end.nextSibling.nodeType == 3);\n\n            shouldNormalize = shouldNormalizeStart && shouldNormalizeEnd;\n\n            start = start.nextSibling;\n            end = end.previousSibling;\n\n            var isBomSelected = start === end && dom.isBom(start);\n            if (isBomSelected && start.length > 1) {\n                start.nodeValue = start.nodeValue.charAt(0);\n            }\n\n            var collapsed = isBomSelected;\n            var collapsedToStart = false;\n            // collapsed range\n            if (start == that.end) {\n                collapsedToStart = !!that.start.previousSibling;\n                start = end = that.start.previousSibling || that.end.nextSibling;\n                collapsed = true;\n            }\n\n            dom.remove(that.start);\n            dom.remove(that.end);\n\n            if (!start || !end) {\n                range.selectNodeContents(range.commonAncestorContainer);\n                range.collapse(true);\n                return;\n            }\n\n            var startOffset = collapsed ? isDataNode(start) ? start.nodeValue.length : start.childNodes.length : 0;\n            var endOffset = isDataNode(end) ? end.nodeValue.length : end.childNodes.length;\n\n            if (start.nodeType == 3) {\n                while (start.previousSibling && start.previousSibling.nodeType == 3) {\n                    start = start.previousSibling;\n                    startOffset += start.nodeValue.length;\n                }\n            }\n\n            if (end.nodeType == 3) {\n                while (end.previousSibling && end.previousSibling.nodeType == 3) {\n                    end = end.previousSibling;\n                    endOffset += end.nodeValue.length;\n                }\n            }\n\n            var startParent = start.parentNode;\n            var endParent = end.parentNode;\n            var startIndex = this._normalizedIndex(start);\n            var endIndex = this._normalizedIndex(end);\n\n            normalize(startParent);\n            if (start.nodeType == 3) {\n                start = startParent.childNodes[startIndex];\n            }\n\n            normalize(endParent);\n            if (end.nodeType == 3) {\n                end = endParent.childNodes[endIndex];\n            }\n\n            if (collapsed) {\n                if (start.nodeType == 3) {\n                    range.setStart(start, startOffset);\n                } else {\n                    range[collapsedToStart ? 'setStartAfter' : 'setStartBefore'](start);\n                }\n\n                range.collapse(true);\n\n            } else {\n                if (start.nodeType == 3) {\n                    range.setStart(start, startOffset);\n                } else {\n                    range.setStartBefore(start);\n                }\n\n                if (end.nodeType == 3) {\n                    range.setEnd(end, endOffset);\n                } else {\n                    range.setEndAfter(end);\n                }\n            }\n\n            if (that.caret) {\n                that.removeCaret(range);\n            }\n        }\n    });\n\n    var boundary = /[\\u0009-\\u000d]|\\u0020|\\u00a0|\\ufeff|\\.|,|;|:|!|\\(|\\)|\\?/;\n\n    var RangeUtils = {\n        nodes: function(range) {\n            var nodes = RangeUtils.textNodes(range);\n            if (!nodes.length) {\n                range.selectNodeContents(range.commonAncestorContainer);\n                nodes = RangeUtils.textNodes(range);\n                if (!nodes.length) {\n                    nodes = dom.significantChildNodes(range.commonAncestorContainer);\n                }\n            }\n            return nodes;\n        },\n\n        textNodes: function(range) {\n            var allNodes = new RangeEnumerator(range).enumerate(),\n                result = allNodes.filter(function(node) {\n                    return dom.allowsTextContent(node.parentElement);\n                });\n\n            return result;\n        },\n\n        editableTextNodes: function(range) {\n            var nodes = [],\n                immutableParent = Editor.Immutables && Editor.Immutables.immutableParent,\n                result = [];\n\n            if (immutableParent && !immutableParent(range.commonAncestorContainer)) {\n                nodes = new ImmutablesRangeEnumerator(range).enumerate();\n                result = nodes.filter(function(node) {\n                    return dom.allowsTextContent(node.parentElement);\n                });\n            }\n\n            return result;\n        },\n\n        documentFromRange: function(range) {\n            var startContainer = range.startContainer;\n            return startContainer.nodeType == 9 ? startContainer : startContainer.ownerDocument;\n        },\n\n        createRange: function(document) {\n            return document.createRange();\n        },\n\n        selectRange: function(range) {\n            var image = RangeUtils.image(range);\n            if (image) {\n                range.setStartAfter(image);\n                range.setEndAfter(image);\n            }\n            var selection = SelectionUtils.selectionFromRange(range);\n            selection.removeAllRanges();\n            selection.addRange(range);\n        },\n\n        stringify: function(range) {\n            return kendo.format(\n                \"{0}:{1} - {2}:{3}\",\n                dom.name(range.startContainer), range.startOffset,\n                dom.name(range.endContainer), range.endOffset\n            );\n        },\n\n        split: function(range, node, trim) {\n            function partition(start) {\n                var partitionRange = range.cloneRange();\n                partitionRange.collapse(start);\n                partitionRange[start ? 'setStartBefore' : 'setEndAfter'](node);\n                var contents = partitionRange.extractContents();\n                if (trim) {\n                    contents = dom.trim(contents);\n                }\n                dom[start ? 'insertBefore' : 'insertAfter'](contents, node);\n            }\n            partition(true);\n            partition(false);\n        },\n\n        mapAll: function(range, map) {\n            var nodes = [];\n\n            new RangeIterator(range).traverse(function(node) {\n                var mapped = map(node);\n\n                if (mapped && $.inArray(mapped, nodes) < 0) {\n                    nodes.push(mapped);\n                }\n            });\n\n            return nodes;\n        },\n\n        getAll: function(range, predicate) {\n            var selector = predicate;\n\n            if (typeof predicate == \"string\") {\n                predicate = function(node) {\n                    return dom.is(node, selector);\n                };\n            }\n\n            return RangeUtils.mapAll(range, function(node) {\n                if (predicate(node)) {\n                    return node;\n                }\n            });\n        },\n\n        getMarkers: function(range) {\n            return RangeUtils.getAll(range, function(node) {\n                return node.className == 'k-marker';\n            });\n        },\n\n        image: function(range) {\n            var nodes = RangeUtils.getAll(range, \"img\");\n\n            if (nodes.length == 1) {\n                return nodes[0];\n            }\n        },\n\n        isStartOf: function(originalRange, node) {\n            if (originalRange.startOffset !== 0) {\n                return false;\n            }\n\n            var range = originalRange.cloneRange();\n\n            while (range.startOffset === 0 && range.startContainer != node) {\n                var index = dom.findNodeIndex(range.startContainer);\n                var parent = range.startContainer.parentNode;\n\n                while (index > 0 && parent[index - 1] && dom.insignificant(parent[index - 1])) {\n                    index--;\n                }\n\n                range.setStart(parent, index);\n            }\n\n            return range.startOffset === 0 && range.startContainer == node;\n        },\n\n        isEndOf: function(originalRange, node) {\n            var range = originalRange.cloneRange();\n\n            range.collapse(false);\n\n            var start = range.startContainer;\n\n            if (dom.isDataNode(start) && range.startOffset == dom.getNodeLength(start)) {\n                range.setStart(start.parentNode, dom.findNodeIndex(start) + 1);\n                range.collapse(true);\n            }\n\n            range.setEnd(node, dom.getNodeLength(node));\n\n            var nodes = [];\n\n            function visit(node) {\n                if (!dom.insignificant(node) && !(dom.isDataNode(node) && /^[\\ufeff]*$/.test(node.nodeValue))) {\n                    nodes.push(node);\n                }\n            }\n\n            new RangeIterator(range).traverse(visit);\n\n            return !nodes.length;\n        },\n\n        wrapSelectedElements: function(range) {\n            var startEditable = dom.editableParent(range.startContainer);\n            var endEditable = dom.editableParent(range.endContainer);\n\n            while (range.startOffset === 0 && range.startContainer != startEditable) {\n                range.setStart(range.startContainer.parentNode, dom.findNodeIndex(range.startContainer));\n            }\n\n            function isEnd(offset, container) {\n                var length = dom.getNodeLength(container);\n\n                if (offset == length) {\n                    return true;\n                }\n\n                for (var i = offset; i < length; i++) {\n                    if (!dom.insignificant(container.childNodes[i])) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n\n            while (isEnd(range.endOffset, range.endContainer) && range.endContainer != endEditable) {\n                range.setEnd(range.endContainer.parentNode, dom.findNodeIndex(range.endContainer) + 1);\n            }\n\n            return range;\n        },\n\n        expand: function(range) {\n            var result = range.cloneRange();\n\n            var startContainer = result.startContainer.childNodes[result.startOffset === 0 ? 0 : result.startOffset - 1];\n            var endContainer = result.endContainer.childNodes[result.endOffset];\n\n            if (!isDataNode(startContainer) || !isDataNode(endContainer)) {\n                return result;\n            }\n\n            var beforeCaret = startContainer.nodeValue;\n            var afterCaret = endContainer.nodeValue;\n\n            if (!beforeCaret || !afterCaret) {\n                return result;\n            }\n\n            var startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n            var endOffset = afterCaret.search(boundary);\n\n            if (!startOffset || !endOffset) {\n                return result;\n            }\n\n            endOffset = endOffset == -1 ? afterCaret.length : endOffset;\n            startOffset = startOffset == -1 ? 0 : beforeCaret.length - startOffset;\n\n            result.setStart(startContainer, startOffset);\n            result.setEnd(endContainer, endOffset);\n\n            return result;\n        },\n\n        isExpandable: function(range) {\n            var node = range.startContainer;\n            var rangeDocument = RangeUtils.documentFromRange(range);\n\n            if (node == rangeDocument || node == rangeDocument.body) {\n                return false;\n            }\n\n            var result = range.cloneRange();\n\n            var value = node.nodeValue;\n            if (!value) {\n                return false;\n            }\n\n            var beforeCaret = value.substring(0, result.startOffset);\n            var afterCaret = value.substring(result.startOffset);\n\n            var startOffset = 0, endOffset = 0;\n\n            if (beforeCaret) {\n                startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n            }\n\n            if (afterCaret) {\n                endOffset = afterCaret.search(boundary);\n            }\n\n            return startOffset && endOffset;\n        }\n    };\n\n    extend(Editor, {\n        SelectionUtils: SelectionUtils,\n        W3CRange: W3CRange,\n        RangeIterator: RangeIterator,\n        W3CSelection: W3CSelection,\n        RangeEnumerator: RangeEnumerator,\n        RestorePoint: RestorePoint,\n        Marker: Marker,\n        RangeUtils: RangeUtils\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            Editor = kendo.ui.editor,\n            dom = Editor.Dom,\n            template = kendo.template,\n            RangeUtils = Editor.RangeUtils,\n            complexBlocks = [\"ul\", \"ol\", \"tbody\", \"thead\", \"table\"],\n            toolsToBeUpdated = [\n                \"bold\",\n                \"italic\",\n                \"underline\",\n                \"strikethrough\",\n                \"superscript\",\n                \"subscript\",\n                \"forecolor\",\n                \"backcolor\",\n                \"fontname\",\n                \"fontsize\",\n                \"createlink\",\n                \"unlink\",\n                \"autolink\",\n                \"addcolumnleft\",\n                \"addcolumnright\",\n                \"addrowabove\",\n                \"addrowbelow\",\n                \"deleterow\",\n                \"deletecolumn\",\n                \"mergecells\",\n                \"formatting\",\n                \"cleanformatting\" ],\n            IMMUTABALE = \"k-immutable\",\n            IMMUTABALE_MARKER_SELECTOR = \"[\" + IMMUTABALE + \"]\",\n            IMMUTABLE_SELECTOR = \"[contenteditable='false']\";\n\n        var rootCondition = function(node) {\n            return $(node).is(\"body,.k-editor\");\n        };\n\n        var immutable = function(node) {\n            return node.getAttribute && node.getAttribute(\"contenteditable\") == \"false\";\n        };\n\n        var immutableParent = function(node) {\n            return dom.closestBy(node, immutable, rootCondition);\n        };\n\n        var expandImmutablesIn = function(range) {\n            var startImmutableParent = immutableParent(range.startContainer);\n            var endImmutableParent = immutableParent(range.endContainer);\n\n            if (startImmutableParent || endImmutableParent) {\n                if (startImmutableParent) {\n                    range.setStartBefore(startImmutableParent);\n                }\n                if (endImmutableParent) {\n                    range.setEndAfter(endImmutableParent);\n                }\n            }\n        };\n\n        var immutablesContext = function(range) {\n            if (immutableParent(range.commonAncestorContainer)) {\n                return true;\n            } else if (immutableParent(range.startContainer) || immutableParent(range.endContainer)) {\n                var editableNodes = RangeUtils.editableTextNodes(range);\n                if (editableNodes.length === 0) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        var randomId = function(length) {\n            var result = '';\n            var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n            for (var i = length || 10; i > 0; --i) {\n                result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n            }\n            return result;\n        };\n\n        var removeImmutables = function(root) {\n            var serializedImmutables = { empty: true }, nodeName, id, serialized;\n             $(root).find(IMMUTABLE_SELECTOR).each(function(i, node) {\n                nodeName = dom.name(node);\n                id = randomId();\n                serialized = \"<\" + nodeName + \" \" + IMMUTABALE + \"='\" + id + \"'></\" + nodeName + \">\";\n                serializedImmutables[id] = { node: node, style: $(node).attr(\"style\") };\n                serializedImmutables.empty = false;\n                $(node).replaceWith(serialized);\n            });\n\n            return serializedImmutables;\n        };\n\n        var restoreImmutables = function(root, serializedImmutables) {\n            var id, immutable;\n            $(root).find(IMMUTABALE_MARKER_SELECTOR).each(function(i, node) {\n                id = node.getAttribute(IMMUTABALE);\n                immutable = serializedImmutables[id];\n                $(node).replaceWith(immutable.node);\n                if (immutable.style != $(immutable.node).attr(\"style\")) {\n                    $(immutable.node).removeAttr(\"style\").attr(\"style\", immutable.style);\n                }\n            });\n        };\n\n        var deletingKey = function(keyCode) {\n            var keys = kendo.keys;\n            return keyCode === keys.BACKSPACE || keyCode == keys.DELETE;\n        };\n        var updateToolOptions = function(tool) {\n            var options = tool ? tool.options : undefined$1;\n            if (options && options.finder) {\n                options.finder._initOptions({ immutables: true });\n            }\n        };\n\n        var Immutables = Class.extend({\n            init: function(editor) {\n                this.editor = editor;\n                this.serializedImmutables = {};\n                this.options = $.extend({}, editor && editor.options && editor.options.immutables);\n\n                var tools = kendo.ui.Editor.defaultTools;\n                updateToolOptions(tools.justifyLeft);\n                updateToolOptions(tools.justifyCenter);\n                updateToolOptions(tools.justifyRight);\n                updateToolOptions(tools.justifyFull);\n            },\n\n            serialize: function(node) {\n                var result = this._toHtml(node),\n                    id;\n\n                if (result.indexOf(IMMUTABALE) === -1) {\n                    id = this.randomId();\n                    result = result.replace(/>/, ' ' + IMMUTABALE + '=\"' + id + '\">');\n                } else {\n                    id = result.match(/k-immutable\\s*=\\s*['\"](.*)['\"]/)[1];\n                }\n\n                this.serializedImmutables[id] = node;\n                return result;\n            },\n\n            _toHtml: function(node) {\n                var serialization = this.options.serialization;\n                var serializationType = typeof serialization;\n                var nodeName;\n\n                switch (serializationType) {\n                    case \"string\":\n                        return template(serialization)(node);\n                    case \"function\":\n                        return serialization(node);\n                    default:\n                        nodeName = dom.name(node);\n                        return \"<\" + nodeName + \"></\" + nodeName + \">\";\n                }\n            },\n\n            deserialize: function(node) {\n                var that = this;\n                var deserialization = this.options.deserialization;\n\n                $(IMMUTABALE_MARKER_SELECTOR, node).each(function() {\n                    var id = this.getAttribute(IMMUTABALE);\n                    var immutable = that.serializedImmutables[id];\n                    if (kendo.isFunction(deserialization)) {\n                        deserialization(this, immutable);\n                    }\n                    $(this).replaceWith(immutable);\n                });\n\n                that.serializedImmutables = {};\n            },\n\n            randomId: function(length) {\n                return randomId(length);\n            },\n\n            keydown: function(e, range) {\n                var isDeleting = deletingKey(e.keyCode);\n                var shouldCancelEvent = (isDeleting && this._cancelDeleting(e, range)) ||\n                    (!isDeleting && this._cancelTyping(e, range));\n\n                if (shouldCancelEvent) {\n                    e.preventDefault();\n                    return true;\n                }\n            },\n\n            _cancelTyping: function(e, range) {\n                var editor = this.editor;\n                var keyboard = editor.keyboard;\n\n                return range.collapsed && !keyboard.typingInProgress &&\n                    keyboard.isTypingKey(e) && immutablesContext(range);\n            },\n\n            _cancelDeleting: function(e, range) {\n                var keys = kendo.keys;\n                var backspace = e.keyCode === keys.BACKSPACE;\n                var del = e.keyCode == keys.DELETE;\n\n                if (!backspace && !del) {\n                    return false;\n                }\n                var cancelDeleting = false;\n                if (range.collapsed) {\n                    if (immutablesContext(range)) {\n                        return true;\n                    }\n                    var immutable = this.nextImmutable(range, del);\n                    if (immutable && backspace) {\n                        var closestSelectionLi = dom.closest(range.commonAncestorContainer, \"li\");\n                        if (closestSelectionLi) {\n                            var closestImmutableLi = dom.closest(immutable, \"li\");\n                            if (closestImmutableLi && closestImmutableLi !== closestSelectionLi) {\n                                return cancelDeleting;\n                            }\n                        }\n                    }\n                    if (immutable && !dom.tableCell(immutable)) {\n                        if (dom.parentOfType(immutable, complexBlocks) === dom.parentOfType(range.commonAncestorContainer, complexBlocks)) {\n                            while (immutable && immutable.parentNode.childNodes.length == 1) {\n                                immutable = immutable.parentNode;\n                            }\n                            if (dom.tableCell(immutable)) {\n                                return cancelDeleting;\n                            }\n                            this._removeImmutable(immutable, range);\n                        }\n                        cancelDeleting = true;\n                    }\n                }\n                return cancelDeleting;\n            },\n\n            nextImmutable: function(range, forwards) {\n                var commonContainer = range.commonAncestorContainer;\n                if (dom.isBom(commonContainer) || ((forwards && RangeUtils.isEndOf(range, commonContainer)) || (!forwards && RangeUtils.isStartOf(range, commonContainer)))) {\n                    var next = this._nextNode(commonContainer, forwards);\n                    if (next && dom.isBlock(next) && !immutableParent(next)) {\n                        while (next && next.children && next.children[forwards ? 0 : next.children.length - 1]) {\n                            next = next.children[forwards ? 0 : next.children.length - 1];\n                        }\n                    }\n                    return immutableParent(next);\n                }\n            },\n\n            _removeImmutable: function(immutable, range) {\n                var editor = this.editor;\n                var startRestorePoint = new Editor.RestorePoint(range, editor.body);\n                dom.remove(immutable);\n                Editor._finishUpdate(editor, startRestorePoint);\n            },\n\n            _nextNode: function(node, forwards) {\n                var sibling = forwards ? \"nextSibling\" : \"previousSibling\";\n                var current = node, next;\n                while (current && !next && !dom.isChildOfBaseContainer(current)) {\n                    next = current[sibling];\n                    if (next && dom.isDataNode(next) && /^\\s|[\\ufeff]$/.test(next.nodeValue)) {\n                        current = next;\n                        next = current[sibling];\n                    }\n                    if (!next) {\n                        current = current.parentNode;\n                    }\n                }\n                return next;\n            }\n        });\n\n        Immutables.immutable = immutable;\n        Immutables.immutableParent = immutableParent;\n        Immutables.expandImmutablesIn = expandImmutablesIn;\n        Immutables.immutablesContext = immutablesContext;\n        Immutables.toolsToBeUpdated = toolsToBeUpdated;\n        Immutables.removeImmutables = removeImmutables;\n        Immutables.restoreImmutables = restoreImmutables;\n\n        Editor.Immutables = Immutables;\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            editorNS = kendo.ui.editor,\n            dom = editorNS.Dom,\n            RestorePoint = editorNS.RestorePoint,\n            Marker = editorNS.Marker,\n            extend = $.extend;\n\n    function finishUpdate(editor, startRestorePoint) {\n        var endRestorePoint = editor.selectionRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n        var command = new GenericCommand(startRestorePoint, endRestorePoint);\n        command.editor = editor;\n\n        editor.undoRedoStack.push(command);\n        editor._refreshTools();\n\n        return endRestorePoint;\n    }\n\n    var Command = Class.extend({\n        init: function(options) {\n            this.options = options;\n            this.restorePoint = new RestorePoint(options.range, options.body, { immutables: options.immutables });\n            this.marker = new Marker();\n            this.formatter = options.formatter;\n        },\n\n        getRange: function() {\n            return this.restorePoint.toRange();\n        },\n\n        lockRange: function(expand) {\n            return this.marker.add(this.getRange(), expand);\n        },\n\n        releaseRange: function(range) {\n            this.marker.remove(range);\n            this.editor.selectRange(range);\n        },\n\n        undo: function() {\n            var point = this.restorePoint;\n            point.restoreHtml();\n            this.editor.selectRange(point.toRange());\n        },\n\n        redo: function() {\n            this.exec();\n        },\n\n        createDialog: function(content, options) {\n            var editor = this.editor;\n\n            return $(content).appendTo(document.body)\n                .kendoWindow(extend({}, editor.options.dialogOptions, options))\n                .closest(\".k-window\")\n                .addClass(\"k-editor-window\")\n                .toggleClass(\"k-rtl\", kendo.support.isRtl(editor.wrapper)).end();\n        },\n\n        exec: function() {\n            var range = this.lockRange(true);\n            this.formatter.editor = this.editor;\n            this.formatter.toggle(range);\n            this.releaseRange(range);\n        },\n\n        immutables: function() {\n            return this.editor && this.editor.options.immutables;\n        },\n\n        expandImmutablesIn: function(range) {\n            if (this.immutables()) {\n                kendo.ui.editor.Immutables.expandImmutablesIn(range);\n                this.restorePoint = new RestorePoint(range, this.editor.body);\n            }\n        },\n\n        _actionButtonsTemplate: function({ messages, insertButtonIcon, cancelButtonIcon }) {\n            return '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n            kendo.html.renderButton(`<button class=\"k-dialog-insert\">${messages.dialogInsert}</button>`, { themeColor: \"primary\", icon: insertButtonIcon }) +\n            kendo.html.renderButton(`<button class=\"k-dialog-close\">${messages.dialogCancel}</button>`, { icon: cancelButtonIcon }) +\n        '</div>';\n        }\n    });\n\n    var GenericCommand = Class.extend({\n        init: function(startRestorePoint, endRestorePoint) {\n            this.body = startRestorePoint.body;\n            this.startRestorePoint = startRestorePoint;\n            this.endRestorePoint = endRestorePoint;\n        },\n\n        redo: function() {\n            dom.removeChildren(this.body);\n\n            this.body.innerHTML = this.endRestorePoint.html;\n            this.editor.selectRange(this.endRestorePoint.toRange());\n        },\n\n        undo: function() {\n            dom.removeChildren(this.body);\n\n            this.body.innerHTML = this.startRestorePoint.html;\n            this.editor.selectRange(this.startRestorePoint.toRange());\n        }\n    });\n\n    extend(editorNS, {\n        _finishUpdate: finishUpdate,\n        Command: Command,\n        GenericCommand: GenericCommand\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        Command = Editor.Command,\n        Tool = Editor.Tool,\n        dom = Editor.Dom;\n\n    var ViewHtmlCommand = Command.extend({\n        init: function(options) {\n            var cmd = this;\n            cmd.options = options;\n            Command.fn.init.call(cmd, options);\n            cmd.attributes = null;\n            cmd.async = true;\n        },\n\n        exec: function() {\n            var that = this,\n                editor = that.editor,\n                options = editor.options,\n                messages = editor.options.messages,\n                dialog = $(kendo.template(ViewHtmlCommand.template)(messages)).appendTo(document.body),\n                textarea = \".k-editor-textarea > textarea\",\n                content, comments;\n\n            options.serialization.immutables = editor.immutables;\n\n            comments = dom.getAllComments(editor.body);\n\n            content = EditorUtils.cacheComments(editor.value(), comments);\n            content = ViewHtmlCommand.indent(content);\n            content = EditorUtils.retrieveComments(content, comments);\n\n            options.serialization.immutables = undefined$1;\n\n            function apply(e) {\n                options.deserialization.immutables = editor.immutables;\n                editor.value(dialog.find(textarea).val());\n                options.deserialization.immutables = undefined$1;\n\n                close(e);\n\n                if (that.change) {\n                    that.change();\n                }\n\n                editor.trigger(\"change\");\n            }\n\n            function close(e) {\n                e.preventDefault();\n\n                dialog.data(\"kendoWindow\").destroy();\n\n                if (editor.immutables) {\n                    editor.immutables.serializedImmutables = {};\n                }\n\n                editor.focus();\n            }\n\n            let window = this.createDialog(dialog, {\n                title: messages.viewHtml,\n                _footerTemplate: ViewHtmlCommand._footerTemplate,\n                _footerMessages: messages,\n                width: 600,\n                height: 400,\n                resizable: true,\n                close: close,\n                visible: false\n            })\n                .find(textarea).val(content).end()\n                .data(\"kendoWindow\");\n\n                window.center().open();\n\n                window.wrapper.find(\".k-dialog-update\").on(\"click\", apply).end();\n                window.wrapper.find(\".k-dialog-close\").on(\"click\", close).end();\n            dialog.find(textarea).trigger(\"focus\");\n        }\n    });\n\n    extend(ViewHtmlCommand, {\n        template: () =>\n        '<div class=\"k-editor-dialog k-popup-edit-form k-viewhtml-dialog\">' +\n            '<span class=\"k-input k-textarea k-input-solid k-input-md k-rounded-md k-editor-textarea\"><textarea class=\"k-input-inner !k-overflow-auto !k-resize-none\"></textarea></span>' +\n        '</div>',\n        _footerTemplate: ({ dialogUpdate, dialogCancel }) =>\n        `<div class=\"k-actions k-actions-start k-actions-horizontal k-window-actions\">` +\n            kendo.html.renderButton(`<button class=\"k-dialog-update\">${kendo.htmlEncode(dialogUpdate)}</button>`, { themeColor: \"primary\", icon: \"check\" }) +\n            kendo.html.renderButton(`<button class=\"k-dialog-close\">${kendo.htmlEncode(dialogCancel)}</button>`, { icon: \"cancel-outline\" }) +\n        `</div>`,\n        indent: function(content) {\n            return content.replace(/<\\/(p|li|ul|ol|h[1-6]|table|tr|td|th)>/ig, \"</$1>\\n\")\n                          .replace(/<(ul|ol)([^>]*)><li/ig, \"<$1$2>\\n<li\")\n                          .replace(/<br \\/>/ig, \"<br />\\n\")\n                          .replace(/\\n$/, \"\");\n        }\n    });\n\n    kendo.ui.editor.ViewHtmlCommand = ViewHtmlCommand;\n\n    Editor.EditorUtils.registerTool(\"viewHtml\", new Tool({ command: ViewHtmlCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        Tool = Editor.Tool,\n        Command = Editor.Command,\n        EditorUtils = Editor.EditorUtils;\n\n    var FormatCommand = Command.extend({\n        init: function(options) {\n            options.formatter = options.formatter();\n            var finder = options.formatter.finder;\n            if (finder && EditorUtils.formatByName(\"immutable\", finder.format)) {\n                finder._initOptions({ immutables: options.immutables });\n            }\n            Command.fn.init.call(this, options);\n        }\n    });\n\n    var FormatTool = Tool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n        },\n\n        command: function(commandArguments) {\n            var that = this;\n\n            return new FormatCommand(extend(commandArguments, {\n                formatter: that.options.formatter\n            }));\n        },\n\n        update: function(ui, nodes) {\n            var isFormatted = this.options.finder.isFormatted(nodes),\n                toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n            if (toolbar && ui.getKendoToggleButton()) {\n                toolbar.toggle(ui, isFormatted);\n            }\n        }\n    });\n\n    $.extend(Editor, {\n        FormatCommand: FormatCommand,\n        FormatTool: FormatTool\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        Editor = kendo.ui.editor,\n        formats = kendo.ui.Editor.fn.options.formats,\n        Tool = Editor.Tool,\n        FormatTool = Editor.FormatTool,\n        dom = Editor.Dom,\n        RangeUtils = Editor.RangeUtils,\n        extend = $.extend,\n        registerTool = Editor.EditorUtils.registerTool,\n        registerFormat = Editor.EditorUtils.registerFormat,\n        MOUSEDOWN_NS = \"mousedown.kendoEditor\",\n        KEYDOWN_NS = \"keydown.kendoEditor\",\n        KMARKER = \"k-marker\";\n\n    var InlineFormatFinder = Class.extend({\n        init: function(format) {\n            this.format = format;\n        },\n\n        numberOfSiblings: function(referenceNode) {\n            var textNodesCount = 0,\n                elementNodesCount = 0,\n                markerCount = 0,\n                parentNode = referenceNode.parentNode,\n                node;\n\n            for (node = parentNode.firstChild; node; node = node.nextSibling) {\n                if (node != referenceNode) {\n                    if (node.className == KMARKER) {\n                        markerCount++;\n                    } else if (node.nodeType == 3) {\n                        textNodesCount++;\n                    } else {\n                        elementNodesCount++;\n                    }\n                }\n            }\n\n            if (markerCount > 1 && parentNode.firstChild.className == KMARKER && parentNode.lastChild.className == KMARKER) {\n                // full node selection\n                return 0;\n            } else {\n                return elementNodesCount + textNodesCount;\n            }\n        },\n\n        findSuitable: function(sourceNode, skip) {\n            if (!skip && this.numberOfSiblings(sourceNode) > 0) {\n                return null;\n            }\n\n            var node = sourceNode.parentNode;\n            var tags = this.format[0].tags;\n\n            while (!dom.ofType(node, tags)) {\n                if (this.numberOfSiblings(node) > 0) {\n                    return null;\n                }\n\n                node = node.parentNode;\n            }\n\n            return node;\n        },\n\n        findFormat: function(sourceNode) {\n            var format = this.format,\n                attrEquals = dom.attrEquals,\n                i, len, node, tags, attributes;\n\n            for (i = 0, len = format.length; i < len; i++) {\n                node = sourceNode;\n                tags = format[i].tags;\n                attributes = format[i].attr;\n\n                if (node && dom.ofType(node, tags) && attrEquals(node, attributes)) {\n                    return node;\n                }\n\n                while (node) {\n                    node = dom.parentOfType(node, tags);\n                    if (node && attrEquals(node, attributes)) {\n                        return node;\n                    }\n                }\n            }\n\n            return null;\n        },\n\n        isFormatted: function(nodes) {\n            var i, len;\n\n            for (i = 0, len = nodes.length; i < len; i++) {\n                if (this.findFormat(nodes[i])) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    });\n\n    var InlineFormatter = Class.extend({\n        init: function(format, values) {\n            this.finder = new InlineFormatFinder(format);\n            this.attributes = extend({}, format[0].attr, values);\n            this.tag = format[0].tags[0];\n        },\n\n        wrap: function(node) {\n            return dom.wrap(node, dom.create(node.ownerDocument, this.tag, this.attributes));\n        },\n\n        activate: function(range, nodes) {\n            if (this.finder.isFormatted(nodes)) {\n                this.split(range);\n                this.remove(nodes);\n            } else {\n                this.apply(nodes);\n            }\n        },\n\n        toggle: function(range) {\n            var textNodes = this.immutables() ? RangeUtils.editableTextNodes : RangeUtils.textNodes;\n            var nodes = textNodes(range);\n\n            if (nodes.length > 0) {\n                this.activate(range, nodes);\n            }\n        },\n\n        immutables: function() {\n            return this.editor && this.editor.options.immutables;\n        },\n\n        apply: function(nodes) {\n            var formatNodes = [];\n            var i, l, node, formatNode;\n\n            if (nodes.length > 1) {\n                for (i = 0, l = nodes.length; i < l; i++) {\n                    node = nodes[i];\n                    formatNode = this.format(node, true);\n                    formatNodes.push(formatNode);\n\n                }\n            } else {\n                node = nodes[0];\n                formatNode = this.format(node, false);\n            }\n\n            this.consolidate(formatNodes);\n        },\n\n        format: function(node, outerMostInline) {\n            var formatNode = this.finder.findSuitable(node);\n            var attributes = this.attributes;\n            var styleAttr = attributes ? attributes.style || {} : {};\n\n            if (formatNode) {\n                if (dom.is(formatNode, \"font\")) {\n                    if (styleAttr.color) {\n                        formatNode.removeAttribute(\"color\");\n                    }\n                    if (styleAttr.fontName) {\n                        formatNode.removeAttribute(\"face\");\n                    }\n                    if (styleAttr.fontSize) {\n                        formatNode.removeAttribute(\"size\");\n                    }\n                }\n                dom.attr(formatNode, attributes);\n            } else {\n                while (!dom.isBlock(node.parentNode) && node.parentNode.childNodes.length == 1 && node.parentNode.contentEditable !== 'true' && outerMostInline) {\n                    node = node.parentNode;\n                }\n\n                formatNode = this.wrap(node);\n            }\n\n            return formatNode;\n        },\n\n        remove: function(nodes) {\n            var i, l, formatNode;\n\n            for (i = 0, l = nodes.length; i < l; i++) {\n                formatNode = this.finder.findFormat(nodes[i]);\n                if (formatNode) {\n                    if (this.attributes && this.attributes.style) {\n                        dom.unstyle(formatNode, this.attributes.style);\n                        if (!formatNode.style.cssText && !formatNode.attributes[\"class\"]) {\n                            dom.unwrap(formatNode);\n                        }\n                    } else {\n                        dom.unwrap(formatNode);\n                    }\n                }\n            }\n        },\n\n        split: function(range) {\n            var nodes = RangeUtils.textNodes(range);\n            var l = nodes.length;\n            var i, formatNode;\n\n            if (l > 0) {\n                for (i = 0; i < l; i++) {\n                    formatNode = this.finder.findFormat(nodes[i]);\n                    if (formatNode) {\n                        RangeUtils.split(range, formatNode, true);\n                    }\n                }\n            }\n        },\n\n        consolidate: function(nodes) {\n            var node, last;\n\n            while (nodes.length > 1) {\n                node = nodes.pop();\n                last = nodes[nodes.length - 1];\n\n                if (node.previousSibling && node.previousSibling.className == KMARKER) {\n                    last.appendChild(node.previousSibling);\n                }\n\n                if (node.tagName == last.tagName &&\n                    node.previousSibling == last &&\n                    node.style.cssText == last.style.cssText &&\n                    node.className === last.className) {\n\n                    while (node.firstChild) {\n                        last.appendChild(node.firstChild);\n                    }\n\n                    dom.remove(node);\n                }\n            }\n        }\n    });\n\n    var GreedyInlineFormatFinder = InlineFormatFinder.extend({\n        init: function(format, greedyProperty, fontAttr, defaultValue) {\n            this.format = format;\n            this.greedyProperty = greedyProperty;\n            this.fontAttr = fontAttr;\n            this.defaultValue = defaultValue;\n            InlineFormatFinder.fn.init.call(this, format);\n        },\n\n        getInlineCssValue: function(node) {\n            var attributes = node.attributes;\n            var trim = kendo.trim;\n            var i, l, attribute, name, attributeValue, css, pair, cssIndex, len;\n            var propertyAndValue, property, value;\n\n            if (!attributes) {\n                return;\n            }\n\n            for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n                name = attribute.nodeName;\n                attributeValue = attribute.nodeValue;\n\n                if (attribute.specified && name == \"style\") {\n\n                    css = trim(attributeValue || node.style.cssText).split(\";\");\n\n                    for (cssIndex = 0, len = css.length; cssIndex < len; cssIndex++) {\n                        pair = css[cssIndex];\n                        if (pair.length) {\n                            propertyAndValue = pair.split(\":\");\n                            property = trim(propertyAndValue[0].toLowerCase());\n                            value = trim(propertyAndValue[1]);\n\n                            if (property != this.greedyProperty) {\n                                continue;\n                            }\n\n                            return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n                        }\n                    }\n                }\n\n                if (this.fontAttr && attribute.specified && name == this.fontAttr) {\n                    property = attribute.nodeValue;\n                    value = attribute.nodeValue;\n\n                    return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n                }\n            }\n        },\n\n        getFormatInner: function(node) {\n            var $node = $(dom.isDataNode(node) ? node.parentNode : node);\n            var parents = $node.parentsUntil(\"[contentEditable]\").addBack().toArray().reverse();\n            var i, len, value;\n\n            for (i = 0, len = parents.length; i < len; i++) {\n                value = this.greedyProperty == \"className\" ? parents[i].className : this.getInlineCssValue(parents[i]);\n\n                if (value) {\n                    return value;\n                }\n            }\n\n            return this.defaultValue || \"inherit\";\n        },\n\n        getFormat: function(nodes) {\n            var result = this.getFormatInner(nodes[0]), i, len;\n\n            for (i = 1, len = nodes.length; i < len; i++) {\n                if (result != this.getFormatInner(nodes[i])) {\n                    return \"\";\n                }\n            }\n\n            return result;\n        },\n\n        isFormatted: function(nodes) {\n            return this.getFormat(nodes) !== \"\";\n        }\n    });\n\n    var GreedyInlineFormatter = InlineFormatter.extend({\n        init: function(format, values, greedyProperty) {\n            InlineFormatter.fn.init.call(this, format, values);\n\n            this.values = values;\n            this.finder = new GreedyInlineFormatFinder(format, greedyProperty);\n\n            if (greedyProperty) {\n                this.greedyProperty = kendo.toCamelCase(greedyProperty);\n            }\n\n        },\n\n        activate: function(range, nodes) {\n            var greedyProperty = this.greedyProperty;\n            var action = \"apply\";\n\n            this.split(range);\n\n            if (greedyProperty && this.values.style[greedyProperty] == \"inherit\") {\n                action = \"remove\";\n            }\n\n            this[action](nodes);\n        }\n    });\n\n    var InlineFormatTool = FormatTool.extend({\n        init: function(options) {\n            FormatTool.fn.init.call(this, extend(options, {\n                finder: new InlineFormatFinder(options.format),\n                formatter: function() { return new InlineFormatter(options.format); }\n            }));\n        }\n    });\n\n    var DelayedExecutionTool = Tool.extend({\n        update: function(ui, nodes) {\n            var list = ui.data(this.type);\n\n            list.close();\n            list.value(this.finder.getFormat(nodes));\n        }\n    });\n\n    var FontTool = DelayedExecutionTool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n\n            // IE has single selection hence we are using select box instead of combobox\n            this.type = \"kendoComboBox\";\n            this.format = [{ tags: [\"span\", \"font\"] }];\n            this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr);\n        },\n\n        command: function(commandArguments) {\n            var options = this.options,\n                format = this.format,\n                style = {};\n\n            return new Editor.FormatCommand(extend(commandArguments, {\n                formatter: function() {\n                    style[options.domAttr] = commandArguments.value;\n\n                    return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n                }\n            }));\n        },\n\n        initialize: function(ui, editor) {\n            var options = this.options,\n                toolName = options.name,\n                dataSource,\n                range,\n                widget = ui.data(\"kendoComboBox\"),\n                defaultValue = [];\n\n            if (!widget) {\n                return;\n            }\n\n            if (options.defaultValue) {\n               defaultValue = [{\n                    text: editor.options.messages[options.defaultValue[0].text],\n                    value: options.defaultValue[0].value\n               }];\n            }\n\n            dataSource = defaultValue.concat(options.items ? options.items : (editor.options[toolName] || [] ));\n            widget.setDataSource(dataSource);\n\n            widget.bind(\"change\", (e) => {\n                editor._range = range;\n                if (e.sender.value() !== \"\") {\n                    Tool.exec(editor, toolName, e.sender.value());\n                }\n            });\n\n            widget.bind(\"close\", () => {\n                setTimeout(function() {\n                    editor._deleteSavedRange();\n                },0);\n            });\n\n            widget.value(\"inherit\");\n\n            widget.wrapper.on(MOUSEDOWN_NS, \".k-select,.k-input-button,.k-input\", function() {\n                var newRange = editor.getRange();\n                range = editor._containsRange(newRange) ? newRange : range;\n            })\n            .on(KEYDOWN_NS, function(e) {\n                if (e.keyCode === kendo.keys.ENTER) {\n                    editor._deleteSavedRange();\n                    e.preventDefault();\n                }\n            });\n        }\n\n    });\n\n    var ColorTool = Tool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n\n            this.format = [{ tags: [\"span\",\"font\"] }];\n            this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr);\n        },\n\n        options: {\n            palette: \"websafe\",\n            columns: 18\n        },\n\n        update: function() {\n            this._widget.close();\n        },\n\n        command: function(commandArguments) {\n            var options = this.options,\n                format = this.format,\n                style = {};\n\n            return new Editor.FormatCommand(extend(commandArguments, {\n                formatter: function() {\n                    style[options.domAttr] = commandArguments.value;\n\n                    return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n                }\n            }));\n        },\n\n        initialize: function(ui, editor) {\n            var that = this,\n                toolName = that.options.name,\n                component = this._widget = ui.getKendoColorPicker();\n\n            if (!component) {\n                return;\n            }\n\n            component.bind(\"change\", () => {\n                var color = component.value();\n\n                if (color) {\n                    Tool.exec(editor, toolName, color);\n                }\n\n                delete that.storedRange;\n                delete that._inputFocused;\n\n                editor.focus();\n            });\n\n            component.bind(\"open\", () => {\n                that.storedRange = editor.getRange();\n\n                component._popup.element.on(MOUSEDOWN_NS, function(e) {\n                    if (!$(e.target).is(\"input.k-color-value\")) {\n                        e.preventDefault();\n                    }\n                });\n\n                if (!component._popup.element.is(\"[unselectable='on']\")) {\n                    component._popup.element\n                        .attr({ unselectable: \"on\" })\n                        .find(\"*:not(input)\").attr(\"unselectable\", \"on\")\n                        .end().find(\"input\").on(\"focus\", function() {\n                            that._inputFocused = true;\n                        });\n                }\n\n                component._popup.one(\"activate\", () => {\n                    component._popup.element.find(\".k-colorpalette\").trigger(\"focus\");\n                });\n            });\n\n            component.bind(\"close\", (e) => {\n                component._popup.element.off(MOUSEDOWN_NS);\n            });\n\n            component.unbind(\"activate\").bind(\"activate\", (e) => {\n                if (!component._value || component._value.toCssRgba() === \"rgba(255, 255, 255, 0)\") {\n                    return;\n                }\n\n                component.trigger(\"change\");\n            });\n\n            component.wrapper\n                .attr({ unselectable: \"on\" })\n                .find(\"*:not(input)\").attr(\"unselectable\", \"on\");\n\n            component.value(\"transparent\");\n        }\n    });\n\n    extend(Editor, {\n        InlineFormatFinder: InlineFormatFinder,\n        InlineFormatter: InlineFormatter,\n        DelayedExecutionTool: DelayedExecutionTool,\n        GreedyInlineFormatFinder: GreedyInlineFormatFinder,\n        GreedyInlineFormatter: GreedyInlineFormatter,\n        InlineFormatTool: InlineFormatTool,\n        FontTool: FontTool,\n        ColorTool: ColorTool\n    });\n\n    registerFormat(\"bold\", [ { tags: [\"strong\", \"b\"] }, { tags: [\"span\"], attr: { style: { fontWeight: \"bold\" } } } ]);\n    registerTool(\"bold\", new InlineFormatTool({\n        key: \"B\",\n        ctrl: true,\n        format: formats.bold,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerFormat(\"italic\", [ { tags: [\"em\", \"i\"] }, { tags: [\"span\"], attr: { style: { fontStyle: \"italic\" } } } ]);\n    registerTool(\"italic\", new InlineFormatTool({\n        key: \"I\",\n        ctrl: true,\n        format: formats.italic,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerFormat(\"underline\", [ { tags: [\"span\"], attr: { style: { textDecoration: \"underline\" } } }, { tags: [\"u\"] } ]);\n    registerTool(\"underline\", new InlineFormatTool({\n        key: \"U\",\n        ctrl: true,\n        format: formats.underline,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerFormat(\"strikethrough\", [ { tags: [\"del\", \"strike\"] }, { tags: [\"span\"], attr: { style: { textDecoration: \"line-through\" } } } ]);\n    registerTool(\"strikethrough\", new InlineFormatTool({\n        format: formats.strikethrough,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerFormat(\"superscript\", [ { tags: [\"sup\"] } ]);\n    registerTool(\"superscript\", new InlineFormatTool({\n        format: formats.superscript,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerFormat(\"subscript\", [ { tags: [\"sub\"] } ]);\n    registerTool(\"subscript\", new InlineFormatTool({\n        format: formats.subscript,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerTool(\"foreColor\", new ColorTool({\n        cssAttr: \"color\",\n        fontAttr: \"color\",\n        domAttr: \"color\",\n        name: \"foreColor\",\n        ui: {\n            type: \"component\",\n            overflow: \"never\",\n            component: \"ColorPicker\",\n            componentOptions: {\n                views: [\"palette\"],\n                toolIcon: \"foreground-color\",\n                palette: \"websafe\",\n                columns: 18,\n                preview: false,\n                input: false,\n                buttons: false,\n                commandOn: \"change\",\n                closeOnSelect: true\n            }\n        }\n    }));\n\n    registerTool(\"backColor\", new ColorTool({\n        cssAttr: \"background-color\",\n        domAttr: \"backgroundColor\",\n        name: \"backColor\",\n        ui: {\n            type: \"component\",\n            overflow: \"never\",\n            component: \"ColorPicker\",\n            componentOptions: {\n                views: [\"palette\"],\n                toolIcon: \"droplet\",\n                palette: \"websafe\",\n                columns: 18,\n                preview: false,\n                input: false,\n                buttons: false,\n                commandOn: \"change\",\n                closeOnSelect: true\n            }\n        }\n    }));\n\n    registerTool(\"fontName\", new FontTool({\n        cssAttr: \"font-family\",\n        fontAttr: \"face\",\n        domAttr: \"fontFamily\",\n        name: \"fontName\",\n        defaultValue: [{ text: \"fontNameInherit\", value: \"inherit\" }],\n        ui: {\n            type: \"component\",\n            component: \"ComboBox\",\n            componentOptions: {\n                dataValueField: \"value\",\n                dataTextField: \"text\",\n                valuePrimitive: true\n            },\n            overflow: \"never\"\n        }\n    }));\n\n    registerTool(\"fontSize\", new FontTool({\n        cssAttr: \"font-size\",\n        fontAttr: \"size\",\n        domAttr: \"fontSize\",\n        name: \"fontSize\",\n        defaultValue: [{ text: \"fontSizeInherit\", value: \"inherit\" }],\n        ui: {\n            type: \"component\",\n            component: \"ComboBox\",\n            componentOptions: {\n                dataValueField: \"value\",\n                dataTextField: \"text\",\n                valuePrimitive: true\n            },\n            overflow: \"never\"\n        }\n    }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        encode = kendo.htmlEncode,\n        Class = kendo.Class,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        dom = Editor.Dom,\n        RangeUtils = Editor.RangeUtils,\n        Command = Editor.Command,\n        Tool = Editor.Tool,\n        InlineFormatter = Editor.InlineFormatter,\n        InlineFormatFinder = Editor.InlineFormatFinder,\n        textNodes = RangeUtils.textNodes,\n        editableTextNodes = RangeUtils.editableTextNodes,\n        registerTool = Editor.EditorUtils.registerTool,\n        keys = kendo.keys;\n\n    var HTTP_PROTOCOL = \"http://\";\n    var protocolRegExp = /^\\w*:\\/\\//;\n    var endLinkCharsRegExp = /[\\w\\/\\$\\-_\\*\\?]/i;\n\n    var LinkFormatFinder = Class.extend({\n        findSuitable: function(sourceNode) {\n            return dom.parentOfType(sourceNode, [\"a\"]);\n        }\n    });\n\n    var LinkFormatter = Class.extend({\n        init: function() {\n            this.finder = new LinkFormatFinder();\n        },\n\n        apply: function(range, attributes) {\n            var nodes = this.immutables ? editableTextNodes(range) : textNodes(range);\n            var markers, doc, formatter, a, parent;\n\n            if (attributes.innerText) {\n                doc = RangeUtils.documentFromRange(range);\n                markers = RangeUtils.getMarkers(range);\n\n                range.deleteContents();\n                a = dom.create(doc, \"a\", attributes);\n                range.insertNode(a);\n\n                parent = a.parentNode;\n                if (dom.name(parent) == \"a\") {\n                    dom.insertAfter(a, parent);\n                }\n\n                if (dom.emptyNode(parent)) {\n                    dom.remove(parent);\n                }\n\n                // move range and markers after inserted link\n                var ref = a;\n                for (var i = 0; i < markers.length; i++) {\n                    dom.insertAfter(markers[i], ref);\n                    ref = markers[i];\n                }\n\n                if (markers.length) {\n                    dom.insertBefore(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                    dom.insertAfter(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                    range.setStartBefore(markers[0]);\n                    range.setEndAfter(markers[markers.length - 1]);\n                }\n            } else {\n                formatter = new InlineFormatter([{ tags: [\"a\"] }], attributes);\n                formatter.finder = this.finder;\n                formatter.apply(nodes);\n            }\n        }\n    });\n\n    var UnlinkCommand = Command.extend({\n        init: function(options) {\n            var that = this;\n            options.formatter = /** @ignore */ {\n                toggle: function(range) {\n                    var nodes = that.immutables() ? editableTextNodes(range) : textNodes(range);\n                    new InlineFormatter([{ tags: [\"a\"] }]).remove(nodes);\n                }\n            };\n            this.options = options;\n            Command.fn.init.call(this, options);\n        }\n    });\n\n    var LinkCommand = Command.extend({\n        init: function(options) {\n            var that;\n            this.options = options;\n            Command.fn.init.call(this, options);\n            this.formatter = new LinkFormatter();\n\n            if (!options.url) {\n                this.attributes = null;\n                this.async = true;\n            } else {\n                this.exec = function() {\n                    this.formatter.immutables = that && that.immutables();\n                    this.formatter.apply(options.range, {\n                        href: options.url,\n                        innerText: options.text || options.url,\n                        target: options.target\n                    });\n                };\n            }\n        },\n\n        exec: function() {\n            var messages = this.editor.options.messages;\n            this._initialText = \"\";\n            this._range = this.lockRange(true);\n            this.formatter.immutables = this.immutables();\n\n            var nodes = textNodes(this._range);\n            var a = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null;\n            var img = nodes.length && dom.name(nodes[0]) == \"img\";\n\n            var dialog = this.createDialog(\"<div/>\", {\n                title: messages.createLink,\n                minWidth: 340,\n                close: this._close.bind(this),\n                visible: false\n            }).data(\"kendoWindow\");\n\n            this._form = this._createForm(dialog);\n\n            if (a) {\n                this._range.selectNodeContents(a);\n                nodes = textNodes(this._range);\n            }\n\n            this._initialText = this.linkText(nodes);\n\n            dialog.wrapper\n                .find(\".k-dialog-insert\").on(\"click\", this._apply.bind(this)).end()\n                .find(\".k-dialog-close\").on(\"click\", this._close.bind(this)).end()\n                .find(\".k-form-field input\").on(\"keydown\", this._keydown.bind(this)).end()\n                .find(\"#k-editor-link-url\").val(this.linkUrl(a)).end()\n                .find(\"#k-editor-link-text\").val(this._initialText).end()\n                .find(\"#k-editor-link-title\").val(a ? a.title : \"\").end()\n                .find(\"#k-editor-link-target\").prop(\"checked\", a ? a.target == \"_blank\" : false).end()\n                .find(\".k-editor-link-text-row\").toggle(!img);\n\n            this._dialog = dialog.center().open();\n\n            $(\"#k-editor-link-url\", dialog.element).trigger(\"focus\").select();\n        },\n\n        _createForm: function(dialog) {\n            var that = this;\n            var formElement = $(\"<div/>\").appendTo(dialog.element);\n            var messages = that.editor.options.messages;\n            var form = formElement.kendoForm({\n                renderButtons: false,\n                items: [\n                    {\n                        field: \"k-editor-link-url\",\n                        label: encode(messages.linkWebAddress),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-link-text\",\n                        label: encode(messages.linkText),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-link-title\",\n                        label: encode(messages.linkToolTip),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-link-target\",\n                        editorOptions: {\n                            label: encode(messages.linkOpenInNewWindow)\n                        },\n                        label: \"\",\n                        editor: \"CheckBox\"\n                    }\n                ]\n            }).data(\"kendoForm\");\n\n            formElement.find(\"#k-editor-link-text\").parents(\".k-form-field\").addClass(\"k-editor-link-text-row\");\n\n            dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"link\", cancelButtonIcon: \"cancel-outline\" })));\n\n            return form;\n        },\n\n        _keydown: function(e) {\n            var keys = kendo.keys;\n\n            if (e.keyCode == keys.ENTER) {\n                this._apply(e);\n            } else if (e.keyCode == keys.ESC) {\n                this._close(e);\n            }\n        },\n\n        _apply: function(e) {\n            var element = this._dialog.element;\n            var href = $(\"#k-editor-link-url\", element).val();\n            var title, text, target;\n            var textInput = $(\"#k-editor-link-text\", element);\n\n            if (href && href != HTTP_PROTOCOL) {\n\n                if (href.indexOf(\"@\") > 0 && !/^(\\w+:)|(\\/\\/)/i.test(href)) {\n                    href = \"mailto:\" + href;\n                }\n\n                this.attributes = { href: href };\n\n                title = $(\"#k-editor-link-title\", element).val();\n                if (title) {\n                    this.attributes.title = title;\n                }\n\n                if (textInput.is(\":visible\")) {\n                    text = kendo.trim(textInput.val());\n                    if (!text && !this._initialText) {\n                        this.attributes.innerText = href;\n                    } else if (text && (text !== this._initialText)) {\n                        this.attributes.innerText = dom.stripBom(text);\n                    }\n                }\n\n                target = $(\"#k-editor-link-target\", element).is(\":checked\");\n                this.attributes.target = target ? \"_blank\" : null;\n\n                this.formatter.apply(this._range, this.attributes);\n            }\n\n            this._close(e);\n\n            if (this.change) {\n                this.change();\n            }\n        },\n\n        _close: function(e) {\n            e.preventDefault();\n            this._form.destroy();\n            this._dialog.destroy();\n\n            dom.windowFromDocument(RangeUtils.documentFromRange(this._range)).focus();\n\n            this.releaseRange(this._range);\n        },\n\n        linkUrl: function(anchor) {\n            if (anchor) {\n                // IE < 8 returns absolute url if getAttribute is not used\n                return anchor.getAttribute(\"href\", 2);\n            }\n\n            return HTTP_PROTOCOL;\n        },\n\n        linkText: function(nodes) {\n            var text = \"\";\n            var i;\n\n            for (i = 0; i < nodes.length; i++) {\n                text += nodes[i].nodeValue;\n            }\n\n            return dom.stripBom(text || \"\");\n        },\n\n        redo: function() {\n            var range = this.lockRange(true);\n\n            this.formatter.apply(range, this.attributes);\n            this.releaseRange(range);\n        }\n\n    });\n\n    var AutoLinkCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n\n            this.formatter = new LinkFormatter();\n        },\n\n        exec: function() {\n            var detectedLink = this.detectLink();\n            if (!detectedLink) {\n                return;\n            }\n\n            var range = this.getRange();\n            var linkMarker = new kendo.ui.editor.Marker();\n            var linkRange = range.cloneRange();\n\n            linkRange.setStart(detectedLink.start.node, detectedLink.start.offset);\n            linkRange.setEnd(detectedLink.end.node, detectedLink.end.offset);\n\n            range = this.lockRange();\n            linkMarker.add(linkRange);\n\n            this.formatter.apply(linkRange, {\n                href: this._ensureWebProtocol(detectedLink.text)\n            });\n\n            linkMarker.remove(linkRange);\n            this.releaseRange(range);\n        },\n\n        detectLink: function() {\n            var range = this.getRange();\n            var startNode = range.startContainer;\n            var startOffset = range.startOffset;\n            var prev = startNode.previousSibling;\n            if (!prev && ((dom.isBom(startNode) && !startNode.nextSibling) || (!startOffset && dom.isDataNode(startNode)))) {\n                startNode = startNode.parentNode;\n                startOffset = 0;\n            }\n            var traverser = new LeftDomTextTraverser({\n                node: startNode,\n                offset: startOffset,\n                cancelAtNode: function(node) { return node && dom.name(node) === \"a\"; }\n            });\n\n            var detection = new DomTextLinkDetection(traverser);\n            return detection.detectLink();\n        },\n\n        changesContent: function() {\n            return !!this.detectLink();\n        },\n\n        _ensureWebProtocol: function(linkText) {\n            var hasProtocol = this._hasProtocolPrefix(linkText);\n            return hasProtocol ? linkText : this._prefixWithWebProtocol(linkText);\n        },\n\n        _hasProtocolPrefix: function(linkText) {\n            return protocolRegExp.test(linkText);\n        },\n\n        _prefixWithWebProtocol: function(linkText) {\n            return HTTP_PROTOCOL + linkText;\n        }\n    });\n\n    var UnlinkTool = Tool.extend({\n        init: function(options) {\n            this.options = options;\n            this.finder = new InlineFormatFinder([{ tags: [\"a\"] }]);\n\n            Tool.fn.init.call(this, $.extend(options, { command: UnlinkCommand }));\n        },\n\n        update: function(ui, nodes) {\n            var isLink = this.finder.isFormatted(nodes),\n                toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n            if (isLink) {\n                toolbar.enable(ui, true);\n            } else {\n                toolbar.enable(ui, false);\n            }\n        }\n    });\n\n    var DomTextLinkDetection = Class.extend({\n        init: function(traverser) {\n            this.traverser = traverser;\n            this.start = DomPos();\n            this.end = DomPos();\n            this.text = \"\";\n        },\n\n        detectLink: function() {\n            var node = this.traverser.node;\n            var offset = this.traverser.offset;\n            if (dom.isDataNode(node)) {\n                var text = node.data.substring(0, offset);\n                if (/\\s{2}$/.test(dom.stripBom(text))) {\n                    return;\n                }\n            } else if (offset === 0) {//heuristic for new line\n                var p = dom.closestEditableOfType(node, dom.blockElements);\n                if (p && p.previousSibling) {\n                    this.traverser.init({\n                        node: p.previousSibling\n                    });\n                }\n            }\n\n            this.traverser.traverse(this._detectEnd.bind(this));\n            if (!this.end.blank()) {\n                this.traverser = this.traverser.clone(this.end);\n                this.traverser.traverse(this._detectStart.bind(this));\n\n                if (!this._isLinkDetected()) {\n                    var puntuationOptions = this.traverser.extendOptions(this.start);\n                    var puntuationTraverser = new RightDomTextTraverser(puntuationOptions);\n                    puntuationTraverser.traverse(this._skipStartPuntuation.bind(this));\n                    if (!this._isLinkDetected()) {\n                        this.start = DomPos();\n                    }\n                }\n            }\n\n            if (this.start.blank()) {\n                return null;\n            } else {\n                return {\n                    start: this.start,\n                    end: this.end,\n                    text: this.text\n                };\n            }\n        },\n\n        _isLinkDetected: function() {\n            return protocolRegExp.test(this.text) || /^w{3}\\./i.test(this.text);\n        },\n\n        _detectEnd: function(text, node) {\n            var i = lastIndexOfRegExp(text, endLinkCharsRegExp);\n            if (i > -1) {\n                this.end.node = node;\n                this.end.offset = i + 1;\n\n                return false;\n            }\n        },\n\n        _detectStart: function(text, node) {\n            var i = lastIndexOfRegExp(text, /\\s/);\n            var ii = i + 1;\n            this.text = text.substring(ii) + this.text;\n\n            this.start.node = node;\n            this.start.offset = ii;\n\n            if (i > -1) {\n                return false;\n            }\n        },\n\n        _skipStartPuntuation: function(text, node, offset) {\n            var i = indexOfRegExp(text, /\\w/);\n            var ii = i;\n            if (i === -1) {\n                ii = text.length;\n            }\n\n            this.text = this.text.substring(ii);\n            this.start.node = node;\n            this.start.offset = ii + (offset | 0);\n\n            if (i > -1) {\n                return false;\n            }\n        }\n    });\n\n    function lastIndexOfRegExp(str, search) {\n        var i = str.length;\n        while (i-- && !search.test(str[i])) {}\n\n        return i;\n    }\n    function indexOfRegExp(str, search) {\n        var r = search.exec(str);\n\n        return r ? r.index : -1;\n    }\n\n    var DomPos = function() {\n        return {\n            node: null,\n            offset: null,\n            blank: function() {\n                return this.node === null && this.offset === null;\n            }\n        };\n    };\n\n    var DomTextTraverser = Class.extend({\n        init: function(options) {\n            this.node = options.node;\n            this.offset = options.offset === undefined$1 ? (dom.isDataNode(this.node) && this.node.length) || 0 : options.offset;\n            this.cancelAtNode = options.cancelAtNode || this.cancelAtNode || $.noop;\n        },\n\n        traverse: function(callback) {\n            if (!callback) {\n                return;\n            }\n            this.cancel = false;\n            this._traverse(callback, this.node, this.offset);\n        },\n\n        _traverse: function(callback, node, offset) {\n            if (!node || this.cancel) {\n                return;\n            }\n            if (node.nodeType === 3) {\n                var text = node.data;\n                if (offset !== undefined$1) {\n                    text = this.subText(text, offset);\n                }\n                this.cancel = (callback(text, node, offset) === false);\n            }\n            else {\n                var edgeNode = this.edgeNode(node);\n                this.cancel = this.cancel || this.cancelAtNode(edgeNode);\n                return this._traverse(callback, edgeNode);\n            }\n\n            var next = this.next(node);\n            if (!next) {\n                var parent = node.parentNode;\n                while (!next && dom.isInline(parent)) {\n                    next = this.next(parent);\n                    parent = parent.parentNode;\n                }\n            }\n            this.cancel = this.cancel || this.cancelAtNode(next);\n            this._traverse(callback, next);\n        },\n\n        extendOptions: function(o) {\n            return $.extend({\n                node: this.node,\n                offset: this.offset,\n                cancelAtNode: this.cancelAtNode\n            }, o || {});\n        },\n\n        edgeNode: function(node) {},\n        next: function(node) {},\n        subText: function(text, offset) {}\n\n    });\n\n    var LeftDomTextTraverser = DomTextTraverser.extend({\n        subText: function(text, splitIndex) {\n            return text.substring(0, splitIndex);\n        },\n\n        next: function(node) {\n            return node.previousSibling;\n        },\n\n        edgeNode: function(node) {\n            return node.lastChild;\n        },\n\n        clone: function(options) {\n            var o = this.extendOptions(options);\n            return new LeftDomTextTraverser(o);\n        }\n    });\n\n    var RightDomTextTraverser = DomTextTraverser.extend({\n        subText: function(text, splitIndex) {\n            return text.substring(splitIndex);\n        },\n\n        next: function(node) {\n            return node.nextSibling;\n        },\n\n        edgeNode: function(node) {\n            return node.firstChild;\n        },\n\n        clone: function(options) {\n            var o = this.extendOptions(options);\n            return new RightDomTextTraverser(o);\n        }\n    });\n\n    extend(kendo.ui.editor, {\n        LinkFormatFinder: LinkFormatFinder,\n        LinkFormatter: LinkFormatter,\n        UnlinkCommand: UnlinkCommand,\n        LinkCommand: LinkCommand,\n        AutoLinkCommand: AutoLinkCommand,\n        UnlinkTool: UnlinkTool,\n        DomTextLinkDetection: DomTextLinkDetection,\n        LeftDomTextTraverser: LeftDomTextTraverser,\n        RightDomTextTraverser: RightDomTextTraverser\n    });\n\n    registerTool(\"createLink\", new Tool({ key: \"K\", ctrl: true, command: LinkCommand }));\n    registerTool(\"unlink\", new UnlinkTool({ key: \"K\", ctrl: true, shift: true, ui: { enable: false } }));\n    registerTool(\"autoLink\", new Tool({ key: [keys.ENTER, keys.SPACEBAR], keyPressCommand: true, command: AutoLinkCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        formats = kendo.ui.Editor.fn.options.formats,\n        dom = Editor.Dom,\n        FormatTool = Editor.FormatTool,\n        EditorUtils = Editor.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        registerFormat = EditorUtils.registerFormat,\n        RangeUtils = Editor.RangeUtils;\n\n    var BlockFormatFinder = Class.extend({\n        init: function(format) {\n            this.format = format;\n        },\n\n        contains: function(node, children) {\n            var i, len, child;\n\n            for (i = 0, len = children.length; i < len; i++) {\n                child = children[i];\n                if (!child || !dom.isAncestorOrSelf(node, child)) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        findSuitable: function(nodes) {\n            var format = this.format,\n                suitable = [],\n                i, len, candidate;\n\n            for (i = 0, len = nodes.length; i < len; i++) {\n                for (var f = format.length - 1; f >= 0; f--) {\n                    candidate = dom.ofType(nodes[i], format[f].tags) ? nodes[i] : dom.closestEditableOfType(nodes[i], format[f].tags);\n                    if (candidate) {\n                        break;\n                    }\n                }\n\n                if (!candidate || candidate.contentEditable === 'true') {\n                    return [];\n                }\n\n                if ($.inArray(candidate, suitable) < 0) {\n                    suitable.push(candidate);\n                }\n            }\n\n            this._resolveListsItems(suitable);\n\n            for (i = 0, len = suitable.length; i < len; i++) {\n                if (this.contains(suitable[i], suitable)) {\n                    return [suitable[i]];\n                }\n            }\n\n            return suitable;\n        },\n        _resolveListsItems: function(nodes) {\n            var i, node, wrapper;\n            for (i = 0; i < nodes.length; i++) {\n                node = nodes[i];\n                wrapper = dom.is(node, \"li\") ? node : dom.wrapper(node);\n                wrapper = wrapper && dom.list(wrapper) ? wrapper.children[0] : wrapper;\n                if (dom.is(wrapper, \"li\")) {\n                    node = nodes[i] = wrapper;\n                }\n            }\n        },\n\n        findFormat: function(sourceNode, until) {\n            var format = this.format,\n                i, len, node, tags, attributes;\n            var editableParent = dom.editableParent(sourceNode);\n            var immutables = this.options && this.options.immutables;\n            var ImmutablesNS = Editor.Immutables;\n\n            for (i = 0, len = format.length; i < len; i++) {\n                node = sourceNode;\n                tags = format[i].tags;\n                attributes = format[i].attr;\n\n                if (immutables && tags && tags[0] == \"immutable\") {\n                    var immutable = ImmutablesNS.immutableParent(node);\n                    if (immutable && dom.attrEquals(immutable, attributes)) {\n                        return node;\n                    }\n                }\n\n                while (node && dom.isAncestorOf(editableParent, node)) {\n                    if (dom.ofType(node, tags) && dom.attrEquals(node, attributes)) {\n                        return node;\n                    }\n\n                    if (until && until(node)) {\n                        break;\n                    }\n\n                    node = node.parentNode;\n                }\n            }\n            return null;\n        },\n\n        getFormat: function(nodes) {\n            var that = this,\n                findFormat = function(node) {\n                        return that.findFormat(dom.isDataNode(node) ? node.parentNode : node);\n                    },\n                result = findFormat(nodes[0]),\n                i, len;\n\n            if (!result) {\n                return \"\";\n            }\n\n            for (i = 1, len = nodes.length; i < len; i++) {\n                if (result != findFormat(nodes[i])) {\n                    return \"\";\n                }\n            }\n\n            return result.nodeName.toLowerCase();\n        },\n\n        isFormatted: function(nodes, until) {\n            for (var i = 0, len = nodes.length; i < len; i++) {\n                if (!this.findFormat(nodes[i], until)) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    });\n\n    var BlockFormatter = Class.extend({\n        init: function(format, values) {\n            this.format = format;\n            this.values = values;\n            this.finder = new BlockFormatFinder(format);\n        },\n\n        wrap: function(tag, attributes, nodes) {\n\n            var commonAncestor = nodes.length == 1 ? dom.blockParentOrBody(nodes[0]) : dom.commonAncestor.apply(null, nodes);\n\n            if (dom.isInline(commonAncestor)) {\n                commonAncestor = dom.blockParentOrBody(commonAncestor);\n            }\n\n            var ancestors = dom.significantChildNodes(commonAncestor),\n                position = dom.findNodeIndex(ancestors[0]),\n                wrapper = dom.create(commonAncestor.ownerDocument, tag, attributes),\n                i, ancestor;\n\n            for (i = 0; i < ancestors.length; i++) {\n                ancestor = ancestors[i];\n                if (dom.isBlock(ancestor)) {\n                    dom.attr(ancestor, attributes);\n\n                    if (wrapper.childNodes.length) {\n                        dom.insertBefore(wrapper, ancestor);\n                        wrapper = wrapper.cloneNode(false);\n                    }\n\n                    position = dom.findNodeIndex(ancestor) + 1;\n\n                    continue;\n                }\n\n                wrapper.appendChild(ancestor);\n            }\n\n            if (wrapper.firstChild) {\n                dom.insertAt(commonAncestor, wrapper, position);\n            }\n        },\n\n        apply: function(nodes) {\n            var format, values = this.values;\n\n            function attributes(format) {\n                return extend({}, format && format.attr, values);\n            }\n\n            this._handleImmutables(nodes, true);\n\n            var images = dom.filter(\"img\", nodes);\n            var imageFormat = EditorUtils.formatByName(\"img\", this.format);\n            var imageAttributes = attributes(imageFormat);\n            $.each(images, function() {\n                dom.attr(this, imageAttributes);\n            });\n\n            // only images were selected, no need to wrap\n            if (images.length == nodes.length) {\n                return;\n            }\n\n            var nonImages = dom.filter(\"img\", nodes, true);\n            var formatNodes = this.finder.findSuitable(nonImages);\n\n            if (formatNodes.length) {\n                for (var i = 0, len = formatNodes.length; i < len; i++) {\n                    format = EditorUtils.formatByName(dom.name(formatNodes[i]), this.format);\n                    dom.attr(formatNodes[i], attributes(format));\n                }\n            } else {\n                format = this.format[0];\n                this.wrap(format.tags[0], attributes(format), nonImages);\n            }\n        },\n\n        _handleImmutables: function(nodes, applyFormatting) {\n            if (!this.immutables()) {\n                return;\n            }\n            var immutableFormat = EditorUtils.formatByName(\"immutable\", this.format);\n            if (!immutableFormat) {\n                return;\n            }\n            var ImmutablesNS = Editor.Immutables;\n            var l = nodes.length - 1;\n            for (var i = l; i >= 0; i--) {\n                var immutableParent = ImmutablesNS.immutableParent(nodes[i]);\n                if (!immutableParent) {\n                    continue;\n                }\n                if (immutableParent !== nodes[i + 1]) {\n                    if (applyFormatting) {\n                        dom.attr(immutableParent, immutableFormat.attr);\n                    } else {\n                        dom.unstyle(immutableParent, immutableFormat.attr.style);\n                    }\n                }\n                nodes.splice(i, 1);\n            }\n        },\n\n        immutables: function() {\n            return this.editor && this.editor.options.immutables;\n        },\n\n        remove: function(nodes) {\n            var i, l, formatNode, namedFormat, name;\n\n            this._handleImmutables(nodes, false);\n\n            for (i = 0, l = nodes.length; i < l; i++) {\n                formatNode = this.finder.findFormat(nodes[i]);\n                if (formatNode) {\n                    name = dom.name(formatNode);\n                    namedFormat = EditorUtils.formatByName(name, this.format);\n                    if (namedFormat.attr.style) {\n                        dom.unstyle(formatNode, namedFormat.attr.style);\n                    }\n                    if (namedFormat.attr.className) {\n                        dom.removeClass(formatNode, namedFormat.attr.className);\n                    }\n                }\n            }\n        },\n\n        toggle: function(range) {\n            var that = this,\n                nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n            if (that.finder.isFormatted(nodes)) {\n                that.remove(nodes);\n            } else {\n                that.apply(nodes);\n            }\n        }\n    });\n\n    var GreedyBlockFormatter = Class.extend({\n        init: function(format, values) {\n            var that = this;\n            that.format = format;\n            that.values = values;\n            that.finder = new BlockFormatFinder(format);\n        },\n\n        apply: function(nodes) {\n            var format = this.format;\n            var blocks = dom.blockParents(nodes);\n            var formatTag = format[0].tags[0];\n            var i, len, list, formatter, range;\n            var element;\n            var tagName;\n            var block;\n            var immutalbeParent;\n\n            if (blocks.length) {\n                for (i = 0, len = blocks.length; i < len; i++) {\n                    block = blocks[i];\n                    immutalbeParent = this.immutables() && Editor.Immutables.immutableParent(block);\n\n                    if (!immutalbeParent) {\n                        tagName = dom.name(block);\n\n                        if (tagName == \"li\") {\n                            list = block.parentNode;\n                            formatter = new Editor.ListFormatter(list.nodeName.toLowerCase(), formatTag);\n                            range = this.editor.createRange();\n                            range.selectNode(blocks[i]);\n                            formatter.toggle(range);\n                        } else if (formatTag && (tagName == \"td\" || block.attributes.contentEditable)) {\n                            new BlockFormatter(format, this.values).apply(block.childNodes);\n                        } else {\n                            element = dom.changeTag(block, formatTag);\n                            dom.attr(element, format[0].attr);\n                        }\n                    }\n                }\n            } else {\n                var blockFormatter = new BlockFormatter(format, this.values);\n                blockFormatter.editor = this.editor;\n                blockFormatter.apply(nodes);\n            }\n        },\n\n        toggle: function(range) {\n            var nodes = RangeUtils.textNodes(range);\n            if (!nodes.length) {\n                range.selectNodeContents(range.commonAncestorContainer);\n                nodes = RangeUtils.textNodes(range);\n                if (!nodes.length) {\n                    nodes = dom.significantChildNodes(range.commonAncestorContainer);\n                }\n            }\n\n            this.apply(nodes);\n        },\n\n        immutables: function() {\n            return this.editor && this.editor.options.immutables;\n        }\n    });\n\n    var BlockFormatTool = FormatTool.extend({ init: function(options) {\n            FormatTool.fn.init.call(this, extend(options, {\n                finder: new BlockFormatFinder(options.format),\n                formatter: function() {\n                    return new BlockFormatter(options.format);\n                }\n            }));\n        }\n    });\n\n    extend(Editor, {\n        BlockFormatFinder: BlockFormatFinder,\n        BlockFormatter: BlockFormatter,\n        GreedyBlockFormatter: GreedyBlockFormatter,\n        BlockFormatTool: BlockFormatTool\n    });\n\n    var listElements = [\"ul\",\"ol\",\"li\"];\n\n    registerFormat(\"justifyLeft\", [\n        { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"left\" } } },\n        { tags: [\"img\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n        { tags: [\"immutable\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n        { tags: listElements, attr: { style: { textAlign: \"left\", listStylePosition: \"\" } } }\n    ]);\n    registerTool(\"justifyLeft\", new BlockFormatTool({\n        format: formats.justifyLeft,\n        ui: {\n            togglable: true,\n            group: \"align\"\n        }\n    }));\n\n    registerFormat(\"justifyCenter\", [\n        { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"center\" } } },\n        { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n        { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n        { tags: listElements, attr: { style: { textAlign: \"center\", listStylePosition: \"inside\" } } }\n    ]);\n    registerTool(\"justifyCenter\", new BlockFormatTool({\n        format: formats.justifyCenter,\n        ui: {\n            togglable: true,\n            group: \"align\"\n        }\n    }));\n\n    registerFormat(\"justifyRight\", [\n        { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"right\" } } },\n        { tags: [\"img\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n        { tags: [\"immutable\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n        { tags: listElements, attr: { style: { textAlign: \"right\", listStylePosition: \"inside\" } } }\n    ]);\n    registerTool(\"justifyRight\", new BlockFormatTool({\n        format: formats.justifyRight,\n        ui: {\n            togglable: true,\n            group: \"align\"\n        }\n    }));\n\n    registerFormat(\"justifyFull\", [\n        { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"justify\" } } },\n        { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n        { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n        { tags: listElements, attr: { style: { textAlign: \"justify\", listStylePosition: \"\" } } }\n    ]);\n    registerTool(\"justifyFull\", new BlockFormatTool({\n        format: formats.justifyFull,\n        ui: {\n            togglable: true,\n            group: \"align\"\n        }\n    }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        dom = Editor.Dom,\n        RangeUtils = Editor.RangeUtils,\n        Command = Editor.Command,\n        FormatTool = Editor.FormatTool,\n        BlockFormatFinder = Editor.BlockFormatFinder,\n        textNodes = RangeUtils.textNodes,\n        registerTool = Editor.EditorUtils.registerTool;\n\n    var ListFormatFinder = BlockFormatFinder.extend({\n        init: function(options) {\n            this.tag = options.tag;\n            this.attr = options.attr;\n            this.altAttr = options.altAttr;\n\n            var tags = this.tags = [this.tag == 'ul' ? 'ol' : 'ul', this.tag];\n            var format = [{ tags: tags, attr: this.attr }];\n\n            if (this.altAttr) {\n                format.push({\n                    tags: tags,\n                    attr: this.altAttr\n                });\n            }\n\n            BlockFormatFinder.fn.init.call(this, format);\n        },\n\n        matchesType: function(node) {\n            return dom.attrEquals(node, this.attr) || (this.altAttr && dom.attrEquals(node, this.altAttr));\n        },\n\n        isList: function(node) {\n            return dom.list(node);\n        },\n\n        isFormatted: function(nodes) {\n            var formatNodes = [];\n            var formatNode, i;\n\n            for (i = 0; i < nodes.length; i++) {\n                formatNode = this.findFormat(nodes[i], this.isList);\n\n                if (formatNode && dom.name(formatNode) == this.tag && this.matchesType(formatNode)) {\n                    formatNodes.push(formatNode);\n                }\n            }\n\n            if (formatNodes.length < 1) {\n                return false;\n            }\n\n            if (formatNodes.length != nodes.length) {\n                return false;\n            }\n\n            // check if sequential lists are selected\n            for (i = 0; i < formatNodes.length; i++) {\n                if (formatNodes[i].parentNode != formatNode.parentNode) {\n                    break;\n                }\n\n                if (formatNodes[i] != formatNode) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        findSuitable: function(nodes) {\n            var candidate = this.findFormat(nodes[0], this.isList);\n\n            if (candidate && dom.name(candidate) == this.tag) {\n                return candidate;\n            }\n\n            return null;\n        }\n\n    });\n\n    var ListFormatter = Class.extend({\n        init: function(options, unwrapTag) {\n            var that = this;\n            options = $.isPlainObject(options) ? options : { tag: options, attr: null };\n            that.tag = options.tag;\n            that.attr = options.attr;\n            that.finder = new ListFormatFinder(options);\n            that.unwrapTag = unwrapTag;\n        },\n\n        isList: function(node) {\n            return dom.list(node);\n        },\n\n        immutables: function() {\n            return this.editor && !!this.editor.options.immutables;\n        },\n\n        wrap: function(list, nodes) {\n            var li = dom.create(list.ownerDocument, \"li\"),\n                i, node,\n                isImmutable = this.immutables() ? Editor.Immutables.immutable : $.noop;\n\n            for (i = 0; i < nodes.length; i++) {\n                node = nodes[i];\n\n                if (dom.is(node, 'li')) {\n                    list.appendChild(node);\n                    continue;\n                }\n\n                if (this.isList(node)) {\n                    while (node.firstChild) {\n                        list.appendChild(node.firstChild);\n                    }\n                    continue;\n                }\n\n                if (dom.is(node, \"td\")) {\n                    while (node.firstChild) {\n                        li.appendChild(node.firstChild);\n                    }\n                    list.appendChild(li);\n                    node.appendChild(list);\n                    list = list.cloneNode(false);\n                    li = li.cloneNode(false);\n                    continue;\n                }\n\n                li.appendChild(node);\n\n                if (dom.isBlock(node)) {\n                    list.appendChild(li);\n                    if (!isImmutable(node)) {\n                        dom.unwrap(node);\n                    }\n                    li = li.cloneNode(false);\n                }\n            }\n\n            if (li.firstChild) {\n                list.appendChild(li);\n            }\n        },\n\n        containsAny: function(parent, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                if (dom.isAncestorOrSelf(parent, nodes[i])) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        suitable: function(candidate, nodes) {\n            if (candidate.className == \"k-marker\") {\n                var sibling = candidate.nextSibling;\n\n                if (sibling && dom.isBlock(sibling)) {\n                    return false;\n                }\n\n                sibling = candidate.previousSibling;\n\n                if (sibling && dom.isBlock(sibling)) {\n                    return false;\n                }\n            }\n\n            return this.containsAny(candidate, nodes) || dom.isInline(candidate) || candidate.nodeType == 3;\n        },\n\n        _parentLists: function(node) {\n            var editable = dom.closestEditable(node);\n\n            return $(node).parentsUntil(editable, \"ul,ol\");\n        },\n\n        split: function(range) {\n            var nodes = textNodes(range);\n            var start, end, parents;\n\n            if (nodes.length) {\n                start = dom.parentOfType(nodes[0], ['li']);\n                end = dom.parentOfType(nodes[nodes.length - 1], ['li']);\n                range.setStartBefore(start);\n                range.setEndAfter(end);\n\n                for (var i = 0, l = nodes.length; i < l; i++) {\n                    var formatNode = this.finder.findFormat(nodes[i]);\n                    if (formatNode) {\n                        parents = this._parentLists(formatNode);\n                        if (parents.length) {\n                            RangeUtils.split(range, parents.last()[0], true);\n                        } else {\n                            RangeUtils.split(range, formatNode, true);\n                        }\n                    }\n                }\n            }\n        },\n\n        merge: function(tag, formatNode) {\n            var prev = formatNode.previousSibling, next;\n\n            while (prev && (prev.className == \"k-marker\" || (prev.nodeType == 3 && dom.isWhitespace(prev)))) {\n                prev = prev.previousSibling;\n            }\n\n            // merge with previous list\n            if (prev && dom.name(prev) == tag && this.finder.matchesType(prev)) {\n                while (formatNode.firstChild) {\n                    prev.appendChild(formatNode.firstChild);\n                }\n                dom.remove(formatNode);\n                formatNode = prev;\n            }\n\n            next = formatNode.nextSibling;\n            while (next && (next.className == \"k-marker\" || (next.nodeType == 3 && dom.isWhitespace(next)))) {\n                next = next.nextSibling;\n            }\n\n            // merge with next list\n            if (next && dom.name(next) == tag && this.finder.matchesType(next)) {\n                while (formatNode.lastChild) {\n                    next.insertBefore(formatNode.lastChild, next.firstChild);\n                }\n                dom.remove(formatNode);\n            }\n        },\n\n        breakable: function(node) {\n            return (\n                node != node.ownerDocument.body &&\n                !/table|tbody|thead|tr|td/.test(dom.name(node)) &&\n                !node.attributes.contentEditable\n            );\n        },\n\n        findSuitableNode: function(nodes) {\n            var that = this,\n                finder = that.finder,\n                tag = that.tag,\n                formatNode;\n\n            formatNode = finder.findSuitable(nodes);\n\n            if (!formatNode) {\n                // Find the opposite tag\n                finder = new ListFormatFinder({ tag: tag == \"ul\" ? \"ol\" : \"ul\" });\n                formatNode = finder.findSuitable(nodes);\n            }\n\n            if (!formatNode) {\n                // Find the same tag\n                finder = new ListFormatFinder({ tag: tag });\n                formatNode = finder.findSuitable(nodes);\n                formatNode = formatNode && that.finder.matchesType(formatNode) ? null : formatNode;\n            }\n\n\n            return formatNode;\n        },\n\n        applyOnSection: function(section, nodes) {\n            var tag = this.tag;\n            var attr = this.attr;\n            var commonAncestor = dom.closestSplittableParent(nodes);\n\n            var ancestors = [];\n            var formatNode = this.findSuitableNode(nodes);\n\n            var childNodes;\n\n            if (/table|tbody|thead/.test(dom.name(commonAncestor))) {\n                childNodes = $.map(nodes, function(node) {\n                    return dom.parentOfType(node, [\"td\"]);\n                });\n            } else {\n                childNodes = dom.significantChildNodes(commonAncestor);\n\n                if ($.grep(childNodes, dom.isBlock).length) {\n                    childNodes = $.grep(childNodes, (function(node) {\n                        return this.containsAny(node, nodes);\n                    }).bind(this));\n                }\n\n                if (!childNodes.length) {\n                    childNodes = nodes;\n                }\n            }\n\n            function pushAncestor() {\n                ancestors.push(this);\n            }\n\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[i];\n                var suitable = (!formatNode || !dom.isAncestorOrSelf(formatNode, child)) && this.suitable(child, nodes);\n\n                if (!suitable) {\n                    continue;\n                }\n\n                if (formatNode && this.isList(child)) {\n                    // merging lists\n                    $.each(child.children, pushAncestor);\n                    dom.remove(child);\n                } else {\n                    ancestors.push(child);\n                }\n            }\n\n            if (ancestors.length == childNodes.length && this.breakable(commonAncestor)) {\n                ancestors = [commonAncestor];\n            }\n\n            if (!formatNode) {\n                formatNode = dom.create(commonAncestor.ownerDocument, tag, attr);\n                if (dom.isBlock(ancestors[0])) {\n                    dom.mergeAttributes(ancestors[0], formatNode);\n                }\n                dom.insertBefore(formatNode, ancestors[0]);\n            }\n\n            this.wrap(formatNode, ancestors);\n\n            while (dom.isBom(formatNode.nextSibling)) {\n                dom.remove(formatNode.nextSibling);\n            }\n\n            if (!this.finder.matchesType(formatNode)) {\n                formatNode.removeAttribute(\"type\");\n                formatNode.style.listStyleType = \"\";\n                dom.mergeAttributes(dom.create(commonAncestor.ownerDocument, tag, attr), formatNode, true);\n            }\n\n            if (formatNode && formatNode.getAttribute(\"type\") === \"\") {\n                formatNode.removeAttribute(\"type\");\n            }\n\n            if (!dom.is(formatNode, tag)) {\n                dom.changeTag(formatNode, tag);\n            }\n\n            this.merge(tag, formatNode);\n        },\n\n        apply: function(nodes) {\n            var i = 0,\n                sections = [],\n                lastSection,\n                lastNodes,\n                section,\n                node,\n                l = nodes.length,\n                immutableParent = this.immutables() ? Editor.Immutables.immutableParent : $.noop;\n\n            function addLastSection() {\n                if (lastSection) {\n                    sections.push({\n                        section: lastSection,\n                        nodes: lastNodes\n                    });\n                }\n            }\n\n            // split nodes into sections that need to be different lists\n            for (i = 0; i < l; i++) {\n                node = immutableParent(nodes[i]) || nodes[i];\n                section = dom.closestEditable(node, [\"td\",\"th\",\"body\"]);\n                if (!lastSection || section != lastSection) {\n                    addLastSection();\n                    lastNodes = [node];\n                    lastSection = section;\n                } else {\n                    lastNodes.push(node);\n                }\n            }\n\n            addLastSection();\n\n            for (i = 0; i < sections.length; i++) {\n                this.applyOnSection(sections[i].section, sections[i].nodes);\n            }\n        },\n\n        unwrap: function(ul) {\n            var fragment = ul.ownerDocument.createDocumentFragment(),\n                unwrapTag = this.unwrapTag,\n                parents,\n                li,\n                p,\n                child;\n\n            for (li = ul.firstChild; li; li = li.nextSibling) {\n                p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n\n                while (li.firstChild) {\n                    child = li.firstChild;\n\n                    if (dom.isBlock(child)) {\n\n                        if (p.firstChild) {\n                            fragment.appendChild(p);\n                            p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n                        }\n\n                        fragment.appendChild(child);\n                    } else {\n                        p.appendChild(child);\n                    }\n                }\n\n                if (p.firstChild) {\n                    fragment.appendChild(p);\n                }\n            }\n\n            parents = this._parentLists(ul);\n\n            if (parents[0]) {\n                dom.insertAfter(fragment, parents.last()[0]);\n                parents.last().remove();\n            } else {\n                dom.insertAfter(fragment, ul);\n            }\n\n            dom.remove(ul);\n        },\n\n        remove: function(nodes) {\n            var formatNode;\n            for (var i = 0, l = nodes.length; i < l; i++) {\n                formatNode = this.finder.findFormat(nodes[i]);\n\n                if (formatNode) {\n                    this.unwrap(formatNode);\n                }\n            }\n        },\n\n        toggle: function(range) {\n            var that = this,\n                nodes = textNodes(range),\n                ancestor = range.commonAncestorContainer;\n\n            if (!nodes.length) {\n                range.selectNodeContents(ancestor);\n                nodes = textNodes(range);\n                if (!nodes.length) {\n                    var text = ancestor.ownerDocument.createTextNode(\"\");\n                    range.startContainer.appendChild(text);\n                    nodes = [text];\n                    range.selectNode(text.parentNode);\n                }\n            }\n            nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n            if (that.finder.isFormatted(nodes)) {\n                that.split(range);\n                that.remove(nodes);\n            } else {\n                that.apply(nodes);\n            }\n        }\n\n    });\n\n    var ListCommand = Command.extend({\n        init: function(options) {\n            options.formatter = new ListFormatter({ tag: options.tag, attr: options.attr });\n            Command.fn.init.call(this, options);\n        }\n    });\n\n    var ListTool = FormatTool.extend({\n        init: function(options) {\n            this.options = options;\n\n            FormatTool.fn.init.call(this, extend(options, {\n                finder: new ListFormatFinder(options)\n            }));\n        },\n\n        command: function(commandArguments) {\n            return new ListCommand(extend(commandArguments, { tag: this.options.tag, attr: this.options.attr }));\n        }\n    });\n\n    extend(Editor, {\n        ListFormatFinder: ListFormatFinder,\n        ListFormatter: ListFormatter,\n        ListCommand: ListCommand,\n        ListTool: ListTool\n    });\n\n    registerTool(\"insertUnorderedList\", new ListTool({ tag: 'ul', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\n    registerTool(\"insertOrderedList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\n    registerTool(\"insertUpperRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"upper-roman\" } }, altAttr: { type: \"I\" }, ui: { togglable: true, group: \"lists\" } }));\n    registerTool(\"insertLowerRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"lower-roman\" } }, altAttr: { type: \"i\" }, ui: { togglable: true, group: \"lists\" } }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        Editor = kendo.ui.editor,\n        Tool = Editor.Tool,\n        DelayedExecutionTool = Editor.DelayedExecutionTool,\n        Command = Editor.Command,\n        dom = Editor.Dom,\n        EditorUtils = Editor.EditorUtils,\n        RangeUtils = Editor.RangeUtils,\n        registerTool = EditorUtils.registerTool;\n\n\n    var FormattingTool = DelayedExecutionTool.extend({\n        init: function(options) {\n            var that = this;\n            Tool.fn.init.call(that, kendo.deepExtend({}, that.options, options));\n\n            that.type = \"kendoDropDownList\";\n\n            that.finder = {\n                getFormat: function() { return \"\"; }\n            };\n        },\n\n        options: {\n            items: [\n                { text: \"Paragraph\", value: \"p\" },\n                { text: \"Quotation\", value: \"blockquote\" },\n                { text: \"Heading 1\", value: \"h1\" },\n                { text: \"Heading 2\", value: \"h2\" },\n                { text: \"Heading 3\", value: \"h3\" },\n                { text: \"Heading 4\", value: \"h4\" },\n                { text: \"Heading 5\", value: \"h5\" },\n                { text: \"Heading 6\", value: \"h6\" }\n            ],\n            width: 110\n        },\n\n        toFormattingItem: function(item) {\n            var value = item.value;\n\n            if (!value) {\n                return item;\n            }\n\n            if (item.tag || item.className) {\n                return item;\n            }\n\n            var dot = value.indexOf(\".\");\n\n            if (dot === 0) {\n                item.className = value.substring(1);\n            } else if (dot == -1) {\n                item.tag = value;\n            } else {\n                item.tag = value.substring(0, dot);\n                item.className = value.substring(dot + 1);\n            }\n\n            return item;\n        },\n\n        command: function(args) {\n            var that = this;\n            var item = args.value;\n\n            item = this.toFormattingItem(item);\n\n            return new Editor.FormatCommand({\n                range: args.range,\n                formatter: function() {\n                    var formatter,\n                        tags = (item.tag || item.context || \"span\").split(\",\"),\n                        format = [{\n                            tags: tags,\n                            attr: { className: item.className || \"\" }\n                        }];\n\n                    if ($.inArray(tags[0], dom.inlineElements) >= 0) {\n                        formatter = new Editor.GreedyInlineFormatter(format);\n                    } else {\n                        formatter = new Editor.GreedyBlockFormatter(format);\n                    }\n\n                    formatter.editor = that.editor;\n                    return formatter;\n                }\n            });\n        },\n\n        decorate: function(body) {\n            var component = this.component,\n                dataSource = component.dataSource,\n                items = dataSource.data(),\n                i, tag, className, style;\n\n            if (body) {\n                component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n            }\n\n            if (this.component && this.component.options && this.component.options.unsafeInline !== false) {\n                for (i = 0; i < items.length; i++) {\n                    tag = items[i].tag || \"span\";\n                    className = items[i].className;\n\n                    style = dom.inlineStyle(body, tag, { className: className });\n\n                    style = style.replace(/\"/g, \"'\");\n\n                    items[i].style = style + \";display:inline-block\";\n                }\n            }\n\n            dataSource.trigger(\"change\");\n        },\n\n        initialize: function(ui, editor) {\n            var options = this.options;\n            var toolName = options.name;\n            var that = this;\n            var component = ui.getKendoDropDownList();\n\n            if (!component) {\n                return;\n            }\n\n            that.editor = editor;\n            that.component = component;\n\n            // must be moved to themes\n            ui.closest(\".k-dropdownlist\").width(options.width);\n\n            component.setOptions({\n                optionLabel: editor.options.messages.formatting,\n                change: () => {\n                    var dataItem = component.dataItem();\n\n                    if (dataItem) {\n                        Tool.exec(editor, toolName, dataItem.toJSON());\n                    }\n                },\n                dataBound: function() {\n                    var i, items = component.dataSource.data(),\n                        optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n                    for (i = 0; i < items.length; i++) {\n                        items[i] = that.toFormattingItem(items[i]);\n                    }\n\n                    if (optionLabel.length) {\n                        optionLabel.remove();\n                    }\n                }\n            });\n        },\n\n        getFormattingValue: function(items, nodes) {\n            for (var i = 0; i < items.length; i++) {\n                var item = items[i];\n                var tag = item.tag || item.context || \"\";\n                var className = item.className ? \".\" + item.className : \"\";\n                var selector = tag + className;\n\n                var element = $(nodes[0]).closest(selector)[0];\n\n                if (!element) {\n                    continue;\n                }\n\n                if (nodes.length == 1) {\n                    return item.value;\n                }\n\n                for (var n = 1; n < nodes.length; n++) {\n                    if (!$(nodes[n]).closest(selector)[0]) {\n                        break;\n                    } else if (n == nodes.length - 1) {\n                        return item.value;\n                    }\n                }\n            }\n\n            return \"\";\n        },\n\n        update: function(ui, nodes) {\n            var selectBox = $(ui).data(this.type);\n            // necessary until formatBlock is deleted\n            if (!selectBox) {\n                return;\n            }\n\n            var dataSource = selectBox.dataSource,\n                items = dataSource.data(),\n                i, context,\n                ancestor = dom.commonAncestor.apply(null, nodes);\n\n            if (ancestor != dom.closestEditable(ancestor) && this._ancestor == ancestor) {\n                return;\n            } else {\n                this._ancestor = ancestor;\n            }\n\n            for (i = 0; i < items.length; i++) {\n                context = items[i].context;\n\n                items[i].visible = !context || !!$(ancestor).closest(context).length;\n            }\n\n            dataSource.filter([{ field: \"visible\", operator: \"eq\", value: true }]);\n\n            DelayedExecutionTool.fn.update.call(this, ui, nodes);\n\n            selectBox.value(this.getFormattingValue(dataSource.view(), nodes));\n\n            selectBox.wrapper.toggleClass(\"k-disabled\", !dataSource.view().length);\n        },\n\n        destroy: function() {\n            this._ancestor = null;\n        }\n    });\n\n    var CleanFormatCommand = Command.extend({\n        exec: function() {\n            var range = this.lockRange(true);\n            this.tagsToClean = this.options.remove || \"strong,em,span,sup,sub,del,b,i,u,font\".split(\",\");\n\n            RangeUtils.wrapSelectedElements(range);\n\n            var nodes = RangeUtils.mapAll(range, function(node) {\n                return node;\n            });\n\n\n            for (var c = nodes.length - 1; c >= 0; c--) {\n                var node = nodes[c];\n                if (!this.immutableParent(node)) {\n                    this.clean(node);\n                }\n            }\n\n            this.releaseRange(range);\n        },\n\n        clean: function(node) {\n            if (!node || dom.isMarker(node)) {\n                return;\n            }\n\n            var name = dom.name(node);\n\n            if (name == \"ul\" || name == \"ol\") {\n                var listFormatter = new Editor.ListFormatter(name);\n                var prev = node.previousSibling;\n                var next = node.nextSibling;\n\n                listFormatter.unwrap(node);\n\n                // clean contents\n                for (; prev && prev != next; prev = prev.nextSibling) {\n                    this.clean(prev);\n                }\n            } else if (name == \"blockquote\") {\n                dom.changeTag(node, \"p\");\n            } else if (node.nodeType == 1 && !dom.insignificant(node)) {\n                for (var i = node.childNodes.length - 1; i >= 0; i--) {\n                    this.clean(node.childNodes[i]);\n                }\n\n                node.removeAttribute(\"style\");\n                node.removeAttribute(\"class\");\n            } else {\n                unwrapListItem(node);\n            }\n\n            if ($.inArray(name, this.tagsToClean) > -1) {\n                dom.unwrap(node);\n            }\n        },\n\n        immutableParent: function(node) {\n            return this.immutables() && Editor.Immutables.immutableParent(node);\n        }\n    });\n\n\n    function unwrapListItem(node) {\n        var li = dom.closestEditableOfType(node, [\"li\"]);\n        if (li) {\n            var listFormatter = new Editor.ListFormatter(dom.name(li.parentNode));\n            var range = kendo.ui.editor.W3CRange.fromNode(node);\n            range.selectNode(li);\n            listFormatter.toggle(range);\n        }\n    }\n\n    $.extend(Editor, {\n        FormattingTool: FormattingTool,\n        CleanFormatCommand: CleanFormatCommand\n    });\n\n    registerTool(\"formatting\", new FormattingTool({\n        ui: {\n            type: \"component\",\n            component: \"DropDownList\",\n            componentOptions: {\n                dataTextField: \"text\",\n                dataValueField: \"value\",\n                highlightFirst: false,\n                autoWidth: true,\n                template: kendo.template(\n                    (data) => `<span unselectable=\"on\" ${data.style ? `class=\"k-d-block\" style=\"display:block;${data.style || \"\"}` : \"\"}\">${kendo.htmlEncode(data.text)}</span>`\n                )\n            },\n            overflow: \"never\"\n        }\n    }));\n\n    registerTool(\"cleanFormatting\", new Tool({ command: CleanFormatCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        dom = Editor.Dom,\n        registerTool = EditorUtils.registerTool,\n        RangeUtils = Editor.RangeUtils,\n        Command = Editor.Command,\n        keys = kendo.keys,\n        KEDITORIMAGEURL = \"#k-editor-image-url\",\n        KEDITORIMAGETITLE = \"#k-editor-image-title\",\n        KEDITORIMAGEWIDTH = \"#k-editor-image-width\",\n        KEDITORIMAGEHEIGHT = \"#k-editor-image-height\";\n\n    var ImageCommand = Command.extend({\n        init: function(options) {\n            var that = this;\n            Command.fn.init.call(that, options);\n\n            that.async = true;\n            that.attributes = {};\n        },\n\n        insertImage: function(img, range) {\n            var attributes = this.attributes;\n            var doc = RangeUtils.documentFromRange(range);\n\n            if (attributes.src && attributes.src != \"http://\") {\n\n                var removeIEAttributes = function() {\n                    setTimeout(function() {\n                        if (!attributes.width) {\n                            img.removeAttribute(\"width\");\n                        }\n\n                        if (!attributes.height) {\n                            img.removeAttribute(\"height\");\n                        }\n\n                        img.removeAttribute(\"complete\");\n                    });\n                };\n\n                if (!img) {\n                    img = dom.create(doc, \"img\", attributes);\n                    img.onload = img.onerror = removeIEAttributes;\n\n                    range.deleteContents();\n                    range.insertNode(img);\n\n                    if (!img.nextSibling) {\n                        dom.insertAfter(doc.createTextNode(\"\\ufeff\"), img);\n                    }\n\n                    removeIEAttributes();\n\n                    range.setStartAfter(img);\n                    range.setEndAfter(img);\n                    RangeUtils.selectRange(range);\n                    return true;\n                } else {\n                    img.onload = img.onerror = removeIEAttributes;\n                    dom.attr(img, attributes);\n                    removeIEAttributes();\n                }\n            }\n\n            return false;\n        },\n\n        redo: function() {\n            var that = this,\n                range = that.lockRange();\n\n            if (!that.insertImage(RangeUtils.image(range), range)) {\n                that.releaseRange(range);\n            }\n        },\n\n        exec: function() {\n            var that = this,\n                range = that.lockRange(),\n                applied = false,\n                img = RangeUtils.image(range),\n                imageWidth = img && img.getAttribute(\"width\") || \"\",\n                imageHeight = img && img.getAttribute(\"height\") || \"\",\n                dialog,\n                form,\n                isIE = kendo.support.browser.msie,\n                options = that.editor.options,\n                messages = options.messages,\n                imageBrowser = options.imageBrowser,\n                showBrowser = !!(kendo.ui.ImageBrowser && imageBrowser && imageBrowser.transport && imageBrowser.transport.read !== undefined$1),\n                dialogOptions = {\n                    title: messages.insertImage,\n                    visible: false,\n                    resizable: showBrowser\n                };\n\n            this.expandImmutablesIn(range);\n\n            function apply(e) {\n                var element = dialog.element,\n                    w = parseInt(element.find(KEDITORIMAGEWIDTH).val(), 10),\n                    h = parseInt(element.find(KEDITORIMAGEHEIGHT).val(), 10);\n\n                that.attributes = {\n                    src: element.find(KEDITORIMAGEURL).val().replace(/ /g, \"%20\"),\n                    alt: element.find(KEDITORIMAGETITLE).val()\n                };\n\n                that.attributes.width = null;\n                that.attributes.height = null;\n\n                if (!isNaN(w) && w > 0) {\n                    that.attributes.width = w;\n                }\n\n                if (!isNaN(h) && h > 0) {\n                    that.attributes.height = h;\n                }\n\n                applied = that.insertImage(img, range);\n\n                close(e);\n\n                if (that.change) {\n                    that.change();\n                }\n            }\n\n            function close(e) {\n                e.preventDefault();\n                form.destroy();\n                dialog.destroy();\n\n                dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n                if (!applied) {\n                    that.releaseRange(range);\n                }\n            }\n\n            function keyDown(e) {\n                if (e.keyCode == keys.ENTER) {\n                    apply(e);\n                } else if (e.keyCode == keys.ESC) {\n                    close(e);\n                }\n            }\n\n            dialogOptions.close = close;\n\n            if (showBrowser) {\n                dialogOptions.width = 750;\n            }\n            dialogOptions.minWidth = 350;\n\n            dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n\n            form = that._createForm(dialog, showBrowser);\n\n            dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n            dialog.wrapper\n            .find(\".k-dialog-insert\").on(\"click\", apply).end()\n            .find(\".k-dialog-close\").on(\"click\", close).end()\n            .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n            // IE < 8 returns absolute url if getAttribute is not used\n            .find(KEDITORIMAGEURL).val(img ? img.getAttribute(\"src\", 2) : \"http://\").end()\n            .find(KEDITORIMAGETITLE).val(img ? img.alt : \"\").end()\n            .find(KEDITORIMAGEWIDTH).val(imageWidth).end()\n            .find(KEDITORIMAGEHEIGHT).val(imageHeight).end();\n\n            var element = dialog.element;\n            if (showBrowser) {\n                this._imageBrowser = new kendo.ui.ImageBrowser(\n                    element.find(\".k-imagebrowser\"),\n                    extend({}, imageBrowser)\n                );\n\n                this._imageBrowser.bind(\"change\", function(ev) {\n                    if (ev.selected.get(\"type\") === \"f\") {\n                        element.find(KEDITORIMAGEURL).val(this.value());\n                    }\n                });\n\n                this._imageBrowser.bind(\"apply\", apply);\n            }\n\n            if (isIE) {\n                var dialogHeight = element.closest(\".k-window\").height();\n                element.css(\"max-height\", dialogHeight);\n            }\n            dialog.center().open();\n            element.find(KEDITORIMAGEURL).trigger(\"focus\").select();\n        },\n\n        _createForm: function(dialog, showBrowser) {\n            var that = this;\n            var formElement = $(\"<div/>\").appendTo(dialog.element);\n            var messages = that.editor.options.messages;\n            var form = formElement.kendoForm({\n                renderButtons: false,\n                items: [\n                    {\n                        field: \"k-editor-image-url\",\n                        label: encode(messages.imageWebAddress),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-image-title\",\n                        label: encode(messages.imageAltText),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-image-width\",\n                        label: encode(messages.imageWidth),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-image-height\",\n                        label: encode(messages.imageHeight),\n                        editor: \"TextBox\"\n                    }\n                ]\n            }).data(\"kendoForm\");\n\n            if (showBrowser) {\n                formElement.prepend($('<div class=\"k-filebrowser k-imagebrowser\"></div>'));\n            }\n\n            dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"image-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n            return form;\n        }\n\n    });\n\n    kendo.ui.editor.ImageCommand = ImageCommand;\n\n    registerTool(\"insertImage\", new Editor.Tool({ command: ImageCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        Command = Editor.Command,\n        Tool = Editor.Tool,\n        registerTool = EditorUtils.registerTool,\n        loadingOverlay = '<div contenteditable=\"false\" class=\"k-loading-mask\" style=\"width: 100%; height: 100%; position: absolute; top: 0px; left: 0px;\"><div class=\"k-loading-image\"></div><div class=\"k-loading-color\"></div></div>';\n\n    var ImportCommand = Command.extend({\n        exec: function() {\n            (this.editor._uploadWidget || this._initializeUploadWidget()).element.click();\n        },\n\n        _initializeUploadWidget: function() {\n            var cmd = this;\n            var editor = cmd.editor;\n            var importOptions = editor.options[\"import\"];\n            var upload = $('<input id=\"editorImport\" name=\"files\" type=\"file\" />').kendoUpload({\n                success: cmd._onUploadSuccess.bind(cmd),\n                progress: cmd._onUploadProgress.bind(cmd),\n                select: cmd._onUploadSelect.bind(cmd),\n                error: cmd._onUploadError.bind(cmd),\n                complete: cmd._onUploadComplete.bind(cmd),\n                showFileList: false,\n                multiple: false,\n                async: {\n                    saveUrl: importOptions.proxyURL,\n                    autoUpload: true,\n                    saveField: \"file\"\n                },\n                validation: {\n                    allowedExtensions: importOptions.allowedExtensions,\n                    maxFileSize: importOptions.maxFileSize\n                }\n            }).getKendoUpload();\n\n            editor._uploadWidget = upload;\n\n            return upload;\n        },\n        _onUploadComplete: function(ev) {\n            this._trigger(\"complete\", ev);\n            ev.sender.clearAllFiles();\n\n            this._removeLoadingOverlay();\n        },\n        _onUploadSuccess: function(ev) {\n            this.editor.value(ev.response.html.replace(/<\\/?body>/ig, \"\"));\n            this._trigger(\"success\", ev);\n        },\n        _onUploadProgress: function(ev) {\n            this._trigger(\"progress\", ev);\n        },\n        _onUploadSelect: function(ev) {\n            this._trigger(\"select\", ev);\n            if (!ev.files[0].validationErrors) {\n                this._initLoadingOverlay();\n            }\n        },\n        _onUploadError: function(ev) {\n            this._trigger(\"error\", ev);\n        },\n\n        _trigger: function(eventType, uploadEvent) {\n            var editor = this.editor;\n            var importOptions = editor.options[\"import\"];\n            if (typeof importOptions[eventType] === \"function\") {\n                importOptions[eventType].call(editor, uploadEvent);\n            }\n        },\n\n        _initLoadingOverlay: function() {\n            var editable = this.editor.body;\n            if (Editor.Dom.is(editable, \"body\")) {\n                this._iframeWrapper = this._container =\n                    this.editor.wrapper.find(\"iframe\").parent()\n                    .css({ position: \"relative\" }).append(loadingOverlay);\n            } else {\n                this._container = $(editable).append(loadingOverlay);\n            }\n\n            kendo.ui.progress(this._container, true);\n        },\n\n        _removeLoadingOverlay: function() {\n            kendo.ui.progress(this._container, false);\n            $(this._iframeWrapper).css({\n                position: \"\"\n            });\n\n            delete this._container;\n            delete this._iframeWrapper;\n        }\n    });\n\n    extend(Editor, {\n        ImportCommand: ImportCommand\n    });\n\n    registerTool(\"import\", new Tool({\n        command: ImportCommand,\n        ui: {\n            showText: \"both\"\n        }\n    }));\n\n    }(window.kendo.jQuery));\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            editorNS = kendo.ui.editor,\n            Command = editorNS.Command,\n            GenericCommand = editorNS.GenericCommand,\n            EditorUtils = editorNS.EditorUtils,\n            registerTool = EditorUtils.registerTool,\n            Tool = editorNS.Tool,\n            RestorePoint = editorNS.RestorePoint,\n            extend = $.extend;\n\n    var InsertHtmlCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n\n            this.managesUndoRedo = true;\n        },\n\n        exec: function() {\n            var editor = this.editor;\n            var options = this.options;\n            var range = options.range;\n            var body = editor.body;\n            var startRestorePoint = new RestorePoint(range, body);\n            var html = options.html || options.value || '';\n\n            editor.selectRange(range);\n\n            editor.clipboard.paste(html, options);\n\n            if (options.postProcess) {\n                options.postProcess(editor, editor.getRange());\n            }\n\n            var genericCommand = new GenericCommand(startRestorePoint, new RestorePoint(editor.getRange(), body));\n            genericCommand.editor = editor;\n            editor.undoRedoStack.push(genericCommand);\n\n            editor.focus();\n        }\n    });\n\n    var InsertHtmlTool = Tool.extend({\n        initialize: function(ui, editor) {\n            var options = this.options,\n                dataSource = options.items ? options.items : editor.options.insertHtml,\n                component = ui.getKendoDropDownList();\n\n            if (!component) {\n                return;\n            }\n\n            component.one(\"open\", () => {\n                var optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n                if (optionLabel.length) {\n                    optionLabel.remove();\n                }\n            });\n\n            component.setOptions({\n                dataSource: dataSource,\n                optionLabel: editor.options.messages.insertHtml\n            });\n            component.bind(\"change\", () => {\n                Tool.exec(editor, 'insertHtml', component.value());\n            });\n        },\n\n        command: function(commandArguments) {\n            return new InsertHtmlCommand(commandArguments);\n        },\n\n        update: function(ui) {\n            var component = ui.data(\"kendoDropDownList\");\n            component.close();\n            component.value(null);\n        }\n    });\n\n    extend(editorNS, {\n        InsertHtmlCommand: InsertHtmlCommand,\n        InsertHtmlTool: InsertHtmlTool\n    });\n\n    registerTool(\"insertHtml\", new InsertHtmlTool({\n        ui: {\n            initialValue: \"Insert HTML\",\n            type: \"component\",\n            component: \"DropDownList\",\n            componentOptions: {\n                dataTextField: \"text\",\n                dataValueField: \"value\",\n                autoSize: true,\n                highlightFirst: false\n            },\n            overflow: \"never\"\n        }\n    }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        Command = Editor.Command,\n        Tool = Editor.Tool,\n        registerTool = EditorUtils.registerTool,\n        defaultExportAsItems = [\n            { text: 'Docx', value: 'docx' },\n            { text: 'Rtf', value: 'rtf' },\n            { text: 'Pdf', value: 'pdf' },\n            { text: 'Html', value: 'html' },\n            { text: 'Plain Text', value: 'txt' }\n        ];\n\n    var ExportAsCommand = Command.extend({\n        init: function(options) {\n            var cmd = this;\n            cmd.options = options;\n            Command.fn.init.call(cmd, options);\n            cmd.attributes = null;\n            cmd.exportType = options.exportType;\n        },\n\n        exec: function() {\n            var cmd = this;\n            var range = this.lockRange(true);\n            cmd.postToProxy();\n            cmd.releaseRange(range);\n        },\n\n        postToProxy: function() {\n            this.generateForm().appendTo('body').submit().remove();\n        },\n\n        generateForm: function() {\n            var cmd = this;\n            var exportAsOptions = cmd.editor.options.exportAs;\n            var form = $('<form>').attr({\n                action: exportAsOptions && exportAsOptions.proxyURL || \"\",\n                method: 'POST'\n            });\n\n            form.append([\n                cmd.valueInput(),\n                cmd.exportTypeInput(),\n                cmd.fileNameInput(),\n                cmd.antiForgeryInput()\n            ]);\n\n            return form;\n        },\n\n        valueInput: function() {\n            var editor = this.editor;\n            return $('<input>').attr({\n                value: editor.encodedValue(),\n                name: 'value',\n                type: 'hidden'\n            });\n        },\n\n        exportTypeInput: function() {\n            var cmd = this;\n            return $('<input>').attr({\n                value: cmd.exportType,\n                name: 'exportType',\n                type: 'hidden'\n            });\n\n        },\n\n        fileNameInput: function() {\n            var editor = this.editor;\n            var exportAsOptions = editor.options.exportAs;\n            var fileName = exportAsOptions && exportAsOptions.fileName || editor.element.attr(\"id\") || \"editor\";\n            return $('<input>').attr({\n                value: fileName,\n                name: 'fileName',\n                type: 'hidden'\n            });\n        },\n\n        antiForgeryInput: function() {\n            var csrf_param = $(\"meta[name=csrf-param],meta[name=_csrf_header]\").attr(\"content\");\n\n            return $(\"input[name^='__RequestVerificationToken']\").clone()\n                        .add($(\"input[name^='\" + csrf_param + \"']\").clone());\n        }\n    });\n\n    var ExportAsTool = Tool.extend({\n        init: function(options) {\n            var tool = this;\n            Tool.fn.init.call(tool, kendo.deepExtend({}, tool.options, options));\n            tool.type = 'kendoDropDownList';\n        },\n\n        options: {\n            items: defaultExportAsItems\n        },\n\n        command: function(args) {\n            var value = args.value;\n            return new Editor.ExportAsCommand({\n                range: args.range,\n                exportType: value.exportType\n            });\n        },\n\n        initialize: function(ui, editor) {\n            var tool = this,\n                component = ui.getKendoDropDownList();\n\n            tool.editor = editor;\n\n            component.bind(\"change\", this.changeHandler.bind(this));\n        },\n\n        changeHandler: function(e) {\n            this._exec(e.sender.value());\n            e.sender.value(null);\n            e.sender.wrapper.find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n        },\n\n        update: function(ui, editor) {\n            var component = ui.data(\"kendoDropDownList\");\n\n            component.close();\n            component.value(null);\n            ui.closest(\".k-dropdownlist\").find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n        },\n\n        _exec: function(value) {\n            if (value) {\n                Tool.exec(this.editor, this.options.name, { exportType: value } );\n            }\n        },\n\n        destroy: function() {\n            this._ancestor = null;\n        }\n    });\n\n    extend(Editor, {\n        ExportAsTool: ExportAsTool,\n        ExportAsCommand: ExportAsCommand\n    });\n\n    registerTool('exportAs', new ExportAsTool({\n        ui: {\n            type: \"component\",\n            overflow: \"never\",\n            component: \"DropDownList\",\n            componentOptions: {\n                dataTextField: \"text\",\n                dataValueField: \"value\",\n                valuePrimitive: true,\n                value: null,\n                width: \"140px\",\n                highlightFirst: false,\n                autoWidth: true,\n                itemTemplate: (data) => `<span class=\\\"k-link k-menu-link\\\" data-value=\\\"${data.value}\\\">${data.text}</strong></span>`,\n                icon: \"export\",\n                valueTemplate: () => `<span class=\"k-editor-export\">${kendo.ui.icon({ icon: \"export\", iconClass: \"k-button-icon\" })}<span class=\"k-export-tool-text\"></span></span>`\n            }\n        }\n    }));\n\n    }(window.kendo.jQuery));\n\n    (function($, undefined$1) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        dom = Editor.Dom,\n        EditorUtils = Editor.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        Command = Editor.Command,\n        Tool = Editor.Tool,\n        RangeUtils = Editor.RangeUtils,\n        blockElements = dom.blockElements,\n        BlockFormatFinder = Editor.BlockFormatFinder,\n        BlockFormatter = Editor.BlockFormatter;\n\n    function indent(node, value) {\n        var isRtl = $(node).css(\"direction\") == \"rtl\",\n            indentDirection = isRtl ? \"Right\" : \"Left\",\n            property = dom.name(node) != \"td\" ? \"margin\" + indentDirection : \"padding\" + indentDirection;\n        if (value === undefined$1) {\n            return node.style[property] || 0;\n        } else {\n            if (value > 0) {\n                node.style[property] = value + \"px\";\n            } else {\n                node.style[property] = \"\";\n\n                if (!node.style.cssText) {\n                    node.removeAttribute(\"style\");\n                }\n            }\n        }\n    }\n\n    var IndentFormatter = Class.extend({\n        init: function() {\n            this.finder = new BlockFormatFinder([{ tags: dom.blockElements }]);\n        },\n\n        apply: function(nodes) {\n            nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n            var formatNodes = this.finder.findSuitable(nodes),\n                targets = [],\n                i, len, formatNode, parentList, sibling;\n\n            formatNodes = this.mapImmutables(formatNodes);\n\n            if (formatNodes.length) {\n                for (i = 0, len = formatNodes.length; i < len; i++) {\n                    if (dom.is(formatNodes[i], \"li\")) {\n                        if (!$(formatNodes[i]).index()) {\n                            targets.push(formatNodes[i].parentNode);\n                        } else if ($.inArray(formatNodes[i].parentNode, targets) < 0) {\n                            targets.push(formatNodes[i]);\n                        }\n                    } else {\n                        targets.push(formatNodes[i]);\n                    }\n                }\n\n                while (targets.length) {\n                    formatNode = targets.shift();\n                    if (dom.is(formatNode, \"li\")) {\n                        parentList = formatNode.parentNode;\n                        sibling = $(formatNode).prev(\"li\");\n                        var siblingList = sibling.find(\"ul,ol\").last();\n\n                        var nestedList = $(formatNode).children(\"ul,ol\")[0];\n\n                        if (nestedList && sibling[0]) {\n                            if (siblingList[0]) {\n                               siblingList.append(formatNode);\n                               siblingList.append($(nestedList).children());\n                               dom.remove(nestedList);\n                            } else {\n                                sibling.append(nestedList);\n                                nestedList.insertBefore(formatNode, nestedList.firstChild);\n                            }\n                        } else {\n                            nestedList = sibling.children(\"ul,ol\")[0];\n                            if (!nestedList) {\n                                nestedList = dom.create(formatNode.ownerDocument, dom.name(parentList), this.getListTypeAttr(parentList));\n                                sibling.append(nestedList);\n                            }\n\n                            while (formatNode && formatNode.parentNode == parentList) {\n                                nestedList.appendChild(formatNode);\n                                formatNode = targets.shift();\n                            }\n                        }\n                    } else {\n                        var marginLeft = parseInt(indent(formatNode), 10) + 30;\n                        indent(formatNode, marginLeft);\n\n                        for (var targetIndex = 0; targetIndex < targets.length; targetIndex++) {\n                            if ($.contains(formatNode, targets[targetIndex])) {\n                                targets.splice(targetIndex, 1);\n                            }\n                        }\n                    }\n                }\n            } else {\n                var formatter = new BlockFormatter([{ tags: [\"p\"] }], { style: { marginLeft: 30 } });\n\n                formatter.apply(nodes);\n            }\n        },\n\n        getListTypeAttr: function(list) {\n            var type = list.getAttribute(\"type\");\n            var styleType = list.style.listStyleType;\n\n            return type ? { type: type } : { style: { listStyleType: styleType } };\n        },\n\n        mapImmutables: function(nodes) {\n            if (!this.immutables) {\n                return nodes;\n            } else {\n                var immutables = [];\n                return $.map(nodes, function(node) {\n                    var immutable = Editor.Immutables.immutableParent(node);\n                    if (immutable) {\n                        if ($.inArray(immutable, immutables) === -1) {\n                            immutables.push(immutable);\n                        } else {\n                            return null;\n                        }\n                    }\n                    return immutable || node;\n                });\n            }\n        },\n\n        remove: function(nodes) {\n            nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n            var formatNodes = this.finder.findSuitable(nodes),\n                targetNode, i, len, list, listParent, siblings,\n                formatNode, marginLeft;\n\n            formatNodes = this.mapImmutables(formatNodes);\n\n            for (i = 0, len = formatNodes.length; i < len; i++) {\n                formatNode = $(formatNodes[i]);\n\n                if (formatNode.is(\"li\")) {\n                    list = formatNode.parent();\n                    listParent = list.parent();\n                    // listParent will be ul or ol in case of invalid dom - <ul><li></li><ul><li></li></ul></ul>\n                    if (listParent.is(\"li,ul,ol\") && !indent(list[0])) {\n                        // skip already processed nodes\n                        if (targetNode && $.contains(targetNode, listParent[0])) {\n                            continue;\n                        }\n\n                        siblings = formatNode.nextAll(\"li\");\n                        if (siblings.length) {\n                            $(list[0].cloneNode(false)).appendTo(formatNode).append(siblings);\n                        }\n\n                        if (listParent.is(\"li\")) {\n                            formatNode.insertAfter(listParent);\n                        } else {\n                            formatNode.appendTo(listParent);\n                        }\n\n                        if (!list.children(\"li\").length) {\n                            list.remove();\n                        }\n\n                        continue;\n                    } else {\n                        if (targetNode == list[0]) {\n                            // removing format on sibling LI elements\n                            continue;\n                        }\n                        targetNode = list[0];\n                    }\n                } else {\n                    targetNode = formatNodes[i];\n                }\n\n                marginLeft = parseInt(indent(targetNode), 10) - 30;\n                indent(targetNode, marginLeft);\n            }\n        }\n\n    });\n\n    var IndentCommand = Command.extend({\n        init: function(options) {\n            var that = this;\n            options.formatter = /** @ignore */ {\n                toggle: (function(range) {\n                    var indentFormatter = new IndentFormatter();\n                    indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                    indentFormatter.apply(RangeUtils.nodes(range));\n                }).bind(that)\n            };\n            Command.fn.init.call(this, options);\n        }\n    });\n\n    var OutdentCommand = Command.extend({\n        init: function(options) {\n            var that = this;\n            options.formatter = {\n                toggle: (function(range) {\n                    var indentFormatter = new IndentFormatter();\n                    indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                    indentFormatter.remove(RangeUtils.nodes(range));\n                }).bind(that)\n            };\n            Command.fn.init.call(this, options);\n        }\n    });\n\n    var OutdentTool = Tool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n\n            this.finder = new BlockFormatFinder([{ tags: blockElements }]);\n        },\n\n        initialize: function(ui, editor) {\n            $.extend(this.options, {\n                immutables: editor && editor.options.immutables\n            });\n        },\n\n        update: function(ui, nodes) {\n            var suitableNodes = this.finder.findSuitable(nodes),\n                toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\"),\n                isOutdentable, listParentsCount, i, len, suitable, immutableParent;\n\n            for (i = 0, len = suitableNodes.length; i < len; i++) {\n                suitable = suitableNodes[i];\n\n                if (this.options.immutables) {\n                    immutableParent = Editor.Immutables.immutableParent(suitable);\n\n                    if (immutableParent) {\n                        suitable = immutableParent;\n                    }\n                }\n\n                isOutdentable = indent(suitable);\n\n                if (!isOutdentable) {\n                    listParentsCount = $(suitable).parents(\"ul,ol\").length;\n                    isOutdentable = (dom.is(suitable, \"li\") && (listParentsCount > 1 || indent(suitable.parentNode))) ||\n                                    (dom.ofType(suitable, [\"ul\",\"ol\"]) && listParentsCount > 0);\n                }\n\n                if (isOutdentable) {\n                    toolbar.enable(ui, true);\n                    return;\n                }\n            }\n\n            toolbar.enable(ui, false);\n        }\n    });\n\n    extend(Editor, {\n        IndentFormatter: IndentFormatter,\n        IndentCommand: IndentCommand,\n        OutdentCommand: OutdentCommand,\n        OutdentTool: OutdentTool\n    });\n\n    registerTool(\"indent\", new Tool({ command: IndentCommand }));\n    registerTool(\"outdent\", new OutdentTool({ command: OutdentCommand, ui: { enable: false } }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        extend = $.extend,\n        editorNS = kendo.ui.editor,\n        dom = editorNS.Dom,\n        Command = editorNS.Command,\n        Tool = editorNS.Tool,\n        BlockFormatter = editorNS.BlockFormatter,\n        normalize = dom.normalize,\n        RangeUtils = editorNS.RangeUtils,\n        registerTool = editorNS.EditorUtils.registerTool;\n\n    var ParagraphCommand = Command.extend({\n        init: function(options) {\n            this.options = options;\n            Command.fn.init.call(this, options);\n        },\n\n        _insertMarker: function(doc, range) {\n            var marker = dom.create(doc, 'a'), container;\n            marker.className = \"k-marker\";\n\n            range.insertNode(marker);\n\n            if (!marker.parentNode) {\n                // inserting paragraph in Firefox full body range\n                container = range.commonAncestorContainer;\n                container.innerHTML = \"\";\n                container.appendChild(marker);\n            }\n\n            normalize(marker.parentNode);\n\n            return marker;\n        },\n\n        _moveFocus: function(range, candidate) {\n            if (dom.isEmpty(candidate)) {\n                range.setStartBefore(candidate);\n            } else {\n                range.selectNodeContents(candidate);\n\n                var focusNode = RangeUtils.textNodes(range)[0];\n\n                if (!focusNode) {\n                    while (candidate.childNodes.length && !dom.is(candidate.firstChild, \"br\")) {\n                        candidate = candidate.firstChild;\n                    }\n\n                    focusNode = candidate;\n                }\n\n                if (dom.isEmpty(focusNode)) {\n                    range.setStartBefore(focusNode);\n                } else {\n                    if (dom.emptyNode(focusNode)) {\n                        focusNode.innerHTML = \"\\ufeff\";\n                    }\n                    var startNode = focusNode.firstChild || focusNode;\n                    if (dom.isDataNode(startNode)) {\n                        range.setStart(startNode, 0);\n                    } else {\n                        range.setStartBefore(startNode);\n                    }\n                }\n            }\n        },\n\n        shouldTrim: function(range) {\n            var blocks = 'p,h1,h2,h3,h4,h5,h6'.split(','),\n                startInBlock = dom.parentOfType(range.startContainer, blocks),\n                endInBlock = dom.parentOfType(range.endContainer, blocks);\n            return (startInBlock && !endInBlock) || (!startInBlock && endInBlock);\n        },\n\n        _blankAfter: function(node) {\n            while (node && (dom.isMarker(node) || dom.stripBom(node.nodeValue) === \"\")) {\n                node = node.nextSibling;\n            }\n\n            return !node;\n        },\n\n        exec: function() {\n            var range = this.getRange(),\n                doc = RangeUtils.documentFromRange(range),\n                parent, previous, next,\n                emptyParagraphContent = editorNS.emptyElementContent,\n                paragraph, marker, li, heading, tableNode, rng,\n                shouldTrim;\n\n            this.expandImmutablesIn(range);\n\n            shouldTrim = this.shouldTrim(range);\n\n            range.deleteContents();\n            marker = this._insertMarker(doc, range);\n\n            dom.stripBomNode(marker.previousSibling);\n            dom.stripBomNode(marker.nextSibling);\n\n            li = dom.closestEditableOfType(marker, ['li']);\n            heading = dom.closestEditableOfType(marker, 'h1,h2,h3,h4,h5,h6'.split(','));\n            tableNode = dom.is(marker.parentNode, 'table') && marker.parentNode;\n\n            if (li) {\n                // hitting 'enter' in empty li\n                if (dom.emptyNode(li)) {\n                    paragraph = dom.create(doc, 'p');\n\n                    if (dom.next(li)) {\n                        rng = range.cloneRange();\n                        rng.selectNode(li);\n\n                        RangeUtils.split(rng, li.parentNode);\n                    }\n\n                    var br = $(\"br\", li);\n                    if (br.length == 1) {\n                        br.remove();\n                    }\n\n                    var parentNode = li.parentNode;\n                    var parentChildrenLength = li.parentNode.children.length;\n                    var firstChild = parentChildrenLength > 1 && li.childNodes.length == 1 && li.children[0];\n\n                    dom.insertAfter(paragraph, parentNode);\n                    dom.remove(parentChildrenLength == 1 ? li.parentNode : li);\n\n                    if (firstChild && firstChild !== marker) {\n                        paragraph.appendChild(firstChild);\n                        paragraph.appendChild(marker);\n                    } else {\n                        paragraph.innerHTML = emptyParagraphContent;\n                    }\n                    next = paragraph;\n                }\n            } else if (heading && this._blankAfter(marker)) {\n                paragraph = this._insertParagraphAfter(heading);\n                dom.remove(marker);\n                next = paragraph;\n            } else if (tableNode) {\n                paragraph = this._insertParagraphAfter(tableNode);\n                dom.remove(marker);\n                next = paragraph;\n            }\n\n            if (!next) {\n                if (!(li || heading)) {\n                    new BlockFormatter([{ tags: ['p'] }]).apply([marker]);\n                }\n\n                range.selectNode(marker);\n\n                parent = dom.parentOfType(marker, [li ? 'li' : heading ? dom.name(heading) : 'p']);\n\n                RangeUtils.split(range, parent, shouldTrim);\n\n                previous = parent.previousSibling;\n\n                if (dom.is(previous, 'li') && previous.firstChild && !dom.is(previous.firstChild, 'br')) {\n                    previous = previous.firstChild;\n                }\n\n                next = parent.nextSibling;\n\n                this.clean(previous, { links: true });\n                this.clean(next, { links: true });\n\n                if (dom.is(next, 'li') && next.firstChild && !dom.is(next.firstChild, 'br')) {\n                    next = next.firstChild;\n                }\n\n                dom.remove(parent);\n\n                // normalize updates the caret display in Gecko\n                normalize(previous);\n            }\n\n            normalize(next);\n\n            this._moveFocus(range, next);\n\n            range.collapse(true);\n\n            dom.scrollTo(next, true);\n\n            RangeUtils.selectRange(range);\n        },\n\n        _insertParagraphAfter: function(node) {\n            var range = this.getRange();\n            var doc = RangeUtils.documentFromRange(range);\n            var emptyElementContent = editorNS.emptyElementContent;\n            var paragraph = dom.create(doc, 'p');\n\n            dom.insertAfter(paragraph, node);\n            paragraph.innerHTML = emptyElementContent;\n\n            return paragraph;\n        },\n\n        clean: function(node, options) {\n            var root = node;\n\n            if (node.firstChild && dom.is(node.firstChild, 'br')) {\n                dom.remove(node.firstChild);\n            }\n\n            if (dom.isDataNode(node) && !node.nodeValue) {\n                node = node.parentNode;\n            }\n\n            if (node) {\n                var siblings = false;\n                while (node.firstChild && node.firstChild.nodeType == 1) {\n                    siblings = siblings || (dom.significantNodes(node.childNodes).length > 1);\n                    node = node.firstChild;\n                }\n\n                if (!dom.isEmpty(node) && node.className != \"k-br\" && /^\\s*$/.test(node.innerHTML) && !siblings) {\n                    $(root).find(\".k-br\").remove();\n                    node.innerHTML = editorNS.emptyElementContent;\n                }\n\n                if (options && options.links) {\n                    while (node != root) {\n                        if (dom.is(node, \"a\") && dom.emptyNode(node)) {\n                            dom.unwrap(node);\n                            break;\n                        }\n                        node = node.parentNode;\n                    }\n                }\n            }\n        }\n    });\n\n    var NewLineCommand = Command.extend({\n        init: function(options) {\n            this.options = options;\n            Command.fn.init.call(this, options);\n        },\n\n        exec: function() {\n            var range = this.getRange();\n            this.expandImmutablesIn(range);\n\n            var br = dom.create(RangeUtils.documentFromRange(range), 'br');\n            var node = range.startContainer;\n            var filler;\n            var browser = kendo.support.browser;\n            var oldIE = browser.msie && browser.version < 11;\n            var tableNode = dom.is(node, 'table') && node;\n            var kbrParent;\n\n            range.deleteContents();\n            if (tableNode) {\n                dom.insertAfter(br, tableNode);\n            } else {\n                kbrParent = $(node).closest('.k-br');\n                range.insertNode(br);\n\n                if (kbrParent.length) {\n                    // pressing enter in an k-br node\n                    dom.unwrap(kbrParent[0]);\n                }\n            }\n\n            normalize(br.parentNode);\n\n            if (!oldIE && (!br.nextSibling || dom.isWhitespace(br.nextSibling))) {\n                // Gecko and WebKit cannot put the caret after only one br.\n                if (!!br.nextSibling && dom.isWhitespace(br.nextSibling)) {\n                    $(br.nextSibling).remove();\n                }\n                filler = br.cloneNode(true);\n                filler.className = 'k-br';\n                dom.insertAfter(filler, br);\n            }\n\n            range.setStartAfter(br);\n            range.collapse(true);\n\n            dom.scrollTo(br.nextSibling || br, true);\n\n            RangeUtils.selectRange(range);\n        }\n    });\n\n    extend(editorNS, {\n        ParagraphCommand: ParagraphCommand,\n        NewLineCommand: NewLineCommand\n    });\n\n    registerTool(\"insertLineBreak\", new Tool({ key: 13, shift: true, command: NewLineCommand }));\n    registerTool(\"insertParagraph\", new Tool({ key: 13, command: ParagraphCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        dom = Editor.Dom,\n        registerTool = EditorUtils.registerTool,\n        RangeUtils = Editor.RangeUtils,\n        Command = Editor.Command,\n        LinkFormatter = Editor.LinkFormatter,\n        textNodes = RangeUtils.textNodes,\n        keys = kendo.keys,\n        KEDITORFILEURL = \"#k-editor-file-url\",\n        KEDITORFILETEXT = \"#k-editor-file-text\",\n        KEDITORFILETITLE = \"#k-editor-file-title\";\n\n    var FileCommand = Command.extend({\n        init: function(options) {\n            var that = this;\n            Command.fn.init.call(that, options);\n\n            that.formatter = new LinkFormatter();\n\n            that.async = true;\n            that.attributes = {};\n        },\n\n        insertFile: function(file, range) {\n            var attributes = this.attributes;\n            var doc = RangeUtils.documentFromRange(range);\n\n            if (attributes.href && attributes.href != \"http://\") {\n\n                if (!file) {\n                    file = dom.create(doc, \"a\", { href: attributes.href });\n                    file.innerHTML = attributes.innerHTML;\n                    file.title = attributes.title;\n\n                    range.deleteContents();\n                    range.insertNode(file);\n\n                    if (!file.nextSibling) {\n                        dom.insertAfter(doc.createTextNode(\"\\ufeff\"), file);\n                    }\n\n                    range.setStartAfter(file);\n                    range.setEndAfter(file);\n                    RangeUtils.selectRange(range);\n                    return true;\n                } else {\n                    dom.attr(file, attributes);\n                }\n            }\n\n            return false;\n        },\n\n        redo: function() {\n            var that = this,\n                range = that.lockRange();\n\n            this.formatter.apply(range, this.attributes);\n            that.releaseRange(range);\n        },\n\n        exec: function() {\n            var that = this,\n                range = that.lockRange(),\n                nodes = textNodes(range),\n                applied = false,\n                file = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null,\n                dialog,\n                form,\n                isIE = kendo.support.browser.msie,\n                options = that.editor.options,\n                messages = options.messages,\n                fileBrowser = options.fileBrowser,\n                showBrowser = !!(kendo.ui.FileBrowser && fileBrowser && fileBrowser.transport && fileBrowser.transport.read !== undefined$1),\n                dialogOptions = {\n                    title: messages.insertFile,\n                    visible: false,\n                    resizable: showBrowser\n                };\n\n            this.expandImmutablesIn(range);\n\n            function apply(e) {\n                var element = dialog.element,\n                    href = element.find(KEDITORFILEURL).val().replace(/ /g, \"%20\"),\n                    innerHTML = element.find(KEDITORFILETEXT).val(),\n                    title = element.find(KEDITORFILETITLE).val();\n\n                that.attributes = {\n                    href: href,\n                    innerHTML: innerHTML !== \"\" ? innerHTML : href,\n                    title: title\n                };\n\n                applied = that.insertFile(file, range);\n\n                close(e);\n\n                if (that.change) {\n                    that.change();\n                }\n            }\n\n            function close(e) {\n                e.preventDefault();\n                form.destroy();\n                dialog.destroy();\n\n                dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n                if (!applied) {\n                    that.releaseRange(range);\n                }\n            }\n\n            function keyDown(e) {\n                if (e.keyCode == keys.ENTER) {\n                    apply(e);\n                } else if (e.keyCode == keys.ESC) {\n                    close(e);\n                }\n            }\n\n            dialogOptions.close = close;\n\n            if (showBrowser) {\n                dialogOptions.width = 750;\n            }\n            dialogOptions.minWidth = 350;\n\n            dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n            form = that._createForm(dialog, showBrowser);\n\n            dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n            dialog.wrapper\n            .find(\".k-dialog-insert\").on(\"click\", apply).end()\n            .find(\".k-dialog-close\").on(\"click\", close).end()\n            .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n            // IE < 8 returns absolute url if getAttribute is not used\n            .find(KEDITORFILEURL).val(file ? file.getAttribute(\"href\", 2) : \"http://\").end()\n            .find(KEDITORFILETEXT).val(file ? file.innerText : \"\").end()\n            .find(KEDITORFILETITLE).val(file ? file.title : \"\").end();\n\n            var element = dialog.element;\n            if (showBrowser) {\n                that._fileBrowser = new kendo.ui.FileBrowser(\n                    element.find(\".k-filebrowser\"),\n                    extend({}, fileBrowser)\n                );\n\n                that._fileBrowser.bind(\"change\", function(ev) {\n                    if (ev.selected.get(\"type\") === \"f\") {\n                        element.find(KEDITORFILEURL).val(this.value());\n                    }\n                } );\n\n                that._fileBrowser.bind(\"apply\", apply);\n            }\n\n            if (isIE) {\n                var dialogHeight = element.closest(\".k-window\").height();\n                element.css(\"max-height\", dialogHeight);\n            }\n            dialog.center().open();\n            element.find(KEDITORFILEURL).trigger(\"focus\").select();\n        },\n\n        _createForm: function(dialog, showBrowser) {\n            var that = this;\n            var formElement = $(\"<div/>\").appendTo(dialog.element);\n            var messages = that.editor.options.messages;\n\n            var form = formElement.kendoForm({\n                renderButtons: false,\n                items: [\n                    {\n                        field: \"k-editor-file-url\",\n                        label: encode(messages.fileWebAddress),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-file-text\",\n                        label: encode(messages.fileText),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-file-title\",\n                        label: encode(messages.fileTitle),\n                        editor: \"TextBox\"\n                    }\n                ]\n            }).data(\"kendoForm\");\n\n            if (showBrowser) {\n                formElement.prepend($('<div class=\"k-filebrowser\"></div>'));\n            }\n\n            dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"file-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n            return form;\n        }\n\n    });\n\n    kendo.ui.editor.FileCommand = FileCommand;\n\n    registerTool(\"insertFile\", new Editor.Tool({ command: FileCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        dom = Editor.Dom,\n        RangeUtils = Editor.RangeUtils,\n        Command = Editor.Command,\n\n        NS = \"kendoEditor\",\n        ACTIVESTATE = \"k-active\",\n        SELECTEDSTATE = \"k-selected\",\n        SCOPE = \"scope\",\n        ROW = \"row\",\n        COL = \"col\",\n        ROWGROUP = \"rowgroup\",\n        COLGROUP = \"colgroup\",\n        COLSPAN = \"colspan\",\n        ROWSPAN = \"rowspan\",\n        TABLE = \"table\",\n        THEAD = \"thead\",\n        TBODY = \"tbody\",\n        TR = \"tr\",\n        TD = \"td\",\n        TH = \"th\",\n\n        Tool = Editor.Tool,\n        InsertHtmlCommand = Editor.InsertHtmlCommand,\n        BlockFormatFinder = Editor.BlockFormatFinder,\n        BlockFormatTool = Editor.BlockFormatTool,\n        FormatCommand = Editor.FormatCommand,\n        registerTool = Editor.EditorUtils.registerTool,\n        registerFormat = Editor.EditorUtils.registerFormat,\n        formats = kendo.ui.Editor.fn.options.formats,\n        getTouches = kendo.getTouches;\n    var template = kendo.template;\n\n    var columnTemplate = ({ width, content }) => `<td style=\"width:${width}%;\">${content}</td>`;\n\n    var tableFormatFinder = new BlockFormatFinder([{ tags: [TABLE] }]);\n\n    var TableCommand = InsertHtmlCommand.extend({\n        init: function(options) {\n            var o = $.extend({\n                postProcess: this.postProcess,\n                skipCleaners: true\n            }, options || {});\n\n            InsertHtmlCommand.fn.init.call(this, o);\n        },\n        _tableHtml: function(rows, columns) {\n            rows = rows || 1;\n            columns = columns || 1;\n            var columnHtml = template(columnTemplate)({ width: 100 / columns, content: Editor.emptyTableCellContent });\n            var rowHeight = 100 / rows;\n\n            return \"<table class='k-table' data-last>\" +\n                        new Array(rows + 1).join(\n                        \"<tr style='height:\" + rowHeight + \"%;'>\" +\n                            new Array(columns + 1).join(columnHtml) +\n                        \"</tr>\") +\n                   \"</table>\";\n        },\n\n        postProcess: function(editor, range) {\n            var insertedTable = $(\"table[data-last]\", editor.document).removeAttr(\"data-last\");\n\n            range.setStart(insertedTable.find(TD)[0], 0);\n            range.collapse(true);\n\n            editor.selectRange(range);\n        },\n\n        exec: function() {\n            var options = this.options;\n            options.html = this._tableHtml(options.rows, options.columns);\n\n            InsertHtmlCommand.fn.exec.call(this);\n        }\n    });\n\n    var PopupTool = Tool.extend({\n        initialize: function(ui, editor) {\n            var that = this;\n            var btn = $(\"<button>\" + editor.options.messages.tableWizard + \"</button>\");\n            var popup = $(this.options.popupTemplate).appendTo(\"body\").kendoPopup({\n                anchor: ui,\n                copyAnchorStyles: false,\n                open: this._open.bind(this),\n                activate: this._activate.bind(this),\n                close: this._close.bind(this)\n            }).data(\"kendoPopup\");\n\n            ui.on(\"click\", this._toggle.bind(this))\n              .on(\"keydown\", this._keydown.bind(this));\n\n            this._editor = editor;\n            this._popup = popup;\n\n            editor.tablePopup = this._popup;\n\n            var tableWizard = new Editor.TableWizardTool({\n                command: Editor.TableWizardCommand,\n                insertNewTable: true\n            });\n\n            registerTool(\"tableWizardInsert\", tableWizard);\n\n            btn.appendTo(popup.element);\n            btn.kendoButton({\n                icon: \"table-wizard\"\n            });\n\n            btn.on(\"click\", () => {\n                that._editor.exec(\"tableWizardInsert\");\n            });\n        },\n\n        popup: function() {\n            return this._popup;\n        },\n\n        _activate: $.noop,\n\n        _open: function() {\n            this._popup.options.anchor.addClass(ACTIVESTATE);\n        },\n\n        _close: function() {\n            this._popup.options.anchor.removeClass(ACTIVESTATE);\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                keys = kendo.keys,\n                key = e.keyCode;\n\n            if (key == keys.ESC) {\n                that._popup.close();\n            } else if (key == keys.DOWN && e.altKey) {\n                that._popup.open();\n                that._setTableSize({ row: 1, col: 1 });\n            } else if (key === keys.ENTER) {\n                setTimeout(() => {\n                    that._setTableSize({ row: 1, col: 1 });\n                });\n            }\n        },\n\n        _toggle: function(e) {\n            var button = $(e.target).closest(\".k-tool\");\n\n            if (!button.hasClass(\"k-disabled\")) {\n                this.popup().toggle();\n            }\n        },\n\n        update: function(ui) {\n            var popup = this.popup();\n\n            if (popup.wrapper && popup.wrapper.css(\"display\") == \"block\") {\n                popup.close();\n            }\n\n            ui.removeClass(\"k-hover\");\n        },\n\n        destroy: function() {\n            if (this._popup) {\n                this._popup.destroy();\n            }\n        }\n    });\n\n    var InsertTableTool = PopupTool.extend({\n        init: function(options) {\n            this.cols = 8;\n            this.rows = 6;\n\n            PopupTool.fn.init.call(this, $.extend(options, {\n                command: TableCommand,\n                popupTemplate:\n                    \"<div class='k-ct-popup'>\" +\n                        \"<div>\" +\n                            new Array(this.cols * this.rows + 1).join(\"<span class='k-ct-cell k-disabled'></span>\") +\n                        \"</div>\" +\n                        \"<div class='k-status'></div>\" +\n                    \"</div>\"\n            }));\n        },\n\n        _activate: function() {\n            var that = this,\n                element = that._popup.element,\n                cells = element.find(\".k-ct-cell\"),\n                firstCell = cells.eq(0),\n                lastCell = cells.eq(cells.length - 1),\n                start = kendo.getOffset(firstCell),\n                end = kendo.getOffset(lastCell),\n                cols = that.cols,\n                rows = that.rows,\n                cellWidth, cellHeight;\n\n            element.find(\"*\").addBack().attr(\"unselectable\", \"on\");\n\n            end.left += lastCell[0].offsetWidth;\n            end.top += lastCell[0].offsetHeight;\n\n            cellWidth = (end.left - start.left) / cols;\n            cellHeight = (end.top - start.top) / rows;\n\n            function tableFromLocation(e) {\n                var w = $(window);\n                return {\n                    row: Math.floor((e.clientY + w.scrollTop() - start.top) / cellHeight) + 1,\n                    col: Math.floor((e.clientX + w.scrollLeft() - start.left) / cellWidth) + 1\n                };\n            }\n\n            element.autoApplyNS(NS)\n                .on(\"mousemove\", \".k-ct-cell\", function(e) {\n                    that._setTableSize(tableFromLocation(e));\n                })\n                .on(\"mouseleave\", \".k-ct-cell\", function() {\n                    that._setTableSize();\n                })\n                .on(\"down\", \".k-ct-cell\", function(e) {\n                    e.preventDefault();\n                    var touch = getTouches(e)[0];\n                    that._exec(tableFromLocation(touch.location));\n                });\n        },\n\n        _valid: function(size) {\n            return size && size.row > 0 && size.col > 0 && size.row <= this.rows && size.col <= this.cols;\n        },\n\n        _exec: function(size) {\n            if (this._valid(size)) {\n                this._editor.exec(\"createTable\", {\n                    rows: size.row,\n                    columns: size.col\n                });\n                this._popup.close();\n            }\n        },\n\n        _setTableSize: function(size) {\n            var element = this._popup.element;\n            var status = element.find(\".k-status\");\n            var cells = element.find(\".k-ct-cell\");\n            var cols = this.cols;\n            var messages = this._editor.options.messages;\n\n            if (this._valid(size)) {\n                status.text(kendo.format(messages.createTableHint, size.row, size.col));\n\n                cells.each(function(i) {\n                    $(this).toggleClass(\n                        SELECTEDSTATE,\n                        i % cols < size.col && i / cols < size.row\n                    );\n                });\n            } else {\n                status.text(messages.createTable);\n                cells.removeClass(SELECTEDSTATE);\n            }\n        },\n\n        _keydown: function(e) {\n            var initiallyVisible = this._popup.visible();\n\n            PopupTool.fn._keydown.call(this, e);\n\n            if (!this._popup.visible()) {\n                return;\n            }\n\n            var keys = kendo.keys;\n            var key = e.keyCode;\n            var cells = this._popup.element.find(\".k-ct-cell\");\n            var focus = Math.max(cells.filter(\".k-selected\").last().index(), 0);\n            var selectedRows = Math.floor(focus / this.cols);\n            var selectedColumns = focus % this.cols;\n\n            var changed = false,\n                button;\n\n            if (key == keys.DOWN && !e.altKey) {\n                changed = true;\n                selectedRows++;\n            } else if (key == keys.UP) {\n                changed = true;\n                selectedRows--;\n            } else if (key == keys.RIGHT) {\n                changed = true;\n                selectedColumns++;\n            } else if (key == keys.LEFT) {\n                changed = true;\n                selectedColumns--;\n            } else if (key == keys.TAB) {\n                button = this._popup.element.find(\".k-button\");\n\n                if (button.length > 0) {\n                    changed = true;\n                    button.trigger(\"focus\");\n                }\n            }\n\n            var tableSize = {\n                row: Math.max(1, Math.min(this.rows, selectedRows + 1)),\n                col: Math.max(1, Math.min(this.cols, selectedColumns + 1))\n            };\n\n            if (key == keys.ENTER && initiallyVisible) {\n                this._exec(tableSize);\n            } else {\n                this._setTableSize(tableSize);\n            }\n\n            if (changed) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            }\n        },\n\n        _open: function() {\n            var messages = this._editor.options.messages;\n\n            PopupTool.fn._open.call(this);\n\n            this.popup().element\n                .find(\".k-status\").text(messages.createTable).end()\n                .find(\".k-ct-cell\").removeClass(SELECTEDSTATE);\n        },\n\n        _close: function() {\n            PopupTool.fn._close.call(this);\n            this.popup().element.off(\".\" + NS);\n        }\n    });\n\n    var TableModificationCommand = Command.extend({\n        undo: function() {\n            var point = this.restorePoint;\n            point.restoreHtml();\n\n            $(this.editor.body).find(\".k-element-resize-handle-wrapper\")\n                .each(function(index,el) {\n                    el.remove();\n                });\n\n            this.editor.selectRange(point.toRange());\n        },\n        _clearColIndexAttr: function(table) {\n            dom.clearTableMappings(table, \"col-index\");\n        },\n        _mapColIndices: function(table) {\n            dom.reMapTableColumns(table, \"col-index\");\n        },\n        _findRowSpanCell: function(parent, rowIndex, colIndex) {\n            var row, cell;\n\n            for (var i = rowIndex; i >= 0; i--) {\n                row = parent.rows[i];\n                cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n                if (cell.length) {\n                    return cell;\n                }\n            }\n        },\n        _resetElementResizing: function(editor) {\n            editor._destroyResizings();\n            editor._initializeColumnResizing();\n            editor._initializeRowResizing();\n            editor._initializeElementResizing();\n        },\n        _findNextTdInRow: function(row, colIndex) {\n            var lastTd = row.find(\"td:last-child\"),\n                lastIndex = parseInt(lastTd.attr(\"col-index\"), 10) + lastTd.prop(\"colSpan\") - 1,\n                td;\n\n            for (var i = colIndex; i <= lastIndex; i++) {\n                td = row.find(\"[col-index=\" + i + \"]\");\n                if (td.length) {\n                    return td;\n                }\n            }\n        },\n        _adjustColgroups: function(row, table) {\n            var colElements = table.getElementsByTagName(COL),\n                colgroupElements = table.getElementsByTagName(COLGROUP),\n                cells = row.cells,\n                numberOfCells = cells.length,\n                i, colgroup, cell;\n\n            while (colElements.length > 0) {\n                colElements[0].remove();\n            }\n            while (colgroupElements.length > 0) {\n                colgroupElements[0].remove();\n            }\n\n            for (i = numberOfCells - 1; i >= 0; i--) {\n                cell = cells[i];\n                if (cell.getAttribute(SCOPE) === COLGROUP) {\n                    colgroup = dom.createEmptyNode(this.editor.document, COLGROUP);\n                    colgroup.setAttribute(\"span\", cell.getAttribute(COLSPAN));\n                    table.prepend(colgroup);\n                } else {\n                    table.prepend(dom.createEmptyNode(this.editor.document, COL));\n                }\n            }\n        },\n        _associateHeaderIds: function(table) {\n            dom.clearTableMappings(table, \"col-index\");\n            dom.reMapTableColumns(table, \"col-index\");\n            $(table).find(\"th, td\").removeAttr(\"id headers\");\n            dom.associateWithIds(table);\n        },\n        _getNumberOfColumns: function(table) {\n            return dom._getNumberOfColumns(table, \"td, th\");\n        }\n    });\n\n    var InsertRowCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(true),\n                td = dom.closest(range.endContainer, [TD, TH]),\n                table = dom.closest(td, TABLE),\n                position = this.options.position || \"after\",\n                cellCount, row, cell,\n                newRow, rowIndex, rowSpanIndex, createdCell;\n\n            if (!table || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            row = td.parentNode;\n            rowIndex = dom.findNodeIndex(row, true);\n\n            if (td.rowSpan > 1 && position === \"after\") {\n                row = table.rows[rowIndex + td.rowSpan - 1];\n            }\n\n            cellCount = this._getNumberOfColumns(table);\n            newRow = row.cloneNode(true);\n            $(newRow).empty();\n\n            for (var i = 0; i < cellCount; i = i + cell.prop(\"colSpan\")) {\n                cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n                if (cell.length) {\n                    if (cell.prop(\"rowSpan\") > 1 && position === \"after\" && cell) {\n                        cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                    } else {\n                        this._appendCell(newRow, cell);\n                    }\n                } else {\n                    rowIndex = dom.findNodeIndex(row, true);\n                    cell = this._findRowSpanCell(row.parentElement, rowIndex, i);\n                    rowSpanIndex = cell.closest(TR).index();\n\n                    if (rowSpanIndex + cell.prop(\"rowSpan\") - 1 === rowIndex && position === \"after\") {\n                        this._appendCell(newRow, cell);\n                    } else {\n                        cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                    }\n                }\n\n                createdCell = $(newRow).find(\"[col-index=\" + i + \"]\");\n                if (createdCell.attr(SCOPE) === ROWGROUP && !createdCell.attr(ROWSPAN)) {\n                    createdCell.attr(SCOPE, ROW);\n                }\n            }\n\n            if (position == \"before\") {\n                dom.insertBefore(newRow, row);\n            } else {\n                dom.insertAfter(newRow, row);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n\n            this._resetElementResizing(this.editor);\n        },\n        _appendCell: function(row, cell) {\n            var newCell;\n\n            newCell = cell.clone();\n            newCell.html(Editor.emptyTableCellContent);\n            newCell.removeAttr(ROWSPAN);\n            newCell.appendTo(row);\n        }\n    });\n\n    var InsertColumnCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(true),\n                td = dom.closest(range.endContainer, [TD, TH]),\n                table = dom.closest(td, TABLE),\n                colElements = table.getElementsByTagName(COL),\n                colgroupElements = table.getElementsByTagName(COLGROUP),\n                columnIndex,\n                i,\n                rows = table && table.rows,\n                cell,\n                newCell,\n                position = this.options.position || \"after\";\n\n\n            if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            columnIndex = parseInt(td.getAttribute(\"col-index\"),10);\n\n            if (td.colSpan > 1 && position === \"after\") {\n                td.setAttribute(\"col-index\", columnIndex + td.colSpan - 1);\n                columnIndex = columnIndex + td.colSpan - 1;\n            }\n\n            for (i = 0; i < rows.length; i++) {\n                cell = this._processForColSpan(rows[i], columnIndex, position, td);\n\n                if (!cell) {\n                    continue;\n                }\n\n                newCell = cell.cloneNode();\n                newCell.innerHTML = Editor.emptyTableCellContent;\n                newCell.removeAttribute(COLSPAN);\n\n                if (newCell.getAttribute(SCOPE) && newCell.getAttribute(SCOPE) === COLGROUP) {\n                    newCell.setAttribute(SCOPE, COL);\n                }\n\n                if (position == \"before\") {\n                    dom.insertBefore(newCell, cell);\n                } else {\n                    dom.insertAfter(newCell, cell);\n                }\n\n                this._resizeCells(newCell, cell);\n            }\n\n            if (colElements.length > 0 || colgroupElements.length > 0) {\n                this._adjustColgroups(rows[0], table);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n\n            this._resetElementResizing(this.editor);\n        },\n        _processForColSpan: function(row, columnIndex, position, selectedCell) {\n            var cell,\n                colSpanEffect,\n                index = columnIndex - 1;\n\n            cell = $(row).find(\"[col-index=\" + columnIndex + \"]\")[0];\n\n            if (cell && cell.colSpan > 1 && position === \"after\" && cell !== selectedCell) {\n                cell.colSpan += 1;\n                return;\n            }\n\n            if (cell) {\n                return cell;\n            }\n\n            for (index; index >= 0; index--) {\n                cell = $(row).find(\"[col-index=\" + index + \"]\")[0];\n\n                if (cell && cell.colSpan > 1) {\n                    break;\n                }\n            }\n\n            if (!cell) {\n                return;\n            }\n\n            colSpanEffect = parseInt(cell.getAttribute(\"col-index\"),10) + cell.colSpan - 1;\n\n            if (colSpanEffect === columnIndex && position === \"after\") {\n                return cell;\n            } else if (columnIndex <= colSpanEffect) {\n                cell.setAttribute(COLSPAN, cell.colSpan + 1);\n            }\n        },\n        _resizeCells: function(newCell, cell) {\n            var width = newCell.style.width,\n            parsedWidth, unit, calculatedWidth;\n\n            if (!width) {\n                return;\n            }\n\n            parsedWidth = parseFloat(width);\n            unit = width.slice(parsedWidth.toString().length);\n            calculatedWidth = (parsedWidth / 2) + unit;\n\n            newCell.style.width = calculatedWidth;\n            cell.style.width = calculatedWidth;\n        }\n    });\n\n    var DeleteRowCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange();\n            var rows = RangeUtils.mapAll(range, function(node) {\n                return $(node).closest(TR)[0];\n            });\n            var td = dom.closest(range.endContainer, [TD, TH]);\n            var row = rows[0];\n            var rowSpan = td ? td.rowSpan : 1;\n            var rowIndex = $(rows[0]).index();\n            var table = dom.closest(row, TABLE);\n            var rowParent = row.parentElement;\n            var focusElement;\n\n            if (!table || (this.immutables() && Editor.Immutables.immutableParent(row))) {\n                this.releaseRange(range);\n                return;\n            }\n\n            for (var x = 0; x < rowSpan; x++) {\n                if (rows.indexOf(rowParent.rows[rowIndex + x]) < 0) {\n                    rows.push(rowParent.rows[rowIndex + x]);\n                }\n            }\n\n            if (table.rows.length <= rows.length) {\n                focusElement = dom.next(table);\n                if (!focusElement || dom.insignificant(focusElement)) {\n                    focusElement = dom.prev(table);\n                }\n\n                if (focusElement && focusElement.rows) {\n                    focusElement = focusElement.rows[0].cells[0];\n                }\n\n                dom.remove(table);\n                this._resetElementResizing(this.editor);\n            } else if (rowParent.rows.length <= rows.length) {\n                focusElement = rowParent.nextSibling;\n\n                if (!focusElement) {\n                    focusElement = rowParent.previousSibling;\n                }\n\n                dom.remove(rowParent);\n            } else {\n                this._mapColIndices(table);\n\n                for (var i = 0; i < rows.length; i++) {\n                    row = rows[i];\n                    dom.removeTextSiblings(row);\n                    focusElement = dom.next(row) || dom.prev(row);\n                    focusElement = focusElement.cells[0];\n\n                    // IE needs to focus the new row before removing the old one\n                    this._focusElement(range, focusElement);\n                    focusElement = null;\n\n                    this._handleRowSpanCells(table, row);\n\n                    dom.remove(row);\n                }\n\n                this._clearColIndexAttr(table);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            } else if (dom.is(rowParent, THEAD) && $(table).find(\"[scope]\").length > 0) {\n                this._adjustColgroups(rowParent.rows[0], table);\n            }\n\n            if (focusElement) {\n                this._focusElement(range, focusElement);\n            }\n\n            this._resetElementResizing(this.editor);\n        },\n        _focusElement: function(range, node) {\n            range.setStart(node, 0);\n            range.collapse(true);\n            this.editor.selectRange(range);\n        },\n        _handleRowSpanCells: function(table, row) {\n            var index, cell, adjacentCell, nextRow, rowIndex = dom.findNodeIndex(row, true),\n                firstRow = table.rows[0],\n                lastCell = firstRow.cells[firstRow.cells.length - 1],\n                lastIndex = parseInt(lastCell.getAttribute(\"col-index\"),10) + lastCell.colSpan - 1;\n\n            for (index = 0; index <= lastIndex; index = index + cell.prop(\"colSpan\")) {\n                cell = $(row).find(\"[col-index=\" + index + \"]\");\n\n                if (cell.length && cell.prop(\"rowSpan\") > 1) {\n                    nextRow = table.rows[rowIndex + 1];\n                    adjacentCell = $(nextRow).find(\"[col-index=\" + (index + 1) + \"]\");\n\n                    if (adjacentCell.length) {\n                        adjacentCell.before(cell);\n                    } else {\n                        $(nextRow).append(cell);\n                    }\n                    this._reduceRowSpan(cell);\n                }\n\n                if (!cell.length) {\n                    cell = this._findRowSpanCell(row.parentElement, rowIndex, index);\n                    this._reduceRowSpan(cell);\n                }\n            }\n        },\n        _reduceRowSpan: function(td) {\n            var rowSpanValue = td.prop(\"rowSpan\") - 1;\n\n            if (rowSpanValue <= 1) {\n                td.removeAttr(ROWSPAN);\n                if (td.attr(SCOPE) === ROWGROUP) {\n                    td.attr(SCOPE, ROW);\n                }\n            } else {\n                td.attr(ROWSPAN, rowSpanValue);\n            }\n        }\n    });\n\n    var DeleteColumnCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(),\n                td = dom.closest(range.endContainer, [TD, TH]),\n                table = dom.closest(td, TABLE),\n                rows = table && table.rows,\n                columnIndex = dom.findNodeIndex(td, true),\n                columnCount = rows && rows[0].cells.length,\n                colElements = table.getElementsByTagName(COL),\n                colgroupElements = table.getElementsByTagName(COLGROUP),\n                focusElement, i, cell, x;\n\n            if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n                this.releaseRange(range);\n                return;\n            }\n\n            if (columnCount == 1 || td.colSpan == columnCount) {\n                focusElement = dom.next(table);\n                if (!focusElement || dom.insignificant(focusElement)) {\n                    focusElement = dom.prev(table);\n                }\n\n                if (focusElement && focusElement.rows) {\n                    focusElement = focusElement.rows[0].cells[0];\n                }\n\n                dom.remove(table);\n                this._resetElementResizing(this.editor);\n            } else {\n                dom.removeTextSiblings(td);\n\n                focusElement = dom.next(td) || dom.prev(td);\n\n                this._mapColIndices(table);\n\n                columnIndex = parseInt(td.getAttribute(\"col-index\"), 10);\n\n                for (x = 0; x < td.colSpan; x++) {\n                    for (i = 0; i < rows.length; i = i + (cell.prop(\"rowSpan\") || 1)) {\n                        cell = $(rows[i]).find(\"[col-index=\" + (columnIndex + x) + \"]\");\n\n                        if (cell.length && cell.prop(\"colSpan\") <= 1) {\n                            cell.remove();\n                        } else {\n                            this._handleColSpanCells(rows[i], columnIndex + x);\n                        }\n                    }\n                }\n\n                this._clearColIndexAttr(table);\n            }\n\n            if (colElements.length > 0 || colgroupElements.length > 0) {\n                this._adjustColgroups(rows[0], table);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            if (focusElement) {\n                range.setStart(focusElement, 0);\n                range.collapse(true);\n                this.editor.selectRange(range);\n            }\n\n            this._resetElementResizing(this.editor);\n        },\n        _handleColSpanCells: function(row, colIndex) {\n            var cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n            if (cell.length && cell.prop(\"colSpan\") > 1) {\n                var clone = cell.clone(true);\n                cell.after(clone);\n                this._reduceColSpan(clone);\n                clone.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n                cell.remove();\n                return;\n            }\n\n            for (var i = colIndex; i >= 0; i--) {\n                cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n                if (cell.length) {\n                    this._reduceColSpan(cell);\n                    cell.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n                    return;\n                }\n            }\n        },\n        _reduceColSpan: function(td) {\n            var colSpanValue = td.prop(\"colSpan\") - 1;\n\n            if (colSpanValue <= 1) {\n                td.removeAttr(COLSPAN);\n                if (td.attr(SCOPE) === COLGROUP) {\n                    td.attr(SCOPE, COL);\n                }\n            } else {\n                td.attr(COLSPAN, colSpanValue);\n            }\n        }\n    });\n\n    var MergeCellsHorizontallyCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(),\n                td = dom.closest(range.endContainer, [TD, TH]),\n                table, row, columnIndex, nextTd, colspan;\n\n                if (!td) {\n                    this.releaseRange(range);\n                    return;\n                }\n\n                table = dom.closest(td, TABLE);\n                row = td.parentNode;\n                columnIndex = dom.findNodeIndex(td, true);\n                nextTd = row.children[columnIndex + 1];\n\n                if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                    this.releaseRange(range);\n                    return;\n                }\n\n                this._mapColIndices(table);\n\n                columnIndex = parseInt($(td).attr(\"col-index\"), 10);\n                nextTd = $(row).find(\"[col-index=\" + (columnIndex + 1 + this._getColspan(td) - 1) + \"]\").get(0);\n\n                if (!nextTd || nextTd.rowSpan !== td.rowSpan || td.tagName !== nextTd.tagName) {\n                    this._clearColIndexAttr(table);\n                    this.releaseRange(range);\n                    return;\n                }\n\n                colspan = this._getColspan(td) + this._getColspan(nextTd);\n\n                $(td).prop(COLSPAN, colspan)\n                     .append(dom.emptyNode(nextTd) ? \"\" : \"<br/>\" + nextTd.innerHTML);\n\n                $(td).width(td.offsetWidth);\n                $(nextTd).remove();\n\n                if (td.getAttribute(SCOPE) === COL) {\n                    td.setAttribute(SCOPE, COLGROUP);\n                }\n                if (td.getAttribute(SCOPE) === COLGROUP) {\n                    this._adjustColgroups(row, table);\n                }\n\n                if ($(table).find(\"[headers]\").length > 0) {\n                    this._associateHeaderIds(table);\n                }\n\n                this._clearColIndexAttr(table);\n                this.releaseRange(range);\n                this._resetElementResizing(this.editor);\n        },\n        _getColspan: function(td) {\n            return parseInt(td.getAttribute(COLSPAN), 10) || 1;\n        }\n    });\n\n    var MergeCellsVerticallyCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(),\n                td = dom.closest(range.endContainer, [TD, TH]),\n                tr, parent, table, columnIndex, rowIndex, targetRow, bottomTd;\n\n                if (!td) {\n                    this.releaseRange(range);\n                    return;\n                }\n\n                tr = dom.closest(td, TR);\n                parent = dom.closest(td, [THEAD, TBODY]);\n                table = dom.closest(td, TABLE);\n                columnIndex = dom.findNodeIndex(td, true);\n                rowIndex = dom.findNodeIndex(tr, true);\n\n                if (rowIndex + 1 === parent.rows.length) {\n                    this.releaseRange(range);\n                    return;\n                }\n\n                targetRow = parent.rows[rowIndex + this._getRowspan(td)];\n                bottomTd = targetRow && targetRow.children[columnIndex];\n\n                if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                    this.releaseRange(range);\n                    return;\n                }\n\n                this._mapColIndices(table);\n\n                columnIndex = $(td).attr(\"col-index\");\n                bottomTd = $(targetRow).find(\"[col-index=\" + columnIndex + \"]\").get(0);\n\n                if (!bottomTd || bottomTd.colSpan !== td.colSpan || td.tagName !== bottomTd.tagName) {\n                    this._clearColIndexAttr(table);\n                    this.releaseRange(range);\n                    return;\n                }\n\n                $(td).prop(ROWSPAN, this._getRowspan(td) + this._getRowspan(bottomTd))\n                     .append(dom.emptyNode(bottomTd) ? \"\" : \"<br/>\" + bottomTd.innerHTML);\n\n                if (td.getAttribute(SCOPE) === ROW) {\n                    td.setAttribute(SCOPE, ROWGROUP);\n                }\n\n                $(bottomTd).remove();\n\n                if ($(table).find(\"[headers]\").length > 0) {\n                    this._associateHeaderIds(table);\n                }\n\n                this._clearColIndexAttr(table);\n                this.releaseRange(range);\n        },\n        _getRowspan: function(td) {\n            return parseInt(td.getAttribute(ROWSPAN), 10) || 1;\n        }\n    });\n\n    var SplitCellCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(),\n                type = this.options.type,\n                attr = type === \"row\" ? COLSPAN : ROWSPAN,\n                td = dom.closest(range.endContainer, [TD, TH]),\n                parent = dom.closest(td, [THEAD, TBODY]),\n                table = dom.closest(td, TABLE),\n                emptyTd = dom.createEmptyNode(this.editor.document, td.nodeName.toLowerCase());\n\n            if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            if (type === \"row\" && $(td).is(\"[\" + attr + \"]\")) {\n                this._splitCellHorizontally(td, parent, attr, emptyTd);\n            } else if (type === \"column\" && $(td).is(\"[\" + attr + \"]\")) {\n                this._splitCellVertically(td, parent, attr, emptyTd);\n            }\n\n            if ($(td).prop(attr.toLowerCase()) <= 1) {\n                $(td).removeAttr(attr);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n        },\n        _getRowspanValue: function(td) {\n            return parseInt(td.getAttribute(ROWSPAN), 10);\n        },\n        _getColspanValue: function(td) {\n            return parseInt(td.getAttribute(COLSPAN), 10);\n        },\n        _splitCellHorizontally: function(td, parent, attr, emptyTd) {\n            var rowSpan = td.rowSpan,\n                colSpan = td.colSpan,\n                tdToAdd = $(emptyTd),\n                colSpanResult = Math.floor(colSpan / 2);\n\n                if (colSpanResult > 1) {\n                    tdToAdd.attr(COLSPAN, colSpanResult);\n                }\n\n                if (rowSpan > 1) {\n                    tdToAdd.attr(ROWSPAN, rowSpan);\n                }\n\n                $(td).prop(attr, colSpan - colSpanResult)\n                    .after(tdToAdd);\n\n                $(td).width(td.offsetWidth);\n                tdToAdd.width(tdToAdd[0].offsetWidth);\n\n                if (td.hasAttribute(SCOPE)) {\n                    if (td.getAttribute(SCOPE) === COLGROUP) {\n                        tdToAdd.attr(SCOPE, COL);\n                        if (!td.getAttribute(COLSPAN) || td.getAttribute(COLSPAN) === \"1\") {\n                            td.setAttribute(SCOPE, COL);\n                        }\n\n                        this._adjustColgroups(td.parentNode, parent.parentNode);\n                    } else {\n                        tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                    }\n                }\n        },\n        _splitCellVertically: function(td, parent, attr, emptyTd) {\n            var tr = dom.closest(td,TR),\n                columnIndex = parseInt($(td).attr(\"col-index\"), 10),\n                rowIndex = dom.findNodeIndex(tr, true),\n                rowSpan = td.rowSpan,\n                colSpan = td.colSpan,\n                rowSpanResult = Math.floor(rowSpan / 2),\n                targetRow = $(parent).find(TR).eq(rowIndex + rowSpan - rowSpanResult),\n                nextTd = this._findNextTdInRow(targetRow, columnIndex + colSpan),\n                tdToAdd = $(emptyTd);\n\n                if (rowSpanResult > 1) {\n                    tdToAdd.attr(ROWSPAN, rowSpanResult);\n                }\n                if (colSpan > 1) {\n                    tdToAdd.attr(COLSPAN, colSpan);\n                }\n\n                if (nextTd && nextTd.length) {\n                    nextTd.before(tdToAdd);\n                } else {\n                    targetRow.append(tdToAdd);\n                }\n\n                $(td).prop(attr, rowSpan - rowSpanResult);\n\n                if (td.hasAttribute(SCOPE)) {\n                    if (td.getAttribute(SCOPE) === ROWGROUP) {\n                        tdToAdd.attr(SCOPE, ROW);\n                        if (!td.getAttribute(ROWSPAN) || td.getAttribute(ROWSPAN) === \"1\") {\n                            td.setAttribute(SCOPE, ROW);\n                        }\n                    } else {\n                        tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                    }\n                }\n        }\n    });\n\n    var TableModificationTool = Tool.extend({\n        command: function(options) {\n            var commandsMap = {\n                row: {\n                    insert: InsertRowCommand,\n                    \"delete\": DeleteRowCommand,\n                    merge: MergeCellsHorizontallyCommand,\n                    split: SplitCellCommand\n                },\n                column: {\n                    insert: InsertColumnCommand,\n                    \"delete\": DeleteColumnCommand,\n                    merge: MergeCellsVerticallyCommand,\n                    split: SplitCellCommand\n                }\n            };\n\n            options = extend(options, this.options);\n            options.action = options.action || \"insert\";\n\n            return new commandsMap[options.type][options.action](options);\n        },\n\n        update: function(ui, nodes) {\n            var isFormatted = !tableFormatFinder.isFormatted(nodes),\n                toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n            if (isFormatted === true) {\n                toolbar.hide(ui);\n            } else {\n                toolbar.show(ui);\n            }\n        }\n    });\n\n    var TableFormatCommand = FormatCommand.extend({\n        exec: function() {\n            var that = this;\n            var editor = that.editor;\n\n            FormatCommand.fn.exec.call(this);\n\n            if (editor.elementResizing) {\n                editor.elementResizing._showResizeHandles();\n            }\n        }\n    });\n\n    // var tableAlignFormatFinder = BlockFormatFinder.extend({\n\n    // });\n\n    var TableFormatTool = BlockFormatTool.extend({\n        update: function(ui, nodes) {\n            var isTable = !tableFormatFinder.isFormatted(nodes),\n                isFormatted = this.options.finder.isFormatted(nodes, this.isTable),\n                toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n            if (toolbar) {\n                toolbar.toggle(ui, isFormatted);\n            }\n\n            if (isTable === true) {\n                toolbar.hide(ui);\n            } else {\n                toolbar.show(ui);\n            }\n        },\n        command: function(commandArguments) {\n            var that = this;\n\n            return new TableFormatCommand(extend(commandArguments, {\n                formatter: that.options.formatter\n            }));\n        },\n        isTable: function(node) {\n            return dom.is(node, \"table\");\n        }\n    });\n\n    extend(kendo.ui.editor, {\n        PopupTool: PopupTool,\n        TableCommand: TableCommand,\n        InsertTableTool: InsertTableTool,\n        TableFormatTool: TableFormatTool,\n        TableFormatCommand: TableFormatCommand,\n        TableModificationTool: TableModificationTool,\n        InsertRowCommand: InsertRowCommand,\n        InsertColumnCommand: InsertColumnCommand,\n        DeleteRowCommand: DeleteRowCommand,\n        DeleteColumnCommand: DeleteColumnCommand,\n        MergeCellsHorizontallyCommand: MergeCellsHorizontallyCommand,\n        MergeCellsVerticallyCommand: MergeCellsVerticallyCommand,\n        SplitCellCommand: SplitCellCommand\n    });\n\n\n    registerTool(\"createTable\", new InsertTableTool({ ui: { popup: true, overflow: \"never\" } }));\n\n    registerTool(\"addColumnLeft\", new TableModificationTool({ type: \"column\", position: \"before\" }));\n    registerTool(\"addColumnRight\", new TableModificationTool({ type: \"column\" }));\n    registerTool(\"addRowAbove\", new TableModificationTool({ type: \"row\", position: \"before\" }));\n    registerTool(\"addRowBelow\", new TableModificationTool({ type: \"row\" }));\n    registerTool(\"deleteRow\", new TableModificationTool({ type: \"row\", action: \"delete\" }));\n    registerTool(\"deleteColumn\", new TableModificationTool({ type: \"column\", action: \"delete\" }));\n    registerTool(\"mergeCellsHorizontally\", new TableModificationTool({ type: \"row\", action: \"merge\" }));\n    registerTool(\"mergeCellsVertically\", new TableModificationTool({ type: \"column\", action: \"merge\" }));\n    registerTool(\"splitCellHorizontally\", new TableModificationTool({ type: \"row\", action: \"split\" }));\n    registerTool(\"splitCellVertically\", new TableModificationTool({ type: \"column\", action: \"split\" }));\n\n    registerFormat(\"tableAlignLeft\", [\n        { tags: [\"table\"], attr: { style: { marginLeft: \"\", marginRight: \"auto\" } } },\n        { tags: [\"table\"], attr: { align: \"left\" } }\n    ]);\n    registerTool(\"tableAlignLeft\", new TableFormatTool({\n        format: formats.tableAlignLeft,\n        ui: {\n            togglable: true,\n            group: \"tableAlign\"\n        }\n    }));\n\n    registerFormat(\"tableAlignCenter\", [\n        { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"auto\" } } },\n        { tags: [\"table\"], attr: { align: \"center\" } }\n    ]);\n    registerTool(\"tableAlignCenter\", new TableFormatTool({\n        format: formats.tableAlignCenter,\n        ui: {\n            togglable: true,\n            group: \"tableAlign\"\n        }\n    }));\n\n    registerFormat(\"tableAlignRight\", [\n        { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"\" } } },\n        { tags: [\"table\"], attr: { align: \"right\" } }\n    ]);\n    registerTool(\"tableAlignRight\", new TableFormatTool({\n        format: formats.tableAlignRight,\n        ui: {\n            togglable: true,\n            group: \"tableAlign\"\n        }\n    }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            editorNS = kendo.ui.editor,\n            RangeUtils = editorNS.RangeUtils,\n            dom = editorNS.Dom,\n            RestorePoint = editorNS.RestorePoint,\n            Marker = editorNS.Marker,\n            browser = kendo.support.browser,\n            extend = $.extend;\n\n    var Clipboard = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n            var pasteCleanup = editor.options.pasteCleanup;\n            this.nonSplittableTagsOnPaste = editor.options.nonSplittableTagsOnPaste || [];\n            this.cleaners = [\n                new ScriptCleaner(pasteCleanup),\n                new TabCleaner(pasteCleanup),\n                new MSWordFormatCleaner(pasteCleanup),\n                new WebkitFormatCleaner(pasteCleanup),\n                new HtmlTagsCleaner(pasteCleanup),\n                new HtmlAttrCleaner(pasteCleanup),\n                new HtmlContentCleaner(pasteCleanup),\n                new CustomCleaner(pasteCleanup) //always keep at end\n            ];\n        },\n\n        htmlToFragment: function(html) {\n            var editor = this.editor,\n                doc = editor.document,\n                container = dom.create(doc, 'div'),\n                fragment = doc.createDocumentFragment();\n\n            container.innerHTML = html;\n\n            while (container.firstChild) {\n                fragment.appendChild(container.firstChild);\n            }\n\n            return fragment;\n        },\n\n        isBlock: function(html) {\n            return (/<(div|p|ul|ol|table|h[1-6])/i).test(html);\n        },\n\n        _startModification: function() {\n            var range;\n            var restorePoint;\n            var editor = this.editor;\n\n            if (this._inProgress) {\n                return;\n            }\n\n            this._inProgress = true;\n\n            range = editor.getRange();\n            restorePoint = new RestorePoint(range, editor.body);\n\n            dom.persistScrollTop(editor.document);\n\n            return { range: range, restorePoint: restorePoint };\n        },\n\n        _endModification: function(modificationInfo) {\n            editorNS._finishUpdate(this.editor, modificationInfo.restorePoint);\n\n            this.editor._selectionChange();\n\n            this._inProgress = false;\n        },\n\n        _contentModification: function(before, after) {\n            var that = this;\n            var editor = that.editor;\n            var modificationInfo = that._startModification();\n\n            if (!modificationInfo) {\n                return;\n            }\n\n            before.call(that, editor, modificationInfo.range);\n\n            setTimeout(function() {\n                after.call(that, editor, modificationInfo.range);\n\n                that._endModification(modificationInfo);\n            });\n        },\n\n        _removeBomNodes: function(range) {\n            var nodes = RangeUtils.textNodes(range);\n\n            for (var i = 0; i < nodes.length; i++) {\n                nodes[i].nodeValue = dom.stripBom(nodes[i].nodeValue) || nodes[i].nodeValue;\n            }\n        },\n\n        _onBeforeCopy: function(range) {\n            var marker = new Marker();\n            marker.add(range);\n\n            this._removeBomNodes(range);\n\n            marker.remove(range);\n\n            this.editor.selectRange(range);\n        },\n\n        oncopy: function() {\n            this._onBeforeCopy(this.editor.getRange());\n        },\n\n        oncut: function() {\n            this._onBeforeCopy(this.editor.getRange());\n            this._contentModification($.noop, $.noop);\n        },\n\n        _fileToDataURL: function(blob) {\n            var deferred = $.Deferred();\n\n            var reader = new FileReader();\n\n            if (!(blob instanceof window.File) && blob.getAsFile) {\n                blob = blob.getAsFile();\n            }\n\n            reader.onload = deferred.resolve.bind(deferred);\n\n            reader.readAsDataURL(blob);\n\n            return deferred.promise();\n        },\n\n        _triggerPaste: function(html, options) {\n            var args = { html: html || \"\" };\n\n            args.html = args.html.replace(/\\ufeff/g, \"\");\n\n            this.editor.trigger(\"paste\", args);\n\n            this.paste(args.html, options || {});\n        },\n\n        _handleImagePaste: function(e) {\n            if (!('FileReader' in window) || (browser.msie && browser.version > 10)) {\n                return;\n            }\n\n            var clipboardData = e.clipboardData || e.originalEvent.clipboardData ||\n                        window.clipboardData || {};\n\n            var items = clipboardData.items || clipboardData.files;\n\n            return this._insertImages(items);\n        },\n\n        _insertImages: function(items) {\n            if (!items) {\n                return;\n            }\n\n            var images = $.grep(items, function(item) { return (/^image\\//i).test(item.type); });\n            var html = $.grep(items, function(item) { return (/^text\\/html/i).test(item.type); });\n\n            if (html.length || !images.length) {\n                return;\n            }\n\n            var modificationInfo = this._startModification();\n\n            if (!modificationInfo) {\n                return;\n            }\n\n            $.when.apply($, $.map(images, this._fileToDataURL))\n                .done((function() {\n                    var results = Array.prototype.slice.call(arguments);\n                    var html = $.map(results, function(e) {\n                        return '<img src=\"' + e.target.result + '\" />';\n                    }).join(\"\");\n\n                    this._triggerPaste(html);\n\n                    this._endModification(modificationInfo);\n                }).bind(this));\n\n            return true;\n        },\n\n        onpaste: function(e) {\n            if (this.editor.body.contentEditable === \"false\") {\n                return;\n            }\n\n            if (this._handleImagePaste(e)) {\n                e.preventDefault();\n                return;\n            }\n\n            this.expandImmutablesIn();\n\n            this._contentModification(\n                function beforePaste(editor, range) {\n                    var clipboardNode = dom.create(editor.document, 'div', {\n                            className: 'k-paste-container',\n                            innerHTML: \"\\ufeff\"\n                        });\n                    var browser = kendo.support.browser;\n                    var body = editor.body;\n\n                    this._decoreateClipboardNode(clipboardNode, body);\n\n                    body.appendChild(clipboardNode);\n\n                    //Browser scrolls to clipboardNode\n                    if (browser.webkit) {\n                        this._moveToCaretPosition(clipboardNode, range);\n                    }\n\n                    // text ranges are slow in IE10-, DOM ranges are buggy in IE9-10\n                    if (browser.msie && browser.version < 11) {\n                        e.preventDefault();\n                        var r = editor.createRange();\n                        r.selectNodeContents(clipboardNode);\n                        editor.selectRange(r);\n                        var textRange = editor.document.body.createTextRange();\n                        textRange.moveToElementText(clipboardNode);\n                        $(body).off('paste');\n                        textRange.execCommand('Paste');\n                        $(body).on('paste', this.onpaste.bind(this));\n                    } else {\n                        var clipboardRange = editor.createRange();\n                        clipboardRange.selectNodeContents(clipboardNode);\n                        editor.selectRange(clipboardRange);\n                    }\n\n                    range.deleteContents();\n                },\n                function afterPaste(editor, range) {\n                    var html = \"\", containers;\n\n                    editor.selectRange(range);\n\n                    containers = $(editor.body).children(\".k-paste-container\");\n\n                    containers.each(function() {\n                        var lastChild = this.lastChild;\n\n                        if (lastChild && dom.is(lastChild, 'br')) {\n                            dom.remove(lastChild);\n                        }\n\n                        html += this.innerHTML;\n                    });\n\n                    containers.remove();\n\n                    this._triggerPaste(html, { clean: true });\n                }\n            );\n        },\n        ondragover: function(e) {\n            if (browser.msie || browser.edge) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        },\n        ondrop: function(e) {\n            if (!('FileReader' in window)) {\n                return;\n            }\n\n            var dataTransfer = (e.originalEvent || e).dataTransfer || {};\n            var items = dataTransfer.items || dataTransfer.files;\n\n            if (this._insertImages(items)) {\n                e.preventDefault();\n            }\n        },\n        _decoreateClipboardNode: function(node, body) {\n            if (!browser.msie && !browser.webkit) {\n                return;\n            }\n\n            node = $(node);\n            node.css({\n                borderWidth: \"0px\",\n                width: \"0px\",\n                height: \"0px\",\n                overflow: \"hidden\",\n                margin: \"0\",\n                padding: \"0\"\n            });\n\n            if (browser.msie) {\n                //node inherits BODY styles and this causes the browser to add additional\n                var documentElement = $(body.ownerDocument.documentElement);\n\n                node.css({\n                    fontVariant: \"normal\",\n                    fontWeight: \"normal\",\n                    lineSpacing: \"normal\",\n                    lineHeight: \"normal\",\n                    textDecoration: \"none\"\n                });\n                var color = documentElement.css(\"color\");\n                if (color) {\n                    node.css(\"color\", color);\n                }\n                var fontFamily = documentElement.css(\"fontFamily\");\n                if (fontFamily) {\n                    node.css(\"fontFamily\", fontFamily);\n                }\n                var fontSize = documentElement.css(\"fontSize\");\n                if (fontSize) {\n                    node.css(\"fontSize\", fontSize);\n                }\n            }\n        },\n        _moveToCaretPosition: function(node, range) {\n            var that = this;\n            var body = that.editor.body;\n            var nodeOffset = dom.offset(node, body);\n            var caretOffset = that._caretOffset(range, body);\n            var translateX = caretOffset.left - nodeOffset.left;\n            var translateY = caretOffset.top - nodeOffset.top;\n            var translate = \"translate(\" + translateX + \"px,\" + translateY + \"px)\";\n\n            $(node).css({\n                \"-webkit-transform\": translate,\n                \"transform\": translate\n            });\n        },\n        _caretOffset: function(range, body) {\n            var editor = this.editor;\n            var caret = dom.create(editor.document, 'span', { innerHTML: \"\\ufeff\" });\n            var startContainer = range.startContainer;\n            var rangeChanged;\n\n            if (range.collapsed) {\n                var isStartTextNode = dom.isDataNode(startContainer);\n                if (isStartTextNode && (dom.isBom(startContainer) || range.startOffset === 0)) {\n                    dom.insertBefore(caret, startContainer);\n                } else if (isStartTextNode && range.startOffset === startContainer.length) {\n                    dom.insertAfter(caret, startContainer);\n                } else {\n                    range.insertNode(caret);\n                    rangeChanged = true;\n                }\n            } else {\n                startContainer = startContainer === body ?\n                    startContainer.childNodes[range.startOffset] : startContainer;\n                dom.insertBefore(caret, startContainer);\n            }\n\n            var offset = dom.offset(caret, body);\n            var prev = caret.previousSibling;\n            var next = caret.nextSibling;\n\n            dom.remove(caret);\n\n            if (rangeChanged && dom.isDataNode(prev) && dom.isDataNode(next) && !dom.isBom(prev) && !dom.isBom(next)) {\n                var prevLength = prev.length;\n                next.data = prev.data + next.data;\n                range.setStart(next, prevLength);\n                dom.remove(prev);\n\n                range.collapse(true);\n                editor.selectRange(range);\n            }\n\n            return offset;\n        },\n\n        expandImmutablesIn: function(range) {\n            var editor = this.editor;\n            if (editor && editor.options.immutables) {\n                var body = editor.body;\n                range = range || editor.getRange();\n                kendo.ui.editor.Immutables.expandImmutablesIn(range);\n                if (range.startContainer === body && range.startOffset === 0) {\n                    var doc = body.ownerDocument;\n                    var bomNode = doc.createTextNode(\"\\ufeff\");\n                    body.insertBefore(bomNode, body.childNodes[0]);\n                    range.setStartBefore(bomNode);\n                }\n                editor.selectRange(range);\n            }\n        },\n\n        splittableParent: function(block, node) {\n            var parentNode, body;\n\n            if (block) {\n                return dom.closestEditableOfType(node, ['p', 'ul', 'ol']) || node.parentNode;\n            }\n\n            parentNode = node.parentNode;\n            body = node.ownerDocument.body;\n\n            if (dom.isInline(parentNode)) {\n                while (parentNode.parentNode != body && !dom.isBlock(parentNode.parentNode)) {\n                    parentNode = parentNode.parentNode;\n                }\n            }\n\n            return parentNode;\n        },\n\n        paste: function(html, options) {\n            var editor = this.editor,\n                nonSplittableTagsOnPaste = this.nonSplittableTagsOnPaste,\n                preventSplit = false,\n                unwrapPasted = false,\n                i, l, childNodes, isList;\n\n            this.expandImmutablesIn();\n\n            options = extend({ clean: false, split: true }, options);\n\n            if (!options.skipCleaners) {\n                for (i = 0, l = this.cleaners.length; i < l; i++) {\n                    if (this.cleaners[i].applicable(html)) {\n                        html = this.cleaners[i].clean(html);\n                    }\n                }\n            }\n\n            if (options.clean) {\n                // remove br elements which immediately precede block elements\n                html = html.replace(/(<br>(\\s|&nbsp;)*)+(<\\/?(div|p|li|col|t))/ig, \"$3\");\n                // remove empty inline elements\n                html = html.replace(/<(a|span)[^>]*><\\/\\1>/ig, \"\");\n            }\n\n            html = html.replace(/<(a|span|font)([^>]*)> <\\/\\1>/ig, \"<$1$2>&nbsp;</$1>\");\n\n            // It is possible in IE to copy just <li> tags\n            html = html.replace(/^<li/i, '<ul><li').replace(/li>$/g, 'li></ul>');\n\n            var block = this.isBlock(html);\n\n            editor.focus();\n            var range = editor.getRange();\n            range.deleteContents();\n\n            if (range.startContainer == editor.document) {\n                range.selectNodeContents(editor.body);\n            }\n\n            var marker = new Marker();\n            var caret = marker.addCaret(range);\n\n            var parent = this.splittableParent(block, caret);\n            var unwrap = false;\n\n            for (i = 0; i < nonSplittableTagsOnPaste.length; i++) {\n                const splitter = nonSplittableTagsOnPaste[i],\n                    tag = splitter.tag || splitter;\n\n                if (dom.is(parent, tag)) {\n                    preventSplit = true;\n                    unwrapPasted = splitter.unwrap !== false;\n                    break;\n                }\n            }\n\n            var splittable = parent != editor.body && !dom.is(parent, \"td\") && !preventSplit;\n\n            if (options.split && splittable && (block || dom.isInline(parent))) {\n                range.selectNode(caret);\n                RangeUtils.split(range, parent, true);\n                unwrap = true;\n            }\n\n            var fragment = this.htmlToFragment(html);\n\n            if (fragment.firstChild && fragment.firstChild.className === \"k-paste-container\") {\n                var fragmentsHtml = [];\n                for (i = 0, l = fragment.childNodes.length; i < l; i++) {\n                    fragmentsHtml.push(fragment.childNodes[i].innerHTML);\n                }\n\n                fragment = this.htmlToFragment(fragmentsHtml.join('<br />'));\n            }\n\n            childNodes = fragment.childNodes;\n\n            if (unwrapPasted) {\n                isList = dom.list(childNodes[0]);\n                dom.unwrap(childNodes[0]);\n\n                if (isList) {\n                    range.selectNode(caret.parentNode);\n                }\n            }\n\n            $(childNodes)\n                .filter(\"table\").addClass(\"k-table\").end()\n                .find(\"table\").addClass(\"k-table\");\n\n            $(childNodes).each(function(index, elm) {\n               if (dom.isBlock(elm) && !dom.isSelfClosing(elm) && elm.innerHTML === \"\") {\n                    elm.appendChild(editor.document.createTextNode(\"\\ufeff\"));\n               }\n            });\n\n            range.insertNode(fragment);\n\n            parent = this.splittableParent(block, caret);\n            if (unwrap) {\n                while (caret.parentNode != parent) {\n                    dom.unwrap(caret.parentNode);\n                }\n\n                dom.unwrap(caret.parentNode);\n            }\n\n            dom.normalize(range.commonAncestorContainer);\n            caret.style.display = 'inline';\n            dom.restoreScrollTop(editor.document);\n            dom.scrollTo(caret);\n            marker.removeCaret(range);\n\n            var rangeEnd = range.commonAncestorContainer.parentNode;\n            if (range.collapsed && dom.name(rangeEnd) == \"tbody\" || range.collapsed && dom.name(rangeEnd) == \"thead\") {\n                range.setStartAfter($(rangeEnd).closest(\"table\")[0]);\n                range.collapse(true);\n            }\n\n            var focusedTable = $(range.commonAncestorContainer.parentNode).closest(\"table\");\n\n            if (focusedTable.get(0)) {\n                var siblingNodes = focusedTable.parent().contents();\n                var lastSiblingIndex = siblingNodes.length - 1;\n                var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n                while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n                    lastSiblingIndex -= 1;\n                    lastSibling = siblingNodes.get(lastSiblingIndex);\n                }\n\n                if (lastSibling === focusedTable.get(0) && !focusedTable.parents(\"table\").length) {\n                    dom.insertAfter(dom.createEmptyNode(editor.document, \"p\"), focusedTable[0]);\n                }\n            }\n\n            editor._handleSpaceAndNewLines();\n            editor.selectRange(range);\n        }\n    });\n\n    var Cleaner = Class.extend({\n        init: function(options) {\n            this.options = options || {};\n            this.replacements = [];\n        },\n\n        clean: function(html, customReplacements) {\n            var that = this,\n                replacements = customReplacements || that.replacements,\n                i, l;\n\n            for (i = 0, l = replacements.length; i < l; i += 2) {\n                html = html.replace(replacements[i], replacements[i + 1]);\n            }\n\n            return html;\n        }\n    });\n\n    var ScriptCleaner = Cleaner.extend({\n        init: function(options) {\n            Cleaner.fn.init.call(this, options);\n\n            this.replacements = [\n                /<(\\/?)script([^>]*)>/i, \"<$1telerik:script$2>\"\n            ];\n        },\n\n        applicable: function(html) {\n            return !this.options.none && (/<script[^>]*>/i).test(html);\n        }\n    });\n\n    var TabCleaner = Cleaner.extend({\n        init: function(options) {\n            Cleaner.fn.init.call(this, options);\n\n            var replacement = ' ';\n            this.replacements = [\n                /<span\\s+class=\"Apple-tab-span\"[^>]*>\\s*<\\/span>/gi, replacement,\n                /\\t/gi, replacement,\n                /&nbsp;&nbsp; &nbsp;/gi, replacement\n            ];\n        },\n\n        applicable: function(html) {\n            return (/&nbsp;&nbsp; &nbsp;|class=\"?Apple-tab-span/i).test(html);\n        }\n    });\n\n    var MSWordFormatCleaner = Cleaner.extend({\n        init: function(options) {\n            Cleaner.fn.init.call(this, options);\n\n            this.junkReplacements = [\n                /<\\?xml[^>]*>/gi, '',\n                /<!--(.|\\n)*?-->/g, '', /* comments */\n                /&quot;/g, \"'\", /* encoded quotes (in attributes) */\n                /<o:p>&nbsp;<\\/o:p>/ig, '&nbsp;',\n                /<\\/?(meta|link|style|o:|v:|x:)[^>]*>((?:.|\\n)*?<\\/(meta|link|style|o:|v:|x:)[^>]*>)?/ig, '', /* external references and namespaced tags */\n                /<\\/o>/g, ''\n            ];\n            this.replacements = this.junkReplacements.concat([\n                /(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*(<\\/?(h[1-6]|hr|p|div|table|tbody|thead|tfoot|th|tr|td|li|ol|ul|caption|address|pre|form|blockquote|dl|dt|dd|dir|fieldset)[^>]*>)(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*/g, '$1',\n                /<br><br>/g, '<BR><BR>',\n                /<br>\\n/g, '<br/>',\n                /<br>(?!\\n)/g, ' ',\n                /<table([^>]*)>(\\s|&nbsp;)+<t/gi, '<table$1><t',\n                /<tr[^>]*>(\\s|&nbsp;)*<\\/tr>/gi, '',\n                /<tbody[^>]*>(\\s|&nbsp;)*<\\/tbody>/gi, '',\n                /<table[^>]*>(\\s|&nbsp;)*<\\/table>/gi, '',\n                /<BR><BR>/g, '<br>',\n                /^\\s*(&nbsp;)+/gi, '',\n                /(&nbsp;|<br[^>]*>)+\\s*$/gi, '',\n                /mso-[^;\"]*;?/ig, '', /* office-related CSS attributes */\n                /<(\\/?)b(\\s[^>]*)?>/ig, '<$1strong$2>',\n                /<(\\/?)font(\\s[^>]*)?>/ig, this.convertFontMatch,\n                /<(\\/?)i(\\s[^>]*)?>/ig, '<$1em$2>',\n                /style=([\"|'])\\s*\\1/g, '', /* empty style attributes */\n                /(<br[^>]*>)?\\n/g, function($0, $1) { return $1 ? $0 : ' '; } /* phantom extra line feeds */\n            ]);\n        },\n\n        convertFontMatch: function(match, closing, args) {\n            var faceRe = /face=['\"]([^'\"]+)['\"]/i;\n            var face = faceRe.exec(args);\n            var family = args && face && face[1];\n\n            if (closing) {\n                return '</span>';\n            } else if (family) {\n                return '<span style=\"font-family:' + family + '\">';\n            } else {\n                return '<span>';\n            }\n        },\n\n        applicable: function(html) {\n            return (/class=\"?Mso/i).test(html) ||\n                   (/style=\"[^\"]*mso-/i).test(html) ||\n                   (/urn:schemas-microsoft-com:office/).test(html);\n        },\n\n        stripEmptyAnchors: function(html) {\n            return html.replace(/<a([^>]*)>\\s*<\\/a>/ig, function(a, attributes) {\n                if (!attributes || attributes.indexOf(\"href\") < 0) {\n                    return \"\";\n                }\n\n                return a;\n            });\n        },\n\n        listType: function(p, listData) {\n            var html = p.innerHTML;\n            var text = dom.innerText(p);\n\n            var startingSymbol;\n            var matchSymbol = html.match(/^(?:<span [^>]*texhtml[^>]*>)?<span [^>]*(?:Symbol|Wingdings)[^>]*>([^<]+)/i);\n            var symbol = matchSymbol && matchSymbol[1];\n            var isNumber = /^[a-z\\d]/i.test(symbol);//including alpha-numeric and roman numerals\n\n            var trimStartText = function(text) {\n                return text.replace(/^(?:&nbsp;|[\\u00a0\\n\\r\\s])+/, '');\n            };\n\n            if (matchSymbol) {\n                startingSymbol = true;\n            }\n\n            html = html.replace(/<\\/?\\w+[^>]*>/g, '').replace(/&nbsp;/g, '\\u00a0');\n\n            if ((!startingSymbol && /^[\\u2022\\u00b7\\u00a7\\u00d8o]\\u00a0+/.test(html)) ||\n                (startingSymbol && /^.\\u00a0+/.test(html)) ||\n                (symbol && !isNumber && listData)) {\n                return {\n                    tag: 'ul',\n                    style: this._guessUnorderedListStyle(trimStartText(text))\n                };\n            }\n\n            if (/^\\s*\\w+[\\.\\)][\\u00a0 ]{2,}/.test(html)) {\n                return {\n                    tag: 'ol',\n                    style: this._guessOrderedListStyle(trimStartText(text))\n                };\n            }\n        },\n\n        _convertToLi: function(p) {\n            var content;\n\n            if (p.childNodes.length == 1) {\n                content = p.firstChild.nodeType === dom.nodeTypes.TEXT_NODE ? dom.innerText(p) : p.firstChild.innerHTML.replace(/^\\w+[\\.\\)](&nbsp;)+ /, \"\");\n                content = this._checkForBullet(content);\n            } else {\n                content = this._getHtmlNoBullet(p);\n            }\n\n            dom.remove(p);\n\n            return dom.create(document, 'li', { innerHTML: content });\n        },\n\n        _checkForBullet: function(html) {\n            var p = dom.create(document, 'p', { innerHTML: html });\n            var bulletRgx = /^\\s*\\w+[\\.\\)]\\s+/;\n\n            if (bulletRgx.test(p.innerText)) {\n                return this._getHtmlNoBullet(p);\n            }\n\n            return html;\n        },\n\n        _getHtmlNoBullet: function(element) {\n            var content,\n                name = dom.name(element);\n\n            dom.remove(element.firstChild);\n\n            // check for roman numerals\n            if (element.firstChild.nodeType == 3) {\n                if (/^[ivxlcdm]+\\.$/i.test(element.firstChild.nodeValue)) {\n                    dom.remove(element.firstChild);\n                }\n            }\n\n            if (/^(&nbsp;|\\s)+$/i.test(element.firstChild.innerHTML)) {\n                dom.remove(element.firstChild);\n            }\n\n            if (name != \"p\") {\n                content = \"<\" + name + \">\" + element.innerHTML + \"</\" + name + \">\";\n            } else {\n                content = element.innerHTML;\n            }\n\n            return content;\n        },\n\n        _guessUnorderedListStyle: function(symbol) {\n            if (/^[\\u2022\\u00b7\\u00FC\\u00D8\\u002dv-]/.test(symbol)) {\n                return null;//return \"disc\"; //default CSS value\n            } else if (/^o/.test(symbol)) {\n                return \"circle\";\n            } else {\n                return \"square\";\n            }\n        },\n        _guessOrderedListStyle: function(symbol) {\n            var listType = null;\n            if (!/^\\d/.test(symbol)) {\n                listType = (/^[a-z]/.test(symbol) ? 'lower-' : 'upper-') +\n                           (/^[ivxlcdm]/i.test(symbol) ? 'roman' : 'alpha');\n            }\n\n            return listType;\n        },\n\n        extractListLevels: function(html) {\n            var msoListRegExp = /style=['\"]?[^'\"]*?mso-list:\\s?[a-zA-Z]+(\\d+)\\s[a-zA-Z]+(\\d+)\\s(\\w+)/gi;\n\n            html = html.replace(msoListRegExp, function(match, list, level) {\n                return kendo.format('data-list=\"{0}\" data-level=\"{1}\" {2}', list, level, match);\n            });\n\n            return html;\n        },\n\n        _createList: function(type, styleType) {\n            return dom.create(document, type, {\n                style: { listStyleType: styleType }\n            });\n        },\n\n        lists: function(placeholder) {\n            var blockChildren = $(placeholder).find(dom.blockElements.join(',')),\n                lastMargin = -1,\n                name,\n                levels = {},\n                li,\n                rootMargin,\n                rootIndex,\n                lastRootLi,\n                isLastRootLi,\n                rootList,\n                i, p, type, margin, list, listData,\n                acceptedNameTags = [\"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n                isParentTable = false;\n\n            for (i = 0; i < blockChildren.length; i++) {\n                p = blockChildren[i];\n                listData = $(p).data();\n                var listIndex = listData.list;\n                name = dom.name(p);\n                isParentTable = !!$(p).parents(\"table\").length;\n\n                if (isParentTable) {\n                    continue;\n                }\n\n                var listType = this.listType(p, listData);\n                type = listType && listType.tag;\n\n                if (!type || acceptedNameTags.indexOf(name) < 0) {\n                    if (!p.innerHTML) {\n                        dom.remove(p);\n                    } else if (li && !isLastRootLi) {\n                        li.appendChild(p);\n                    }\n                    continue;\n                }\n\n                // not supported list levels in ie\n                if (browser.msie) {\n                    continue;\n                }\n\n                margin = listData.level || parseFloat(p.style.marginLeft || 0);\n\n                var levelType = type + listIndex;\n                if (!levels[margin]) {\n                    levels[margin] = {};\n                }\n\n                if (!rootMargin || rootMargin < 0) {\n                    rootMargin = margin;\n                    rootIndex = listIndex;\n                    lastRootLi = $(placeholder).find(\"[data-list='\" + rootIndex + \"']\").last()[0];\n                    rootList = this._createList(type, listType.style);\n                    dom.insertBefore(rootList, p);\n                    lastMargin = margin;\n                    levels[margin][levelType] = rootList;\n                }\n\n                isLastRootLi = lastRootLi === p;\n\n                list = levels[margin][levelType];\n\n                if (margin > lastMargin || !list) {\n                    list = this._createList(type, listType.style);\n                    levels[margin][levelType] = list;\n                    li.appendChild(list);\n                }\n\n                li = this._convertToLi(p);\n                list.appendChild(li);\n\n                if (isLastRootLi) {\n                    rootMargin = lastMargin = -1;\n                } else {\n                    lastMargin = margin;\n                }\n            }\n        },\n\n        removeAttributes: function(element) {\n            var attributes = element.attributes,\n                i = attributes.length,\n                significantStyles = [],\n                isSignificantCss = function(val) {\n                    var significantCss = [\"border\", \"background\", \"padding\"];\n\n                    return significantCss.filter(function(cssAttr) {\n                        return val.trim().indexOf(cssAttr) === 0;\n                    }).length > 0;\n                },\n                addSignificantStyles = function(val) {\n                    if (isSignificantCss(val)) {\n                        significantStyles.push(val.trim());\n                    }\n                },\n                attr, attributeName, attributeValues;\n\n            while (i--) {\n                if (dom.name(attributes[i]) != \"colspan\") {\n                    attr = attributes[i];\n                    attributeName = attr.name;\n\n                    if (attributeName === \"style\" && (element.nodeName === \"TD\" || element.nodeName === \"TH\")) {\n                        attributeValues = attr.value.split(\";\");\n                        attributeValues.forEach(addSignificantStyles);\n                    }\n\n                    element.removeAttributeNode(attributes[i]);\n                }\n            }\n\n            if (significantStyles.length > 0) {\n                element.setAttribute(\"style\", significantStyles.join(\";\"));\n            }\n        },\n\n        createColGroup: function(row) {\n            var cells = row.cells;\n            var table = $(row).closest(\"table\");\n            var colgroup = table.children(\"colgroup\");\n\n            if (cells.length < 2) {\n                return;\n            } else if (colgroup.length) {\n                cells = colgroup.children();\n                colgroup[0].parentNode.removeChild(colgroup[0]);\n            }\n\n            colgroup = $($.map(cells, function(cell) {\n                    var width = cell.width;\n                    if (width && parseInt(width, 10) !== 0) {\n                        return kendo.format('<col style=\"width:{0}px;\"/>', width);\n                    }\n\n                    return \"<col />\";\n                }).join(\"\"));\n\n            // jquery 1.9/2.0 discrepancy\n            if (!colgroup.is(\"colgroup\")) {\n                colgroup = $(\"<colgroup/>\").append(colgroup);\n            }\n\n            colgroup.prependTo(table);\n        },\n\n        convertHeaders: function(row) {\n            var cells = row.cells,\n                i,\n                boldedCells = $.map(cells, function(cell) {\n                    var child = $(cell).children(\"p\").children(\"strong\")[0];\n\n                    if (child && dom.name(child) == \"strong\") {\n                        return child;\n                    }\n                });\n\n            if (boldedCells.length == cells.length) {\n                for (i = 0; i < boldedCells.length; i++) {\n                    dom.unwrap(boldedCells[i]);\n                }\n\n                $(row).closest(\"table\")\n                    .find(\"colgroup\").after(\"<thead></thead>\").end()\n                    .find(\"thead\").append(row);\n\n                for (i = 0; i < cells.length; i++) {\n                    dom.changeTag(cells[i], \"th\");\n                }\n            }\n        },\n\n        removeParagraphs: function(cells) {\n            var i, j, len, cell, paragraphs;\n\n            for (i = 0; i < cells.length; i++) {\n                this.removeAttributes(cells[i]);\n\n                // remove paragraphs and insert line breaks between them\n                cell = $(cells[i]);\n                paragraphs = cell.children(\"p\");\n\n                for (j = 0, len = paragraphs.length; j < len; j++) {\n                    if (j < len - 1) {\n                        dom.insertAfter(dom.create(document, \"br\"), paragraphs[j]);\n                    }\n\n                    dom.unwrap(paragraphs[j]);\n                }\n            }\n        },\n\n        removeTextNodes: function(trs) {\n            var i, j, childNodes, currentNode, row;\n\n            for (i = 0; i < trs.length; i++) {\n                row = trs[i];\n                childNodes = row.childNodes;\n\n                for (j = 0; j < childNodes.length; j++) {\n                    currentNode = childNodes[j];\n\n                    if (currentNode.nodeType === dom.nodeTypes.TEXT_NODE) {\n                        row.removeChild(currentNode);\n                    }\n                }\n            }\n        },\n\n        tables: function(placeholder) {\n            var tables = $(placeholder).find(\"table\"),\n                that = this,\n                rows,\n                firstRow, longestRow, i, j;\n\n            for (i = 0; i < tables.length; i++) {\n                rows = tables[i].rows;\n                longestRow = firstRow = rows[0];\n\n                for (j = 1; j < rows.length; j++) {\n                    if (rows[j].cells.length > longestRow.cells.length) {\n                        longestRow = rows[j];\n                    }\n                }\n\n                that.createColGroup(longestRow);\n                that.convertHeaders(firstRow);\n\n                that.removeAttributes(tables[i]);\n\n                that.removeParagraphs(tables.eq(i).find(\"td,th\"));\n\n                that.removeTextNodes(tables.eq(i).find(\"tr\"));\n            }\n        },\n\n        headers: function(placeholder) {\n            var titles = $(placeholder).find(\"p.MsoTitle\");\n\n            for (var i = 0; i < titles.length; i++) {\n                dom.changeTag(titles[i], \"h1\");\n            }\n        },\n\n        removeFormatting: function(placeholder) {\n            $(placeholder).find(\"*\").each(function() {\n                $(this).css({\n                    fontSize: \"\",\n                    fontFamily: \"\"\n                });\n\n                if (!this.getAttribute(\"style\") && !this.style.cssText) {\n                    this.removeAttribute(\"style\");\n                }\n            });\n        },\n\n        clean: function(html) {\n            var that = this, placeholder;\n            var filters = this.options;\n\n            if (filters.none) {\n                html = Cleaner.fn.clean.call(that, html, this.junkReplacements);\n                html = that.stripEmptyAnchors(html);\n            } else {\n\n                html = filters.msConvertLists ? this.extractListLevels(html) : html;\n                html = Cleaner.fn.clean.call(that, html);\n                html = that.stripEmptyAnchors(html);\n\n                placeholder = dom.create(document, 'div', { innerHTML: html });\n                that.headers(placeholder);\n\n                if (filters.msConvertLists) {\n                    that.lists(placeholder);\n                }\n                that.tables(placeholder);\n\n                if (filters.msAllFormatting) {\n                    that.removeFormatting(placeholder);\n                }\n\n                html = placeholder.innerHTML.replace(/(<[^>]*)\\s+class=\"?[^\"\\s>]*\"?/ig, '$1');\n            }\n\n            return html;\n        }\n    });\n\n    var WebkitFormatCleaner = Cleaner.extend({\n        init: function(options) {\n            Cleaner.fn.init.call(this, options);\n\n            this.replacements = [\n                /\\s+class=\"Apple-style-span[^\"]*\"/gi, '',\n                /<(div|p|h[1-6])\\s+style=\"[^\"]*\"/gi, '<$1',\n                /^<div>(.*)<\\/div>$/, '$1'\n            ];\n        },\n\n        applicable: function(html) {\n            return (/class=\"?Apple-style-span|style=\"[^\"]*-webkit-nbsp-mode/i).test(html);\n        }\n    });\n\n    var DomCleaner = Cleaner.extend({\n        clean: function(html) {\n            var container = dom.create(document, 'div', { innerHTML: html });\n            container = this.cleanDom(container);\n            return container.innerHTML;\n        },\n\n        cleanDom: function(container) {\n            return container;\n        }\n    });\n\n    var HtmlTagsCleaner = DomCleaner.extend({\n        cleanDom: function(container) {\n            var tags = this.collectTags();\n\n            $(container).find(tags).each(function() {\n                dom.unwrap(this);\n            });\n\n            return container;\n        },\n\n        collectTags: function() {\n            if (this.options.span) {\n                return \"span\";\n            }\n        },\n\n        applicable: function() {\n            return this.options.span;\n        }\n    });\n\n    var HtmlAttrCleaner = DomCleaner.extend({\n        cleanDom: function(container) {\n            var attributes = this.collectAttr();\n            var nodes = $(container).find(\"[\" + attributes.join(\"],[\") + \"]\");\n            nodes.removeAttr(attributes.join(\" \"));\n\n            return container;\n        },\n\n        collectAttr: function() {\n            if (this.options.css) {\n                return [\"class\", \"style\"];\n            }\n\n            return [];\n        },\n\n        applicable: function() {\n            return this.options.css;\n        }\n    });\n\n    var TextContainer = function() {\n        this.text = \"\";\n        this.add = function(text) {\n            this.text += text;\n        };\n    };\n\n    var HtmlTextLines = Class.extend({\n        init: function(separators) {\n            this.separators = separators || {\n                    text: \" \",\n                    line: \"<br/>\"\n                };\n            this.lines = [];\n            this.inlineBlockText = [];\n            this.resetLine();\n        },\n\n        appendText: function(text) {\n            if (text.nodeType === 3) {\n                text = text.nodeValue;\n            }\n\n            this.textContainer.add(text);\n        },\n\n        appendInlineBlockText: function(text) {\n            this.inlineBlockText.push(text);\n        },\n\n        flashInlineBlockText: function() {\n            if (this.inlineBlockText.length) {\n                this.appendText(this.inlineBlockText.join(\" \"));\n                this.inlineBlockText = [];\n            }\n        },\n\n        endLine: function() {\n            this.flashInlineBlockText();\n            this.resetLine();\n        },\n\n        html: function() {\n            var separators = this.separators;\n            var result = \"\";\n            var lines = this.lines;\n\n            this.flashInlineBlockText();\n\n            for (var i = 0, il = lines.length, il1 = il - 1; i < il; i++) {\n                var line = lines[i];\n                for (var j = 0, jl = line.length, jl1 = jl - 1; j < jl; j++) {\n                    var text = line[j].text;\n                    result += text;\n                    if (j !== jl1) {\n                        result += separators.text;\n                    }\n                }\n                if (i !== il1) {\n                    result += separators.line;\n                }\n            }\n\n            return result;\n        },\n\n        resetLine: function() {\n            this.textContainer = new TextContainer();\n            this.line = [];\n            this.line.push(this.textContainer);\n            this.lines.push(this.line);\n        }\n    });\n\n    var DomEnumerator = Class.extend({\n        init: function(callback) {\n            this.callback = callback;\n        },\n        enumerate: function(node) {\n            if (!node) {\n                return;\n            }\n\n            var preventDown = this.callback(node);\n\n            var child = node.firstChild;\n            if (!preventDown && child) {\n                this.enumerate(child);\n            }\n\n            this.enumerate(node.nextSibling);\n        }\n    });\n\n    var HtmlContentCleaner = Cleaner.extend({\n        init: function(options) {\n            Cleaner.fn.init.call(this, options);\n            this.hasText = false; //unpleasant flag to prevent an empty line at the beginning of the generated content.\n            this.enumerator = new DomEnumerator(this.buildText.bind(this));\n        },\n\n        clean: function(html) {\n            var container = dom.create(document, 'div', { innerHTML: html });\n\n            return this.cleanDom(container);\n        },\n\n        cleanDom: function(container) {\n            this.separators = this.getDefaultSeparators();\n            this.htmlLines = new HtmlTextLines(this.separators);\n            this.enumerator.enumerate(container.firstChild);\n            this.hasText = false;\n\n            return this.htmlLines.html();\n        },\n\n        buildText: function(node) {\n            if (dom.isDataNode(node)) {\n                if (dom.isEmptyspace(node)) {\n                    return;\n                }\n                this.htmlLines.appendText(node.nodeValue.replace('\\n', this.separators.line));\n                this.hasText = true;\n            } else if (dom.isBlock(node) && this.hasText) {\n                var action = this.actions[dom.name(node)] || this.actions.block;\n                return action(this, node);\n            } else if (dom.isBr(node)) {\n                this.htmlLines.appendText(this.separators.line);\n            }\n        },\n\n        applicable: function() {\n            var o = this.options;\n            return o.all || o.keepNewLines;\n        },\n\n        getDefaultSeparators: function() {\n            if (this.options.all) {\n                return { text: \" \", line: \" \" };\n            } else {\n                return { text: \" \", line: \"<br/>\" };\n            }\n        },\n\n        actions: {\n            ul: $.noop,\n            ol: $.noop,\n            table: $.noop,\n            thead: $.noop,\n            tbody: $.noop,\n            td: function(cleaner, node) {\n                var tdCleaner = new HtmlContentCleaner({ all: true });\n\n                var cellText = tdCleaner.cleanDom(node);\n                cleaner.htmlLines.appendInlineBlockText(cellText);\n\n                return true;\n            },\n\n            block: function(cleaner) {\n                cleaner.htmlLines.endLine();\n            }\n        }\n    });\n\n    var CustomCleaner = Cleaner.extend({\n        clean: function(html) {\n            return this.options.custom(html);\n        },\n\n        applicable: function() {\n            return typeof(this.options.custom) === \"function\";\n        }\n    });\n\n    extend(editorNS, {\n        Clipboard: Clipboard,\n        Cleaner: Cleaner,\n        ScriptCleaner: ScriptCleaner,\n        TabCleaner: TabCleaner,\n        MSWordFormatCleaner: MSWordFormatCleaner,\n        WebkitFormatCleaner: WebkitFormatCleaner,\n        HtmlTagsCleaner: HtmlTagsCleaner,\n        HtmlAttrCleaner: HtmlAttrCleaner,\n        HtmlContentCleaner: HtmlContentCleaner,\n        HtmlTextLines: HtmlTextLines,\n        CustomCleaner: CustomCleaner\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        editorNS = kendo.ui.editor,\n        RangeUtils = editorNS.RangeUtils,\n        dom = editorNS.Dom,\n        RestorePoint = editorNS.RestorePoint,\n        Marker = editorNS.Marker,\n        browser = kendo.support.browser,\n        bomSpan = \"<span  class='k-br'>\\ufeff</span>\",\n        extend = $.extend;\n    var nodeTypes = dom.nodeTypes;\n    var PREVIOUS_SIBLING = \"previousSibling\";\n\n    function selected(node, range) {\n        return range.startContainer === node && range.endContainer === node &&\n            range.startOffset === 0 && range.endOffset == node.childNodes.length;\n    }\n\n    function getSibling(node, direction, condition) {\n        var sibling = node ? node[direction] : null;\n\n        while (sibling && !condition(sibling)) {\n            sibling = sibling[direction];\n        }\n\n        return sibling;\n    }\n\n    var tableCells = \"td,th,caption\";\n    var tableCellsWrappers = \"table,tbody,thead,tfoot,tr\";\n    var tableElements = tableCellsWrappers + \",\" + tableCells;\n    var inTable = function(range) { return !range.collapsed && $(range.commonAncestorContainer).is(tableCellsWrappers); };\n\n    var RemoveTableContent = Class.extend({\n        remove: function(range) {\n            var that = this;\n            var marker = new Marker();\n            marker.add(range, false);\n\n            var nodes = RangeUtils.getAll(range, function(node) { return $(node).is(tableElements); });\n            var doc = RangeUtils.documentFromRange(range);\n            var start = marker.start;\n            var end = marker.end;\n            var cellsTypes = tableCells.split(\",\");\n            var startCell = dom.parentOfType(start, cellsTypes);\n            var endCell = dom.parentOfType(end, cellsTypes);\n            that._removeContent(start, startCell, true);\n            that._removeContent(end, endCell, false);\n            $(nodes).each(function(i, node) {\n                node = $(node);\n                (node.is(tableCells) ? node : node.find(tableCells)).each(function(j, cell) {\n                    cell.innerHTML = \"&#65279;\";\n                });\n            });\n            if (startCell && !start.previousSibling) {\n                dom.insertBefore(doc.createTextNode(\"\\ufeff\"), start);\n            }\n            if (endCell && !end.nextSibling) {\n                dom.insertAfter(doc.createTextNode(\"\\ufeff\"), end);\n            }\n            if (startCell) {\n                range.setStartBefore(start);\n            } else if (nodes[0]) {\n                startCell = $(nodes[0]);\n                startCell = startCell.is(tableCells) ? startCell : startCell.find(tableCells).first();\n                if (startCell.length) {\n                    range.setStart(startCell.get(0), 0);\n                }\n            }\n\n            range.collapse(true);\n\n            dom.remove(start);\n            dom.remove(end);\n        },\n        _removeContent: function(start, top, forwards) {\n            if (top) {\n                var sibling = forwards ? \"nextSibling\" : \"previousSibling\",\n                    next,\n                    getNext = function(node) {\n                        while (node && !node[sibling]) {\n                            node = node.parentNode;\n                        }\n                        return node && $.contains(top, node) ? node[sibling] : null;\n                    };\n                start = getNext(start);\n                while (start) {\n                    next = getNext(start);\n                    dom.remove(start);\n                    start = next;\n                }\n            }\n        }\n    });\n\n    var TypingHandler = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n        },\n\n        keydown: function(e) {\n            var that = this,\n                editor = that.editor,\n                keyboard = editor.keyboard,\n                isTypingKey = keyboard.isTypingKey(e),\n                evt = extend($.Event(), e);\n\n            that.editor.trigger(\"keydown\", evt);\n\n            if (evt.isDefaultPrevented()) {\n                e.preventDefault();\n                return true;\n            }\n\n            if (!evt.isDefaultPrevented() && isTypingKey && !keyboard.isTypingInProgress()) {\n                var range = editor.getRange();\n                var body = editor.body;\n                that.startRestorePoint = new RestorePoint(range, body);\n\n                if (inTable(range)) {\n                    var removeTableContent = new RemoveTableContent(editor);\n                    removeTableContent.remove(range);\n                    editor.selectRange(range);\n                }\n\n                if (browser.webkit && !range.collapsed && selected(body, range)) {\n                    body.innerHTML = \"\";\n                }\n\n                if (editor.immutables && editorNS.Immutables.immutablesContext(range)) {\n                    var backspaceHandler = new editorNS.BackspaceHandler(editor);\n                    backspaceHandler.deleteSelection(range);\n                }\n\n                keyboard.startTyping(function() {\n                    that._removeBomSpan();\n                    that.endRestorePoint = editorNS._finishUpdate(editor, that.startRestorePoint);\n                });\n\n                return true;\n            }\n\n            return false;\n        },\n\n        keyup: function(e) {\n            var keyboard = this.editor.keyboard;\n\n            this.editor.trigger(\"keyup\", e);\n\n            if (keyboard.isTypingInProgress()) {\n                keyboard.endTyping();\n                return true;\n            }\n\n            return false;\n        },\n\n        _removeBomSpan: function() {\n            var node = this.editor.getRange().commonAncestorContainer;\n\n            if (!dom.emptyNode(node)) {\n                if (node.nodeType === 3) {\n                    node = node.parentNode;\n                }\n\n                if (dom.insignificant(node)) {\n                    // typing in an insignificant node\n                    // make it significant\n                    node.textContent = dom.stripBom(node.textContent);\n                    dom.unwrap(node);\n                }\n            }\n        }\n    });\n\n    var BackspaceHandler = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n        },\n        _addCaret: function(container) {\n            var caret = dom.create(this.editor.document, \"a\");\n\n            // Only if not Chrome: Make sure to include cared in the formatted inline node\n            if (!kendo.support.browser.chrome && container.firstChild &&\n                container.firstChild.nodeType === nodeTypes.ELEMENT_NODE) {\n\n                container = container.firstChild;\n            }\n\n            dom.insertAt(container, caret, 0);\n            dom.stripBomNode(caret.previousSibling);\n            dom.stripBomNode(caret.nextSibling);\n            return caret;\n        },\n        _restoreCaret: function(caret) {\n            var range = this.editor.createRange();\n\n            if (!caret.nextSibling && dom.isDataNode(caret.previousSibling)) {\n                range.setStart(caret.previousSibling, caret.previousSibling.length);\n            } else {\n                range.setStartAfter(caret);\n            }\n\n            range.collapse(true);\n            this.editor.selectRange(range);\n            dom.remove(caret);\n        },\n        _handleDelete: function(range) {\n            var node = range.endContainer;\n            var block = dom.closestEditableOfType(node, dom.blockElements);\n\n            if (block && editorNS.RangeUtils.isEndOf(range, block)) {\n                // join with next sibling\n                var next = dom.next(block);\n                if (!next || dom.name(next) != \"p\") {\n                    return false;\n                }\n\n                var caretPlaceholder = dom.significantChildNodes(next)[0];\n                caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder)) ? caretPlaceholder : next;\n                var caret = this._addCaret(caretPlaceholder);\n\n                this._merge(block, next);\n\n                this._restoreCaret(caret);\n\n                return true;\n            }\n\n            return false;\n        },\n        _cleanBomBefore: function(range) {\n            var offset = range.startOffset;\n            var node = range.startContainer;\n            var text = node.nodeValue;\n            var count = 0;\n            while (offset - count >= 0 && text[offset - count - 1] == \"\\ufeff\") {\n                count++;\n            }\n\n            if (count > 0) {\n                node.deleteData(offset - count, count);\n\n                range.setStart(node, Math.max(0, offset - count));\n                range.collapse(true);\n\n                this.editor.selectRange(range);\n            }\n        },\n        _handleBackspace: function(range) {\n            var node = range.startContainer;\n            var li = dom.closestEditableOfType(node, ['li']);\n            var block = dom.closestEditableOfType(node, 'p,h1,h2,h3,h4,h5,h6'.split(','));\n            var editor = this.editor;\n            var previousSibling;\n\n            if (dom.isDataNode(node)) {\n                if (range.collapsed && /^\\s[\\ufeff]+$/.test(node.nodeValue)) {\n                    range.setStart(node, 0);\n                    range.setEnd(node, node.length);\n                    editor.selectRange(range);\n                    return false;\n                }\n                this._cleanBomBefore(range);\n            }\n\n            previousSibling = getSibling(block, PREVIOUS_SIBLING, function(sibling) {\n                return !dom.htmlIndentSpace(sibling);\n            });\n\n            //deleting the first list item with empty content in IE results in invalid range\n            if (range.collapsed && range.startOffset !== range.endOffset && range.startOffset < 0) {\n                range.startOffset = 0;\n                range.endOffset = 0;\n                editor.selectRange(range);\n            }\n\n            var startAtLi = li && editorNS.RangeUtils.isStartOf(range, li);\n            var liIndex = li && $(li).index();\n            var startAtNonFirstLi = startAtLi && liIndex > 0;\n            if (startAtNonFirstLi) {\n                block = li;\n                previousSibling = dom.prev(li);\n            }\n\n            if (block && previousSibling && dom.is(previousSibling, 'table') && editorNS.RangeUtils.isStartOf(range, block)) {\n                if (block.innerText === '') {\n                    block.innerHTML = '\\ufeff';\n                }\n                return true;\n            }\n\n            // outdent\n            if (editorNS.RangeUtils.isStartOf(range, block) && parseInt(block.style.marginLeft,10) > 0) {\n                editor.exec(\"outdent\");\n                return true;\n            }\n\n            // unwrap block\n            if ((block && previousSibling && editorNS.RangeUtils.isStartOf(range, block)) || startAtNonFirstLi) {\n                var caretPlaceholder = dom.significantChildNodes(block)[0];\n                caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder) && !dom.isImg(caretPlaceholder)) ? caretPlaceholder : block;\n\n                var caret = this._addCaret(caretPlaceholder);\n                this._merge(previousSibling, block);\n                this._restoreCaret(caret);\n\n                return true;\n            }\n\n            // unwrap li element\n            if (startAtLi && liIndex === 0) {\n                var child = li.firstChild;\n                if (!child) {\n                    li.innerHTML = editorNS.emptyElementContent;\n                    child = li.firstChild;\n                }\n\n                var formatter = new editorNS.ListFormatter(dom.name(li.parentNode), \"p\");\n                range.selectNodeContents(li);\n                formatter.toggle(range);\n\n                if (dom.insignificant(child)) {\n                    range.setStartBefore(child);\n                } else {\n                    range.setStart(child, 0);\n                }\n\n                editor.selectRange(range);\n\n                return true;\n            }\n\n            var rangeStartNode = node.childNodes[range.startOffset - 1];\n            var linkRange = range;\n            var anchor = rangeStartNode && dom.closestEditableOfType(rangeStartNode, ['a']);\n            var previousNode = getSibling(rangeStartNode || node, PREVIOUS_SIBLING, function(sibling) {\n                return !dom.isDataNode(sibling) || (!dom.isBom(sibling) && sibling.length > 0);\n            });\n            if (anchor || ((range.startOffset === 0 || rangeStartNode) && dom.is(previousNode, \"a\"))) {\n                anchor = anchor || previousNode;\n                linkRange = editor.createRange();\n                linkRange.setStart(anchor, anchor.childNodes.length);\n                linkRange.collapse(true);\n            }\n\n            anchor = anchor || dom.closestEditableOfType(rangeStartNode || linkRange.startContainer, ['a']);\n            var isEndOfLink = anchor && editorNS.RangeUtils.isEndOf(linkRange, anchor);\n            if (isEndOfLink) {\n                var command = new editorNS.UnlinkCommand({ range: linkRange, body: editor.body, immutables: !!editor.immutables });\n                editor.execCommand(command);\n                editor._selectionChange();\n            }\n            return false;\n        },\n        _handleSelection: function(range) {\n            var ancestor = range.commonAncestorContainer;\n            var table = dom.closest(ancestor, \"table\");\n            var emptyParagraphContent = editorNS.emptyElementContent;\n            var editor = this.editor;\n            var parentElementOrNode;\n\n            if (inTable(range)) {\n                var removeTableContent = new RemoveTableContent(editor);\n                removeTableContent.remove(range);\n                editor.selectRange(range);\n                return true;\n            }\n\n            var marker = new Marker();\n            marker.add(range, false);\n\n            if (range.commonAncestorContainer === editor.body) {\n                this._surroundFullyContent(marker, range);\n            }\n\n            if (editor.immutables) {\n                this._handleImmutables(marker);\n            }\n\n            this._surroundFullySelectedAnchor(marker, range);\n\n            range.setStartAfter(marker.start);\n            range.setEndBefore(marker.end);\n\n            var start = range.startContainer;\n            var end = range.endContainer;\n\n            range.deleteContents();\n\n            if (end.tagName.toLocaleLowerCase() === \"li\" && dom.emptyNode(end)) {\n                range.selectNode(end);\n                range.deleteContents();\n            }\n\n            if (table && $(table).text() === \"\") {\n                range.selectNode(table);\n                range.deleteContents();\n            }\n\n            ancestor = range.commonAncestorContainer;\n\n            if (dom.name(ancestor) === \"p\" && ancestor.innerHTML === \"\") {\n                ancestor.innerHTML = emptyParagraphContent;\n                range.setStart(ancestor, 0);\n            }\n\n            this._join(start, end);\n\n            dom.insertAfter(editor.document.createTextNode(\"\\ufeff\"), marker.start);\n            marker.remove(range);\n\n            start = range.startContainer;\n            if (dom.name(start) == \"tr\") {\n                start = start.childNodes[Math.max(0, range.startOffset - 1)];\n                range.setStart(start, dom.getNodeLength(start));\n            }\n\n            range.collapse(true);\n\n            editor.selectRange(range);\n\n            parentElementOrNode = start.parentElement || start.parentNode;\n\n            if (dom.isDataNode(start) && !dom.emptyNode(parentElementOrNode)) {\n                this._cleanBomBefore(range);\n            }\n\n            return true;\n        },\n        _handleImmutables: function(marker) {\n            var immutableParent = editorNS.Immutables.immutableParent;\n            var startImmutable = immutableParent(marker.start);\n            var endImmutable = immutableParent(marker.start);\n            if (startImmutable) {\n                dom.insertBefore(marker.start, startImmutable);\n            }\n            if (endImmutable) {\n                dom.insertAfter(marker.end, endImmutable);\n            }\n            if (startImmutable) {\n                dom.remove(startImmutable);\n            }\n            if (endImmutable && endImmutable.parentNode) {\n                dom.remove(endImmutable);\n            }\n        },\n        _surroundFullyContent: function(marker, range) {\n            var children = range.commonAncestorContainer.children,\n                startParent = children[0],\n                endParent = children[children.length - 1];\n\n            this._moveMarker(marker, range, startParent, endParent);\n        },\n        _surroundFullySelectedAnchor: function(marker, range) {\n            var start = marker.start,\n                startParent = $(start).closest(\"a\").get(0),\n                end = marker.end,\n                endParent = $(end).closest(\"a\").get(0);\n\n            this._moveMarker(marker, range, startParent, endParent);\n        },\n        _moveMarker: function(marker, range, startParent, endParent) {\n            var start = marker.start,\n                end = marker.end;\n\n            if (startParent && RangeUtils.isStartOf(range, startParent)) {\n                dom.insertBefore(start, startParent);\n            }\n\n            if (endParent && RangeUtils.isEndOf(range, endParent)) {\n                dom.insertAfter(end, endParent);\n            }\n        },\n        _root: function(node) {\n            while (node && dom.name(node) != \"body\" && node.parentNode && dom.name(node.parentNode) != \"body\") {\n                node = node.parentNode;\n            }\n\n            return node;\n        },\n        _join: function(start, end) {\n            start = this._root(start);\n            end = this._root(end);\n\n            if (start != end && dom.is(end, \"p\")) {\n                this._merge(start, end);\n            }\n        },\n        _merge: function(dest, src) {\n            dom.removeTrailingBreak(dest);\n\n            while (dest && src.firstChild) {\n                if (dest.nodeType == 1) {\n                    dest = dom.list(dest) ? dest.children[dest.children.length - 1] : dest;\n\n                    if (dest) {\n                        dest.appendChild(src.firstChild);\n                    }\n                } else if (dest.nodeType === nodeTypes.TEXT_NODE) {\n                    this._mergeWithTextNode(dest, src.firstChild);\n                } else {\n                    dest.parentNode.appendChild(src.firstChild);\n                }\n            }\n\n            dom.remove(src);\n        },\n\n        _mergeWithTextNode: function(textNode, appendedNode) {\n            if (textNode && textNode.nodeType === nodeTypes.TEXT_NODE) {\n                if (textNode.nextSibling && this._isCaret(textNode.nextSibling)) {\n                    dom.insertAfter(appendedNode, textNode.nextSibling);\n                }\n                else {\n                    dom.insertAfter(appendedNode, textNode);\n                }\n            }\n        },\n\n        _isCaret: function(element) {\n            return $(element).is(\"a\");\n        },\n\n        keydown: function(e) {\n            var method, startRestorePoint;\n            var editor = this.editor;\n            var range = editor.getRange();\n            var keyCode = e.keyCode;\n            var keys = kendo.keys;\n            var backspace = keyCode === keys.BACKSPACE;\n            var del = keyCode == keys.DELETE;\n\n            if (editor.immutables && editor.immutables.keydown(e, range)) {\n                return;\n            }\n\n            if ((backspace || del) && !range.collapsed) {\n                method = \"_handleSelection\";\n            } else if (backspace) {\n                method = \"_handleBackspace\";\n            } else if (del) {\n                method = \"_handleDelete\";\n            }\n\n            if (!method) {\n                return;\n            }\n\n            startRestorePoint = new RestorePoint(range, editor.body);\n\n            if (this[method](range)) {\n                e.preventDefault();\n\n                editorNS._finishUpdate(editor, startRestorePoint);\n            }\n        },\n        deleteSelection: function(range) {\n            this._handleSelection(range);\n        },\n        keyup: $.noop\n    });\n\n    var SystemHandler = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n            this.systemCommandIsInProgress = false;\n        },\n\n        createUndoCommand: function() {\n            this.startRestorePoint = this.endRestorePoint = editorNS._finishUpdate(this.editor, this.startRestorePoint);\n        },\n\n        changed: function() {\n            if (this.startRestorePoint) {\n                return this.startRestorePoint.html != this.editor.body.innerHTML;\n            }\n\n            return false;\n        },\n\n        keydown: function(e) {\n            var that = this,\n                editor = that.editor,\n                keyboard = editor.keyboard;\n\n            if (keyboard.isModifierKey(e)) {\n\n                if (keyboard.isTypingInProgress()) {\n                    keyboard.endTyping(true);\n                }\n\n                that.startRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n                return true;\n            }\n\n            if (keyboard.isSystem(e)) {\n                that.systemCommandIsInProgress = true;\n\n                if (that.changed()) {\n                    that.systemCommandIsInProgress = false;\n                    that.createUndoCommand();\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        keyup: function() {\n            var that = this;\n\n            if (that.systemCommandIsInProgress && that.changed()) {\n                that.systemCommandIsInProgress = false;\n                that.createUndoCommand();\n                return true;\n            }\n\n            return false;\n        }\n    });\n\n    var SelectAllHandler = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n        },\n\n        keydown: function(e) {\n            if (!browser.webkit || e.isDefaultPrevented() ||\n                !(e.ctrlKey && e.keyCode == 65 && !e.altKey && !e.shiftKey)) {\n                return;\n            }\n            if (this.editor.options.immutables) {\n                this._toSelectableImmutables();\n            }\n            this._selectEditorBody();\n        },\n\n        _selectEditorBody: function() {\n            var editor = this.editor;\n            var range = editor.getRange();\n            range.selectNodeContents(editor.body);\n\n            setTimeout(function() {\n                editor.selectRange(range);\n            });\n        },\n\n        _toSelectableImmutables: function() {\n            var editor = this.editor,\n                body = editor.body,\n                immutable = editorNS.Immutables.immutable,\n                emptyTextNode = dom.emptyTextNode,\n                first = body.firstChild,\n                last = body.lastChild;\n\n            while (emptyTextNode(first)) {\n                first = first.nextSibling;\n            }\n\n            while (emptyTextNode(last)) {\n                last = last.previousSibling;\n            }\n\n            if (first && immutable(first)) {\n                $(bomSpan).prependTo(body);\n            }\n\n            if (last && immutable(last)) {\n                $(bomSpan).appendTo(body);\n            }\n        },\n\n        keyup: $.noop\n    });\n\n    var Keyboard = Class.extend({\n        init: function(handlers) {\n            this.handlers = handlers;\n            this.typingInProgress = false;\n        },\n\n        isCharacter: function(keyCode) {\n            return (keyCode >= 48 && keyCode <= 90) || (keyCode >= 96 && keyCode <= 111) ||\n                   (keyCode >= 186 && keyCode <= 192) || (keyCode >= 219 && keyCode <= 222) ||\n                   keyCode == 229;\n        },\n\n        toolFromShortcut: function(tools, e) {\n            var key = String.fromCharCode(e.keyCode),\n                toolName,\n                toolOptions,\n                modifier = this._getShortcutModifier(e, navigator.platform);\n\n            for (toolName in tools) {\n                toolOptions = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n                if ((toolOptions.key == key || toolOptions.key == e.keyCode) &&\n                    toolOptions.ctrl == modifier &&\n                    toolOptions.alt == e.altKey &&\n                    toolOptions.shift == e.shiftKey) {\n                    return toolName;\n                }\n            }\n        },\n\n        _getShortcutModifier: function(e, platform) {\n            var mac = platform.toUpperCase().indexOf('MAC') >= 0;\n            return mac ? e.metaKey : e.ctrlKey;\n        },\n\n        toolsFromShortcut: function(tools, e) {\n            var key = String.fromCharCode(e.keyCode),\n                toolName,\n                o,\n                matchesKey,\n                found = [];\n            var matchKey = function(toolKey) { return toolKey == key || toolKey == e.keyCode || toolKey == e.charCode; };\n\n            for (toolName in tools) {\n                o = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n                matchesKey = Array.isArray(o.key) ? $.grep(o.key, matchKey).length > 0 : matchKey(o.key);\n                if (matchesKey &&\n                    o.ctrl == e.ctrlKey &&\n                    o.alt == e.altKey &&\n                    o.shift == e.shiftKey) {\n                    found.push(tools[toolName]);\n                }\n            }\n\n            return found;\n        },\n\n        isTypingKey: function(e) {\n            var keyCode = e.keyCode;\n            return (this.isCharacter(keyCode) && !e.ctrlKey && !e.altKey) ||\n                   keyCode == 32 || keyCode == 13 || keyCode == 8 ||\n                   (keyCode == 46 && !e.shiftKey && !e.ctrlKey && !e.altKey);\n        },\n\n        isModifierKey: function(e) {\n            var keyCode = e.keyCode;\n            return (keyCode == 17 && !e.shiftKey && !e.altKey) ||\n                   (keyCode == 16 && !e.ctrlKey && !e.altKey) ||\n                   (keyCode == 18 && !e.ctrlKey && !e.shiftKey);\n        },\n\n        isSystem: function(e) {\n            return e.keyCode == 46 && e.ctrlKey && !e.altKey && !e.shiftKey;\n        },\n\n        startTyping: function(callback) {\n            this.onEndTyping = callback;\n            this.typingInProgress = true;\n        },\n\n        stopTyping: function() {\n            if (this.typingInProgress && this.onEndTyping) {\n                this.onEndTyping();\n            }\n            this.typingInProgress = false;\n        },\n\n        endTyping: function(force) {\n            var that = this;\n            that.clearTimeout();\n            if (force) {\n                that.stopTyping();\n            } else {\n                that.timeout = window.setTimeout(that.stopTyping.bind(that), 1000);\n            }\n        },\n\n        isTypingInProgress: function() {\n            return this.typingInProgress;\n        },\n\n        clearTimeout: function() {\n            window.clearTimeout(this.timeout);\n        },\n\n        notify: function(e, what) {\n            var i, handlers = this.handlers;\n\n            for (i = 0; i < handlers.length; i++) {\n                if (handlers[i][what](e)) {\n                    break;\n                }\n            }\n        },\n\n        keydown: function(e) {\n            this.notify(e, 'keydown');\n        },\n\n        keyup: function(e) {\n            this.notify(e, 'keyup');\n        }\n    });\n\n    extend(editorNS, {\n        TypingHandler: TypingHandler,\n        SystemHandler: SystemHandler,\n        BackspaceHandler: BackspaceHandler,\n        SelectAllHandler: SelectAllHandler,\n        Keyboard: Keyboard\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            editorNS = kendo.ui.editor,\n            Command = editorNS.Command,\n            EditorUtils = editorNS.EditorUtils,\n            registerTool = EditorUtils.registerTool,\n            Tool = editorNS.Tool,\n            extend = $.extend;\n\n    var ExportPdfCommand = Command.extend({\n        init: function(options) {\n            this.async = true;\n            Command.fn.init.call(this, options);\n        },\n\n        exec: function() {\n            var that = this;\n            var range = that.lockRange(true);\n            var editor = that.editor;\n\n            editor._destroyResizings();\n\n            editor.saveAsPDF().then(function() {\n                that.releaseRange(range);\n                editor._initializeColumnResizing();\n                editor._initializeRowResizing();\n                editor._initializeElementResizing();\n            });\n        }\n    });\n\n    extend(editorNS, {\n        ExportPdfCommand: ExportPdfCommand\n    });\n\n    registerTool(\"pdf\", new Tool({ command: ExportPdfCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            editorNS = kendo.ui.editor,\n            Command = editorNS.Command,\n            EditorUtils = editorNS.EditorUtils,\n            registerTool = EditorUtils.registerTool,\n            Tool = editorNS.Tool,\n            extend = $.extend;\n\n    var PrintCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n\n            this.managesUndoRedo = true;\n        },\n\n        exec: function() {\n            var editor = this.editor;\n\n            if (kendo.support.browser.msie) {\n                editor.document.execCommand(\"print\", false, null);\n            } else if (editor.window.print) {\n                editor.window.print();\n            }\n        }\n    });\n\n    extend(editorNS, {\n        PrintCommand: PrintCommand\n    });\n\n    registerTool(\"print\", new Tool({ command: PrintCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        Editor = kendo.ui.editor,\n        Tool = Editor.Tool,\n        Command = Editor.Command,\n        EditorUtils = Editor.EditorUtils,\n        dom = Editor.Dom,\n        RangeUtils = Editor.RangeUtils,\n        registerTool = EditorUtils.registerTool;\n\n    var CopyFormatCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n        },\n\n        exec: function() {\n            var range = this.lockRange(true);\n            this.inlineStyles = [];\n            this.blockStyles = [];\n            this.collectStyles(range);\n            this.editor.inlineStyles = this.inlineStyles;\n            this.editor.blockStyles = this.blockStyles;\n            this.releaseRange(range);\n        },\n\n        collectStyles: function(range) {\n            var rangeNodes = RangeUtils.nodes(range);\n            var node;\n\n            if (rangeNodes.length === 1) {\n                node = rangeNodes[0].parentNode;\n            } else {\n                node = range.startContainer;\n            }\n\n            while (node && !dom.is(node, \"body\") && node.getAttribute(\"data-role\") !== \"editor\") {\n                if (dom.isBlock(node)) {\n                    this.populateStyles(node, \"blockStyles\");\n                    if (dom.is(node, \"li\")) {\n                        node = node.parentNode;\n                    } else {\n                        node = null;\n                    }\n                } else {\n                    this.populateStyles(node, \"inlineStyles\");\n                    node = node.parentNode;\n                }\n            }\n        },\n\n        populateStyles: function(node, destination) {\n            var styles = node.style;\n            var attributes = node.attributes;\n            var nodeStyles = {\n                tags: [ node.tagName ],\n                attr: {\n                    style: {}\n                }\n            };\n            var styleValue, styleKey, attributeKey, attributeValue, i;\n\n            for (i = 0; styles && i < styles.length; i++) {\n                styleKey = styles[i];\n                styleValue = styles[styleKey];\n                nodeStyles.attr.style[styleKey] = styleValue;\n            }\n\n            for (i = 0; attributes && i < attributes.length; i++) {\n                attributeKey = attributes[i].nodeName;\n                attributeValue = attributes[i].nodeValue;\n                if (attributeKey === \"style\") {\n                    continue;\n                } else if (attributeKey === \"class\") {\n                    nodeStyles.attr.className = attributeValue;\n                } else {\n                    nodeStyles.attr[attributeKey] = attributeValue;\n                }\n            }\n\n            this[destination].push(nodeStyles);\n        }\n    });\n\n    var ApplyFormatCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n        },\n\n        exec: function() {\n            var range = this.lockRange(true);\n            var markers = RangeUtils.getMarkers(range);\n            var editor = this.editor;\n            var inlineStyles = editor.inlineStyles;\n            var blockStyles = editor.blockStyles;\n            var nodes;\n\n            if ((!inlineStyles || inlineStyles.length === 0) && (!blockStyles || blockStyles.length === 0)) {\n                return;\n            }\n\n            if (markers.length === 3) {\n                this.marker.removeCaret(range);\n                this.marker.caret = null;\n            }\n\n            this.removeEmptyElementsFromRange(range);\n            nodes = RangeUtils.nodes(range);\n            this.cleanInlineParents(nodes);\n            dom.normalize(range.commonAncestorContainer);\n\n            if (markers.length === 2) {\n                range.setStartAfter(markers[0]);\n                range.setEndBefore(markers[1]);\n            } else {\n                range.setStartBefore(nodes[0]);\n                range.setEndAfter(nodes[0]);\n            }\n\n            nodes = RangeUtils.nodes(range);\n\n            if (nodes && blockStyles && blockStyles.length) {\n                this.applyBlockStyles(nodes, blockStyles);\n            }\n\n            if (nodes && inlineStyles && inlineStyles.length) {\n                this.applyInlineStyles(nodes, inlineStyles);\n            }\n\n            this.releaseRange(range);\n        },\n\n        removeEmptyElementsFromRange: function(range) {\n            var isEmptyInline = function(node) {\n                return dom.isInline(node) && !node.firstChild && !dom.isMarker(node);\n            };\n            var emptyElements, i;\n\n            emptyElements = RangeUtils.getAll(range, isEmptyInline);\n\n            if (emptyElements && emptyElements.length > 0) {\n                for (i = 0; i < emptyElements.length; i++) {\n                    emptyElements[i].parentNode.removeChild(emptyElements[i]);\n                }\n            }\n        },\n\n        cleanInlineParents: function(nodes) {\n            var i, node, parent, children, j, child, newNode;\n\n            for (i = 0; i < nodes.length; i++) {\n                node = nodes[i];\n                parent = node.parentNode;\n\n                if (this.immutableParent(node)) {\n                    continue;\n                }\n\n                while (parent && dom.isInline(parent)) {\n                    children = parent.childNodes;\n\n                    for (j = 0; j < children.length; j++) {\n                        child = children[j];\n\n                        if (!dom.isMarker(child) && child !== node) {\n                            newNode = parent.cloneNode(true);\n                            newNode.innerHTML = \"\";\n                            dom.wrap(child, newNode);\n                        }\n                    }\n\n                    dom.unwrap(parent);\n                    parent = node.parentNode;\n                }\n            }\n        },\n\n        applyBlockStyles: function(nodes, blockStyles) {\n            var formatTag = blockStyles[0].tags[0];\n            var attr = blockStyles[0].attr;\n            var document = this.editor.document;\n            var i, len, node, wrapper, blockParent, outerWrapper;\n            var previousNodes, nextNodes, previous, next, prevWrapper, nextWrapper, child, j, listItems;\n\n            for (i = 0, len = nodes.length; i < len; i++) {\n                node = nodes[i];\n\n                if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                    continue;\n                }\n\n                blockParent = dom.blockParentOrBody(node);\n\n                if (blockParent.tagName !== \"BODY\" && blockParent.tagName !== formatTag) {\n                    if (blockParent.tagName !== \"LI\" && blockParent.tagName !== \"TD\" && blockParent.tagName !== \"TH\") {\n                        previousNodes = [];\n                        nextNodes = [];\n                        previous = node.previousSibling;\n                        next = node.nextSibling;\n\n                        while (previous) {\n                            if (!dom.isMarker(previous)) {\n                                previousNodes.push(previous);\n                            }\n\n                            previous = previous.previousSibling;\n                        }\n\n                        if (previousNodes.length) {\n                            prevWrapper = blockParent.cloneNode(true);\n                            prevWrapper.innerHTML = \"\";\n                            dom.insertBefore(prevWrapper, previousNodes[0]);\n\n                            for (j = 0; j < previousNodes.length; j++) {\n                                child = previousNodes[j];\n                                dom.insertAt(prevWrapper, child, 0);\n                            }\n                        }\n\n                        while (next) {\n                            if (!dom.isMarker(next)) {\n                                nextNodes.push(next);\n                            }\n\n                            next = next.nextSibling;\n                        }\n\n                        if (nextNodes.length) {\n                            nextWrapper = blockParent.cloneNode(true);\n                            nextWrapper.innerHTML = \"\";\n                            dom.insertBefore(nextWrapper, nextNodes[0]);\n\n                            for (j = 0; j < nextNodes.length; j++) {\n                                child = nextNodes[j];\n                                nextWrapper.appendChild(child);\n                            }\n                        }\n\n                        dom.unwrap(blockParent);\n                    }\n\n                    wrapper = dom.create(document, formatTag, attr);\n                    dom.wrap(node, wrapper);\n                } else if (blockParent.tagName === formatTag) {\n                    dom.attr(blockParent, attr);\n                }\n            }\n\n            if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\" && formatTag === \"LI\") {\n                listItems = [];\n\n                while (dom.is(wrapper, \"li\")) {\n                    listItems.push(wrapper);\n                    wrapper = dom.prev(wrapper);\n                }\n\n                outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n                dom.insertBefore(outerWrapper, listItems[listItems.length - 1]);\n                outerWrapper.appendChild(listItems[0]);\n\n                for (i = 1, len = listItems.length; i < len; i++) {\n                    dom.insertBefore(listItems[i], outerWrapper.firstChild);\n                }\n            } else if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\") {\n                outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n                dom.wrap(wrapper, outerWrapper);\n            }\n        },\n\n        applyInlineStyles: function(nodes, inlineStyles) {\n            var document = this.editor.document;\n            var currentStyle, createdNode, topNode, i, newNode, node;\n\n            for (i = 0; i < inlineStyles.length; i++) {\n                currentStyle = inlineStyles[i];\n                createdNode = dom.create(document, currentStyle.tags[0], currentStyle.attr);\n\n                if (topNode) {\n                    createdNode.appendChild(topNode);\n                }\n\n                topNode = createdNode;\n            }\n\n            if (topNode) {\n                for (i = 0; i < nodes.length; i++) {\n                    node = nodes[i];\n                    if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                        continue;\n                    }\n                    newNode = topNode.cloneNode(true);\n                    dom.insertBefore(newNode, node);\n\n                    while (newNode.children && newNode.children.length) {\n                        newNode = newNode.children[0];\n                    }\n\n                    newNode.appendChild(node);\n                }\n            }\n        },\n\n        immutables: function() {\n            return this.editor && this.editor.options.immutables;\n        },\n\n        immutableParent: function(node) {\n            return this.immutables() && Editor.Immutables.immutableParent(node);\n        }\n    });\n\n    var CopyFormatTool = Tool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n        },\n\n        command: function(commandArguments) {\n            return new CopyFormatCommand(commandArguments);\n        }\n    });\n\n    var ApplyFormatTool = Tool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n        },\n\n        command: function(commandArguments) {\n            return new ApplyFormatCommand(commandArguments);\n        }\n    });\n\n    $.extend(Editor, {\n        CopyFormatCommand: CopyFormatCommand,\n        ApplyFormatCommand: ApplyFormatCommand,\n        CopyFormatTool: CopyFormatTool,\n        ApplyFormatTool: ApplyFormatTool\n    });\n\n    registerTool(\"copyFormat\", new CopyFormatTool({ }));\n    registerTool(\"applyFormat\", new ApplyFormatTool({ }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        const kendo = window.kendo,\n            extend = $.extend,\n            Editor = kendo.ui.editor,\n            formats = kendo.ui.Editor.fn.options.formats,\n            dom = Editor.Dom,\n            Tool = Editor.Tool,\n            DelayedExecutionTool = Editor.DelayedExecutionTool,\n            BlockFormatter = Editor.BlockFormatter,\n            FormatCommand = Editor.FormatCommand,\n            GreedyInlineFormatFinder = Editor.GreedyInlineFormatFinder,\n            EditorUtils = Editor.EditorUtils,\n            registerTool = EditorUtils.registerTool,\n            registerFormat = EditorUtils.registerFormat,\n            RangeUtils = Editor.RangeUtils;\n\n        const LineHeightCommand = FormatCommand.extend({\n            exec: function() {\n                const cmd = this,\n                    range = cmd.lockRange(true),\n                    nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n                cmd.formatter.format[0].attr.style.lineHeight = cmd.options.value.lineHeight;\n                cmd.formatter.apply(nodes);\n                cmd.releaseRange(range);\n            }\n        });\n\n        const LineHeightFormatTool = DelayedExecutionTool.extend({\n            init: function(options) {\n                Tool.fn.init.call(this, options);\n\n                this.type = \"kendoComboBox\";\n                this.format = [{ tags: [\"p\", \"lineHeight\"] }];\n                this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr, options.defaultValue);\n            },\n\n            command: function(commandArguments) {\n                var that = this;\n\n                return new LineHeightCommand(extend(commandArguments, {\n                    formatter: function() {\n                        return new BlockFormatter(that.options.format);\n                    }\n                }));\n            },\n\n            initialize: function(ui, editor) {\n                var tool = this,\n                    component = ui.getKendoComboBox();\n\n                tool.editor = editor;\n\n                component.bind(\"change\", this.changeHandler.bind(this));\n            },\n\n            changeHandler: function(e) {\n                this._exec(e.sender.value());\n            },\n\n            _exec: function(value) {\n                if (value) {\n                    Tool.exec(this.editor, this.options.name, { lineHeight: value });\n                }\n            },\n        });\n\n        $.extend(Editor, {\n            LineHeightCommand: LineHeightCommand,\n            LineHeightFormatTool: LineHeightFormatTool\n        });\n\n        registerFormat(\"lineHeight\", [\n            { tags: dom.blockElements, attr: { style: { lineHeight: \"normal\" } } }\n        ]);\n\n        registerTool(\"lineHeight\", new LineHeightFormatTool({\n            cssAttr: \"line-height\",\n            format: formats.lineHeight,\n            defaultValue: 1.15,\n            ui: {\n                type: \"component\",\n                component: \"ComboBox\",\n                componentOptions: {\n                    value: 1.15,\n                    dataTextField: \"text\",\n                    dataValueField: \"value\",\n                    prefixOptions: {\n                        icon: \"lineHeight\" // Replace with icon \"paragraphHeight\" once it is added to kendo-icons.\n                    },\n                    autoSize: true,\n                    highlightFirst: false,\n                    dataSource: [\n                        { text: \"1\", value: \"10pt\" },\n                        { text: \"1.15\", value: \"11.5pt\" },\n                        { text: \"1.5\", value: \"15pt\" },\n                        { text: \"2\", value: \"20pt\" },\n                        { text: \"2.5\", value: \"25pt\" },\n                    ]\n                }\n            }\n        }));\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        const kendo = window.kendo,\n            Editor = kendo.ui.editor,\n            Tool = Editor.Tool,\n            Command = Editor.Command,\n            EditorUtils = Editor.EditorUtils,\n            registerTool = EditorUtils.registerTool,\n            DOM = Editor.Dom,\n            SPACE_UNICODE = \"\\u00B7\",\n            NEW_LINE_UNICODE = \"\\u21B5\";\n\n        const createMark = function(range, document, character, scrollTop, index) {\n            const clonedRange = range.cloneRange(),\n                  container = clonedRange.startContainer;\n\n            let domRect, x, y, textNode;\n\n            if (index !== undefined) {\n                clonedRange.setStart(container, index);\n                clonedRange.setEnd(container, index + 1);\n            }\n\n            domRect = clonedRange.getBoundingClientRect();\n\n            if (character === SPACE_UNICODE) {\n                x = domRect.x - domRect.width / 4;\n                y = domRect.y + domRect.height + scrollTop;\n            } else if (character === NEW_LINE_UNICODE) {\n                x = domRect.x;\n                y = domRect.y + domRect.height + scrollTop;\n            }\n\n            textNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n            textNode.setAttributeNS(null, \"x\", x);\n            textNode.setAttributeNS(null, \"y\", y);\n            textNode.setAttributeNS(null, \"fill\", \"#6098f2\");\n            textNode.setAttributeNS(null, \"font-size\", `${Math.ceil(domRect.height + domRect.width)}px`);\n            textNode.textContent = character;\n\n            return textNode;\n        };\n\n        const appendSvgMarks = function() {\n            const that = this,\n                range = that.getRange().cloneRange(),\n                svgNodes = [],\n                overlay = that._formattingMarksOverlay[0],\n                fragment = that.document.createDocumentFragment(),\n                document = that.document,\n                scrollTop = document.documentElement.scrollTop;\n\n            range.setStart(that.body.firstChild, 0);\n            range.setEnd(that.body.lastChild, 0);\n\n            const nodes = DOM.getTextNodes(that.body).concat($(that.body).find(\"br\").toArray());\n\n            nodes.forEach((node) => {\n                if (node.nodeType === DOM.nodeTypes.TEXT_NODE) {\n                    range.selectNodeContents(node);\n\n                    for (let i = range.startOffset; i < range.endOffset; i++) {\n                        if ((range.startContainer.textContent.charCodeAt(i) === 32 || range.startContainer.textContent.charCodeAt(i) === 160)) {\n                            fragment.appendChild(createMark(range, document, SPACE_UNICODE, scrollTop, i));\n                        }\n                    }\n                } else {\n                    range.selectNode(node);\n                    fragment.appendChild(createMark(range, document, NEW_LINE_UNICODE, scrollTop));\n                }\n            });\n\n            overlay.appendChild(fragment);\n        };\n\n        const clearFormattingMarksOverlay = function(editor) {\n            editor._formattingMarksOverlay.empty();\n        };\n\n        const applyFormattingMarks = function(editor) {\n            appendSvgMarks.call(editor);\n        };\n\n        const FormattingMarksCommand = Command.extend({\n            exec: function() {\n                const cmd = this,\n                    range = cmd.lockRange(true),\n                    editor = cmd.editor;\n\n                if (!editor._toggledFormattingMarks) {\n                    editor._toggledFormattingMarks = true;\n                    editor._appendFormattingMarksOverlay();\n                    editor._appendFormattingMarksStyles();\n                    clearFormattingMarksOverlay(editor);\n                    applyFormattingMarks(editor);\n                } else {\n                    editor._toggledFormattingMarks = false;\n                    editor._destroyFormattingMarksOverlay();\n                }\n\n                cmd.releaseRange(range);\n            }\n        });\n\n        $.extend(Editor, {\n            FormattingMarksCommand: FormattingMarksCommand,\n            applyFormattingMarks: applyFormattingMarks,\n            clearFormattingMarksOverlay: clearFormattingMarksOverlay\n        });\n\n        registerTool(\"formattingMarks\", new Tool({ command: FormattingMarksCommand, icon: \"paragraph-add\" /* Replace with corresponding icon once kendo-icons is updated */, ui: { togglable: true } }));\n    })(window.kendo.jQuery);\n\n    (function(kendo, undefined$1) {\n        var global = window;\n        var math = global.Math;\n        var min = math.min;\n        var max = math.max;\n        var parseFloat = global.parseFloat;\n\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n\n        var Editor = kendo.ui.editor;\n\n        var PERCENTAGE = \"%\";\n        var PIXEL = \"px\";\n        var REGEX_NUMBER_IN_PERCENTAGES = /(\\d+)(\\.?)(\\d*)%/;\n        var REGEX_NUMBER_IN_PIXELS = /(\\d+)(\\.?)(\\d*)px/;\n        var STRING = \"string\";\n\n        function constrain(options) {\n            var value = options.value;\n            var lowerBound = options.min;\n            var upperBound = options.max;\n\n            return max(min(parseFloat(value), parseFloat(upperBound)), parseFloat(lowerBound));\n        }\n\n        function getScrollBarWidth(element) {\n            if (element && !$(element).is(\"body\") && element.scrollHeight > element.clientHeight) {\n                return kendo.support.scrollbar();\n            }\n\n            return 0;\n        }\n\n        function calculatePercentageRatio(value, total) {\n            if (inPercentages(value)) {\n                return parseFloat(value);\n            }\n            else {\n                return ((parseFloat(value) / total) * 100);\n            }\n        }\n\n        function inPercentages(value) {\n            return (typeof(value) === STRING && REGEX_NUMBER_IN_PERCENTAGES.test(value));\n        }\n\n        function inPixels(value) {\n            return (typeof(value) === STRING && REGEX_NUMBER_IN_PIXELS.test(value));\n        }\n\n        function toPercentages(value) {\n            return (parseFloat(value) + PERCENTAGE);\n        }\n\n        function toPixels(value) {\n            return (parseFloat(value) + PIXEL);\n        }\n\n        var ResizingUtils = {\n            constrain: constrain,\n            getScrollBarWidth: getScrollBarWidth,\n            calculatePercentageRatio: calculatePercentageRatio,\n            inPercentages: inPercentages,\n            inPixels: inPixels,\n            toPercentages: toPercentages,\n            toPixels: toPixels\n        };\n\n        extend(Editor, {\n            ResizingUtils: ResizingUtils\n        });\n    })(window.kendo);\n\n    (function(kendo, undefined$1) {\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n        var noop = $.noop;\n\n        var Editor = kendo.ui.editor;\n        var Class = kendo.Class;\n\n        var KEY_DOWN = \"keydown\";\n        var MOUSE_DOWN = \"mousedown\";\n        var MOUSE_ENTER = \"mouseenter\";\n        var MOUSE_LEAVE = \"mouseleave\";\n        var MOUSE_MOVE = \"mousemove\";\n        var MOUSE_UP = \"mouseup\";\n\n        var COMMA = \",\";\n        var DOT = \".\";\n        var LAST_CHILD = \":last-child\";\n\n        var TABLE = \"table\";\n\n        var TableElementResizing = Class.extend({\n            init: function(element, options) {\n                var that = this;\n\n                that.options = extend({}, that.options, options);\n\n                that.options.tags = Array.isArray(that.options.tags) ? that.options.tags : [that.options.tags];\n\n                if ($(element).is(TABLE)) {\n                    that.element = element;\n                    that._attachEventHandlers();\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n                var eventNamespace = that.options.eventNamespace;\n\n                if (that.element) {\n                    $(that.element).off(eventNamespace);\n                    that.element = null;\n                }\n\n                $(that.options.rootElement).off(KEY_DOWN + eventNamespace);\n\n                that._destroyResizeHandle();\n            },\n\n            options: {\n                tags: [],\n                min: 0,\n                rootElement: null,\n                eventNamespace: \"\",\n                rtl: false,\n                handle: {\n                    dataAttribute: \"\",\n                    height: 0,\n                    width: 0,\n                    classNames: {},\n                    template: \"\"\n                }\n            },\n\n            _attachEventHandlers: function() {\n                var that = this;\n                var options = that.options;\n\n                $(that.element).on(MOUSE_MOVE + options.eventNamespace, options.tags.join(COMMA), that.detectElementBorderHovering.bind(that));\n            },\n\n            resizingInProgress: function() {\n                var that = this;\n                var resizable = that._resizable;\n\n                if (resizable) {\n                    return !!resizable.resizing;\n                }\n\n                return false;\n            },\n\n            resize: noop,\n\n            detectElementBorderHovering: function(e) {\n                var that = this;\n                var options = that.options;\n                var handleOptions = options.handle;\n                var tableElement = $(e.currentTarget);\n                var resizeHandle = that.resizeHandle;\n                var dataAttribute = handleOptions.dataAttribute;\n\n                if (!that.resizingInProgress()) {\n                    if (!tableElement.is(LAST_CHILD) && that.elementBorderHovered(tableElement, e)) {\n                        if (resizeHandle) {\n                            if (resizeHandle.data(dataAttribute) && resizeHandle.data(dataAttribute) !== tableElement[0]) {\n                                that.showResizeHandle(tableElement, e);\n                            }\n                        }\n                        else {\n                            that.showResizeHandle(tableElement, e);\n                        }\n                    }\n                    else {\n                        if (resizeHandle) {\n                            that._destroyResizeHandle();\n                        }\n                    }\n                }\n            },\n\n            elementBorderHovered: noop,\n\n            showResizeHandle: function(tableElement, e) {\n                var that = this;\n\n                if (e.buttons !== 0) {\n                    //prevent showing when a mouse button is still being pressed\n                    return;\n                }\n\n                that._initResizeHandle();\n                that.setResizeHandlePosition(tableElement);\n                that.setResizeHandleDimensions();\n                that.setResizeHandleDataAttributes(tableElement[0]);\n                that._attachResizeHandleEventHandlers();\n\n                that._initResizable(tableElement);\n\n                that._hideResizeMarker();\n                that.resizeHandle.show();\n            },\n\n            _initResizeHandle: function() {\n                var that = this;\n                var options = that.options;\n\n                that._destroyResizeHandle();\n\n                that.resizeHandle = $(options.handle.template).appendTo(options.rootElement);\n            },\n\n            setResizeHandlePosition: noop,\n\n            setResizeHandleDimensions: noop,\n\n            setResizeHandleDataAttributes: function(tableElement) {\n                var that = this;\n\n                that.resizeHandle.data(that.options.handle.dataAttribute, tableElement);\n            },\n\n            _attachResizeHandleEventHandlers: function() {\n                var that = this;\n                var options = that.options;\n                var eventNamespace = options.eventNamespace;\n                var markerClass = options.handle.classNames.marker;\n                var resizeHandle = that.resizeHandle;\n\n                that.resizeHandle\n                    .on(MOUSE_DOWN + eventNamespace, function() {\n                        resizeHandle.find(DOT + markerClass).show();\n                    })\n                    .on(MOUSE_UP + eventNamespace, function() {\n                        resizeHandle.find(DOT + markerClass).hide();\n                    });\n            },\n\n            _hideResizeMarker: function() {\n                var that = this;\n\n                that.resizeHandle.find(DOT + that.options.handle.classNames.marker).hide();\n            },\n\n            _destroyResizeHandle: function() {\n                var that = this;\n\n                if (that.resizeHandle) {\n                    that._destroyResizable();\n                    that.resizeHandle.off(that.options.eventNamespace).remove();\n                    that.resizeHandle = null;\n                }\n            },\n\n            _initResizable: function(tableElement) {\n                var that = this;\n\n                if (!that.resizeHandle) {\n                    return;\n                }\n\n                that._destroyResizable();\n\n                that._resizable = new kendo.ui.Resizable(tableElement, {\n                    draggableElement: that.resizeHandle[0],\n                    start: that.onResizeStart.bind(that),\n                    resize: that.onResize.bind(that),\n                    resizeend: that.onResizeEnd.bind(that)\n                });\n            },\n\n            _destroyResizable: function() {\n                var that = this;\n\n                if (that._resizable) {\n                    that._resizable.destroy();\n                    that._resizable = null;\n                }\n            },\n\n            onResizeStart: function() {\n                this._disableKeyboard();\n            },\n\n            onResize: function(e) {\n                this.setResizeHandleDragPosition(e);\n            },\n\n            setResizeHandleDragPosition: noop,\n\n            onResizeEnd: function(e) {\n                var that = this;\n\n                that.resize(e);\n                that._destroyResizeHandle();\n                that._enableKeyboard();\n            },\n\n            _enableKeyboard: function() {\n                var options = this.options;\n\n                $(options.rootElement).off(KEY_DOWN + options.eventNamespace);\n            },\n\n            _disableKeyboard: function() {\n                var options = this.options;\n\n                $(options.rootElement).on(KEY_DOWN + options.eventNamespace, function(e) {\n                    e.preventDefault();\n                });\n            },\n\n            _forceResizing: function(e) {\n                var resizable = this._resizable;\n\n                if (resizable && resizable.userEvents) {\n                    resizable.userEvents._end(e);\n                }\n            }\n        });\n\n        var ResizingFactory = Class.extend({\n            create: function(editor, options) {\n                var that = this;\n                var resizingName = options.name;\n                var NS = options.eventNamespace;\n\n                $(editor.body)\n                    .on(MOUSE_ENTER + NS, TABLE, function(e) {\n                        var table = e.currentTarget;\n                        var resizing = editor[resizingName];\n\n                        e.stopPropagation();\n\n                        if (resizing) {\n                            if (resizing.element !== table && !resizing.resizingInProgress()) {\n                                that._destroyResizing(editor, options);\n                                that._initResizing(editor, table, options);\n                            }\n                        }\n                        else {\n                            that._initResizing(editor, table, options);\n                        }\n                    })\n                    .on(MOUSE_LEAVE + NS, TABLE, function(e) {\n                        var parentTable;\n                        var resizing = editor[resizingName];\n\n                        e.stopPropagation();\n\n                        if (resizing && !resizing.resizingInProgress() && !resizing.resizeHandle) {\n                            parentTable = $(resizing.element).parents(TABLE)[0];\n\n                            if (parentTable) {\n                                that._destroyResizing(editor, options);\n                                that._initResizing(editor, parentTable, options);\n                            }\n                        }\n                    })\n                    .on(MOUSE_LEAVE + NS, function() {\n                        var resizing = editor[resizingName];\n\n                        if (resizing && !resizing.resizingInProgress()) {\n                            that._destroyResizing(editor, options);\n                        }\n                    })\n                    .on(MOUSE_UP + NS, function(e) {\n                        var resizing = editor[resizingName];\n                        var parentTable;\n\n                        if (resizing && resizing.resizingInProgress()) {\n                            parentTable = $(e.target).parents(TABLE)[0];\n\n                            if (parentTable) {\n                                resizing._forceResizing(e);\n                                that._destroyResizing(editor, options);\n                                that._initResizing(editor, parentTable, options);\n                            }\n                        }\n                    });\n            },\n\n            dispose: function(editor, options) {\n                $(editor.body).off(options.eventNamespace);\n            },\n\n            _initResizing: function(editor, tableElement, options) {\n                var resizingName = options.name;\n                var resizingType = options.type;\n\n                editor[resizingName] = new resizingType(tableElement, {\n                    rtl: kendo.support.isRtl(editor.element),\n                    rootElement: editor.body\n                });\n            },\n\n            _destroyResizing: function(editor, options) {\n                var resizingName = options.name;\n\n                if (editor[resizingName]) {\n                    editor[resizingName].destroy();\n                    editor[resizingName] = null;\n                }\n            }\n        });\n        ResizingFactory.current = new ResizingFactory();\n\n        TableElementResizing.create = function(editor, options) {\n            ResizingFactory.current.create(editor, options);\n        };\n\n        TableElementResizing.dispose = function(editor, options) {\n            ResizingFactory.current.dispose(editor, options);\n        };\n\n        extend(Editor, {\n            TableElementResizing: TableElementResizing\n        });\n\n    })(window.kendo);\n\n    (function(kendo, undefined$1) {\n        var global = window;\n        var math = global.Math;\n        var abs = math.abs;\n\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n\n        var Editor = kendo.ui.editor;\n        var dom = Editor.Dom;\n        var TableElementResizing = Editor.TableElementResizing;\n        var ResizingUtils = Editor.ResizingUtils;\n        var constrain = ResizingUtils.constrain;\n        var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n        var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n        var inPercentages = ResizingUtils.inPercentages;\n        var toPercentages = ResizingUtils.toPercentages;\n        var toPixels = ResizingUtils.toPixels;\n        var outerWidth = kendo._outerWidth;\n\n        var NS = \".kendoEditorColumnResizing\";\n        var RESIZE_HANDLE_CLASS = \"k-column-resize-handle\";\n        var RESIZE_MARKER_CLASS = \"k-column-resize-marker\";\n\n        var BODY = \"body\";\n        var TBODY = \"tbody\";\n        var THEAD = \"thead\";\n        var TD = \"td\";\n        var TH = \"th\";\n        var TR = \"tr\";\n\n        var COLATTR = \"col-index\";\n\n        var COMMA = \",\";\n        var WIDTH = \"width\";\n\n        var ColumnResizing = TableElementResizing.extend({\n            options: {\n                tags: [TD, TH],\n                min: 20,\n                rootElement: null,\n                eventNamespace: NS,\n                rtl: false,\n                handle: {\n                    dataAttribute: \"column\",\n                    width: 10,\n                    height: 0,\n                    classNames: {\n                        handle: RESIZE_HANDLE_CLASS,\n                        marker: RESIZE_MARKER_CLASS\n                    },\n                    template:\n                        '<div class=\"k-column-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                            '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                                '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                            '</div>' +\n                        '</div>'\n                }\n            },\n\n            elementBorderHovered: function(column, e) {\n                var that = this;\n                var options = that.options;\n                var handleWidth = options.handle.width;\n                var borderOffset = column.offset().left + (options.rtl ? 0 : outerWidth(column));\n\n\n                var mousePosition = e.clientX + $(column[0].ownerDocument).scrollLeft();\n\n                if ((mousePosition > (borderOffset - handleWidth)) && (mousePosition < (borderOffset + handleWidth))) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            },\n\n            setResizeHandlePosition: function(column) {\n                var that = this;\n                var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n                var options = that.options;\n                var rtl = options.rtl;\n                var handleWidth = options.handle.width;\n                var rootElement = $(options.rootElement);\n                var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n                var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n                var columnWidthOffset = rtl ? 0 : outerWidth(column);\n                var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n                var columnOffsetLeft = column.offset().left -\n                                        (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                        parseFloat(column.css(\"marginLeft\"));\n                var innerElementOffsetTop = tableInnerElement.offset().top -\n                                        (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                        parseFloat(tableInnerElement.css(\"marginTop\"));\n                var browser = kendo.support.browser;\n\n                if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    scrollLeftOffset = scrollLeftOffset * -1;\n                }\n\n                that.resizeHandle.css({\n                    top: innerElementOffsetTop + scrollTopOffset,\n                    left: columnOffsetLeft + columnWidthOffset + (scrollLeftOffset - scrollBarWidth) - (handleWidth / 2),\n                    position: \"absolute\"\n                });\n            },\n\n            setResizeHandleDimensions: function() {\n                var that = this;\n                var tableHead = $(that.element).children(THEAD);\n                var tableBody = $(that.element).children(TBODY);\n                var fullHeight = tableHead.length > 0 ? tableHead.height() + tableBody.height() : tableBody.height();\n\n                that.resizeHandle.css({\n                    width: that.options.handle.width,\n                    height: fullHeight\n                });\n            },\n\n            setResizeHandleDragPosition: function(e) {\n                var that = this;\n                var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n                var options = that.options;\n                var rootElement = $(options.rootElement);\n                var handleWidth = options.handle ? options.handle.width : 0;\n                var min = options.min;\n                var rtl = options.rtl;\n                var columnWidth = outerWidth(column);\n                var columnLeftOffset = column.offset().left -\n                                        (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                        parseFloat(column.css(\"marginLeft\"));\n                var adjacentColumnWidth = outerWidth(column.next());\n                var resizeHandle = $(that.resizeHandle);\n                var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n                var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n                var resizeHandleOffsetLeft = resizeHandle.offset().left -\n                                                (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                                parseFloat(resizeHandle.css(\"marginLeft\"));\n                var browser = kendo.support.browser;\n\n                if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    scrollLeftOffset = scrollLeftOffset * -1;\n                }\n\n                var handleOffset = constrain({\n                    value: resizeHandleOffsetLeft + (scrollLeftOffset - scrollBarWidth) + e.x.delta,\n                    min: columnLeftOffset + (scrollLeftOffset - scrollBarWidth) - (rtl ? adjacentColumnWidth : 0) + min,\n                    max: columnLeftOffset + columnWidth + (scrollLeftOffset - scrollBarWidth) + (rtl ? 0 : adjacentColumnWidth) - handleWidth - min\n                });\n\n                resizeHandle.css({ left: handleOffset });\n            },\n\n            resize: function(e) {\n                var that = this;\n                var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n                var options = that.options;\n                var rtlModifier = options.rtl ? (-1) : 1;\n                var min = options.min;\n                var initialDeltaX = rtlModifier * e.x.initialDelta;\n                var newWidth;\n                var initialAdjacentColumnWidth;\n                var initialColumnWidth;\n                var colIndex;\n                var nextColumn;\n\n                dom.reMapTableColumns(that.element, COLATTR);\n\n                colIndex = parseInt(column.attr(COLATTR), 10);\n\n                if (column.prop(\"colSpan\") > 1) {\n                    column = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + column.prop(\"colSpan\") - 1) + \"]\").eq(0);\n                    colIndex = parseInt(column.attr(COLATTR), 10);\n                }\n\n                nextColumn = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + 1) + \"]:not([colspan])\");\n\n                that._setTableComputedWidth();\n                that._setColumnsComputedWidth();\n\n                initialColumnWidth = outerWidth(column);\n                initialAdjacentColumnWidth = outerWidth(nextColumn);\n\n                newWidth = constrain({\n                    value: initialColumnWidth + initialDeltaX,\n                    min: min,\n                    max: initialColumnWidth + initialAdjacentColumnWidth - min\n                });\n\n                that._resizeColumn(column[0], newWidth);\n                that._resizeTopAndBottomColumns(column[0], newWidth);\n                that._resizeAdjacentColumns(parseInt(column.attr(COLATTR),10), initialAdjacentColumnWidth, initialColumnWidth, (initialColumnWidth - newWidth));\n\n                dom.clearTableMappings(that.element, COLATTR);\n            },\n\n            _setTableComputedWidth: function() {\n                var element = this.element;\n\n                if (element.style[WIDTH] === \"\") {\n                    element.style[WIDTH] = toPixels(outerWidth($(element)));\n                }\n            },\n\n            _setColumnsComputedWidth: function() {\n                var that = this;\n                var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n                var innerElementWidth = outerWidth(tableInnerElement);\n                var columns = tableInnerElement.children(TR).children(TD);\n                var length = columns.length;\n                var currentColumnsWidths = columns.map(function() {\n                    return outerWidth($(this));\n                });\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    if (inPercentages(columns[i].style[WIDTH])) {\n                        columns[i].style[WIDTH] = toPercentages(calculatePercentageRatio(currentColumnsWidths[i], innerElementWidth));\n                    }\n                    else {\n                        columns[i].style[WIDTH] = toPixels(currentColumnsWidths[i]);\n                    }\n                }\n            },\n\n            _resizeTopAndBottomColumns: function(column, newWidth) {\n                var that = this;\n                var columnIndex = $(column).attr(COLATTR);\n                var topAndBottomColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                    .filter(function() {\n                        var cell = this;\n                        return ($(cell).attr(COLATTR) === columnIndex && cell !== column);\n                    });\n                var length = topAndBottomColumns.length;\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    that._resizeColumn(topAndBottomColumns[i], newWidth);\n                }\n            },\n\n            _resizeColumn: function(column, newWidth) {\n                var innerTableElement = $(this.element.tHead || this.element.tBodies[0]);\n                if (inPercentages(column.style[WIDTH])) {\n                    column.style[WIDTH] = toPercentages(calculatePercentageRatio(newWidth, outerWidth(innerTableElement)));\n                }\n                else {\n                    column.style[WIDTH] = toPixels(newWidth);\n                }\n            },\n\n            _resizeAdjacentColumns: function(columnIndex, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n                var that = this;\n                var adjacentColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                    .filter(function() {\n                        return (parseInt($(this).attr(COLATTR),10) === (columnIndex + 1));\n                    });\n                var length = adjacentColumns.length;\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    that._resizeAdjacentColumn(adjacentColumns[i], initialAdjacentColumnWidth, initialColumnWidth, deltaWidth);\n                }\n            },\n\n            _resizeAdjacentColumn: function(adjacentColumn, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n                var that = this;\n                var min = that.options.min;\n                var newWidth;\n\n                newWidth = constrain({\n                    value: initialAdjacentColumnWidth + deltaWidth,\n                    min: min,\n                    max: abs(initialColumnWidth + initialAdjacentColumnWidth - min)\n                });\n\n                that._resizeColumn(adjacentColumn, newWidth);\n            }\n        });\n\n        ColumnResizing.create = function(editor) {\n            TableElementResizing.create(editor, {\n                name: \"columnResizing\",\n                type: ColumnResizing,\n                eventNamespace: NS\n            });\n        };\n\n        ColumnResizing.dispose = function(editor) {\n            TableElementResizing.dispose(editor, {\n                eventNamespace: NS\n            });\n        };\n\n        extend(Editor, {\n            ColumnResizing: ColumnResizing\n        });\n\n    })(window.kendo);\n\n    (function(kendo, undefined$1) {\n        var math = window.Math;\n        var abs = math.abs;\n\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n\n        var Editor = kendo.ui.editor;\n        var TableElementResizing = Editor.TableElementResizing;\n        var ResizingUtils = Editor.ResizingUtils;\n        var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n        var constrain = ResizingUtils.constrain;\n        var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n        var inPercentages = ResizingUtils.inPercentages;\n        var toPercentages = ResizingUtils.toPercentages;\n        var toPixels = ResizingUtils.toPixels;\n        var outerHeight = kendo._outerHeight;\n\n        var NS = \".kendoEditorRowResizing\";\n        var RESIZE_HANDLE_CLASS = \"k-row-resize-handle\";\n        var RESIZE_HANDLE_MARKER_WRAPPER_CLASS = \"k-row-resize-marker-wrapper\";\n        var RESIZE_MARKER_CLASS = \"k-row-resize-marker\";\n\n        var BODY = \"body\";\n        var TR = \"tr\";\n        var TBODY = \"tbody\";\n        var THEAD = \"thead\";\n\n        var COMMA = \",\";\n        var HEIGHT = \"height\";\n\n        var RowResizing = TableElementResizing.extend({\n            options: {\n                tags: [TR],\n                min: 20,\n                rootElement: null,\n                eventNamespace: NS,\n                rtl: false,\n                handle: {\n                    dataAttribute: \"row\",\n                    width: 0,\n                    height: 10,\n                    classNames: {\n                        handle: RESIZE_HANDLE_CLASS,\n                        marker: RESIZE_MARKER_CLASS\n                    },\n                    template:\n                        '<div class=\"k-row-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                            '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                                '<div class=\"' + RESIZE_HANDLE_MARKER_WRAPPER_CLASS + '\">' +\n                                    '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                                '</div>' +\n                            '</div>' +\n                        '</div>'\n                }\n            },\n\n            elementBorderHovered: function(tableElement, e) {\n                var that = this;\n                var handleHeight = that.options.handle[HEIGHT];\n                var borderOffset = tableElement.offset().top + outerHeight(tableElement);\n                var mousePosition = e.clientY + $(tableElement[0].ownerDocument).scrollTop();\n\n                if ((mousePosition > (borderOffset - handleHeight)) && (mousePosition < (borderOffset + handleHeight))) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            },\n\n            setResizeHandlePosition: function(row) {\n                var that = this;\n                var options = that.options;\n                var handleHeight = options.handle[HEIGHT];\n                var rootElement = $(options.rootElement);\n                var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n                var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n                var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n\n                var rowOffsetLeft = row.offset().left -\n                                        (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                        parseFloat(row.css(\"marginLeft\"));\n                var rowOffsetTop = row.offset().top -\n                                        (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                        parseFloat(row.css(\"marginTop\"));\n                var browser = kendo.support.browser;\n\n                if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    scrollLeftOffset = scrollLeftOffset * -1;\n                }\n\n                that.resizeHandle.css({\n                    top: rowOffsetTop + outerHeight(row) + scrollTopOffset - (handleHeight / 2),\n                    left: rowOffsetLeft + (scrollLeftOffset - scrollBarWidth),\n                    position: \"absolute\"\n                });\n            },\n\n            setResizeHandleDimensions: function() {\n                var that = this;\n                var innerTableElement = $(that.element.tHead || that.element.tBodies[0]);\n\n                that.resizeHandle.css({\n                    width: innerTableElement.width(),\n                    height: that.options.handle[HEIGHT]\n                });\n            },\n\n            setResizeHandleDragPosition: function(e) {\n                var that = this;\n                var options = that.options;\n                var min = options.min;\n                var tableHead = $(that.element).children(THEAD);\n                var tableBody = $(that.element).children(TBODY);\n                var topInnerTableElement = tableHead.length > 0 ? tableHead : tableBody;\n                var resizeHandle = $(that.resizeHandle);\n                var row = $(e.currentTarget).data(options.handle.dataAttribute);\n                var $row = $(row);\n                var rootElement = $(options.rootElement);\n                var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n                var tableTopOffset = topInnerTableElement.offset().top -\n                                        (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                        parseFloat(topInnerTableElement.css(\"marginTop\"));\n\n                var rowOffsetTop = $row.offset().top -\n                                    (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat($row.css(\"marginTop\"));\n\n                var resizeHandleOffsetTop = resizeHandle.offset().top -\n                                    (Math.max(0 , rootElement.offset().top) + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat(resizeHandle.css(\"marginTop\"));\n\n                var handleOffset = constrain({\n                    value: resizeHandleOffsetTop + scrollTopOffset + e.y.delta,\n                    min: rowOffsetTop + scrollTopOffset + min,\n                    max: tableTopOffset + outerHeight(tableHead) + outerHeight(tableBody) + scrollTopOffset - options.handle[HEIGHT] - min\n                });\n\n                resizeHandle.css({ top: handleOffset });\n            },\n\n            resize: function(e) {\n                var that = this;\n                var options = that.options;\n                var row = $(e.currentTarget).data(options.handle.dataAttribute);\n                var currentRowHeight = outerHeight($(row));\n                var element = $(that.element);\n                var initialTableHeight = outerHeight(element);\n                var tableHead = element.children(THEAD);\n                var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n                var tableBody = element.children(TBODY);\n                var tableBodyHeight = tableBody.height();\n                var initialStyleHeight = row.style[HEIGHT];\n                var newRowHeight = constrain({\n                    value: currentRowHeight + e.y.initialDelta,\n                    min: options.min,\n                    max: abs(tableHeadHeight + tableBodyHeight - options.min)\n                });\n\n                that._setRowsHeightInPixels();\n                row.style[HEIGHT] = toPixels(newRowHeight);\n                that._setTableHeight(initialTableHeight + (newRowHeight - currentRowHeight));\n\n                if (inPercentages(initialStyleHeight)) {\n                    //resize rows in percentages as late as possible to prevent incorrect precision calculations\n                    that._setRowsHeightInPercentages();\n                }\n            },\n\n            _setRowsHeightInPixels: function() {\n                var that = this;\n                var rows = $(that.element).children(TBODY + COMMA + THEAD).children(TR);\n                var length = rows.length;\n                var currentRowsHeights = rows.map(function() {\n                    return outerHeight($(this));\n                });\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n                }\n            },\n\n            _setRowsHeightInPercentages: function() {\n                var that = this;\n                var tableHead = $(that.element).children(THEAD);\n                var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n                var tableBody = $(that.element).children(TBODY);\n                var tableBodyHeight = tableBody.height();\n                var rows = $(that.element).children(THEAD + COMMA + TBODY).children(TR);\n                var length = rows.length;\n                var currentRowsHeights = rows.map(function() {\n                    return outerHeight($(this));\n                });\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n                }\n            },\n\n            _setTableHeight: function(newHeight) {\n                var element = this.element;\n\n                if (inPercentages(element.style[HEIGHT])) {\n                    element.style[HEIGHT] = toPercentages(calculatePercentageRatio(newHeight, $(element).parent().height()));\n                }\n                else {\n                    element.style[HEIGHT] = toPixels(newHeight);\n                }\n            }\n        });\n\n        RowResizing.create = function(editor) {\n            TableElementResizing.create(editor, {\n                name: \"rowResizing\",\n                type: RowResizing,\n                eventNamespace: NS\n            });\n        };\n\n        RowResizing.dispose = function(editor) {\n            TableElementResizing.dispose(editor, {\n                eventNamespace: NS\n            });\n        };\n\n        extend(Editor, {\n            RowResizing: RowResizing\n        });\n\n    })(window.kendo);\n\n    (function(kendo, undefined$1) {\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n        var noop = $.noop;\n\n        var Editor = kendo.ui.editor;\n        var Class = kendo.Class;\n        var Draggable = kendo.ui.Draggable;\n        var Observable = kendo.Observable;\n        var getScrollBarWidth = Editor.ResizingUtils.getScrollBarWidth;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n\n        var NS = \".kendoEditorElementResizeHandle\";\n        var RESIZE_HANDLE_CLASS = \"k-element-resize-handle\";\n\n        var DRAG_START = \"dragStart\";\n        var DRAG = \"drag\";\n        var DRAG_END = \"dragEnd\";\n        var HALF_INSIDE = \"halfInside\";\n        var MOUSE_OVER = \"mouseover\";\n        var MOUSE_OUT = \"mouseout\";\n\n        var BODY = \"body\";\n        var TABLE = \"table\";\n\n        var EAST = \"east\";\n        var NORTH = \"north\";\n        var NORTHEAST = \"northeast\";\n        var NORTHWEST = \"northwest\";\n        var SOUTH = \"south\";\n        var SOUTHEAST = \"southeast\";\n        var SOUTHWEST = \"southwest\";\n        var WEST = \"west\";\n\n        var DOT = \".\";\n\n        var ElementResizeHandle = Observable.extend({\n            init: function(options) {\n                var that = this;\n\n                Observable.fn.init.call(that);\n\n                that.options = extend({}, that.options, options);\n                that.element = $(that.options.template).appendTo(that.options.appendTo)[0];\n\n                that._attachEventHandlers();\n                that._addStyles();\n                that._initDraggable();\n                that._initPositioningStrategy();\n                that._initDraggingStrategy();\n\n                $(that.element).data(TABLE, that.options.resizableElement);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                $(that.element).off(NS).remove();\n                that.element = null;\n\n                that._destroyDraggable();\n\n                that.unbind();\n            },\n\n            options: {\n                appendTo: null,\n                direction: SOUTHEAST,\n                resizableElement: null,\n                rtl: false,\n                template:\n                    \"<div class='k-element-resize-handle-wrapper' unselectable='on' contenteditable='false'>\" +\n                        \"<div class='\" + RESIZE_HANDLE_CLASS + \"'></div>\" +\n                    \"</div>\"\n            },\n\n            events: [\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                MOUSE_OVER,\n                MOUSE_OUT\n            ],\n\n            show: function() {\n                this._setPosition();\n            },\n\n            _setPosition: function() {\n                var that = this;\n                var position = that._positioningStrategy.getPosition();\n\n                $(that.element).css({\n                    top: position.top,\n                    left: position.left,\n                    position: \"absolute\"\n                });\n            },\n\n            _attachEventHandlers: function() {\n                var that = this;\n\n                $(that.element)\n                    .on(MOUSE_OVER + NS, that._onMouseOver.bind(that))\n                    .on(MOUSE_OUT + NS, that._onMouseOut.bind(that));\n            },\n\n            _onMouseOver: function() {\n                this.trigger(MOUSE_OVER);\n            },\n\n            _onMouseOut: function() {\n                this.trigger(MOUSE_OUT);\n            },\n\n            _addStyles: function() {\n                var that = this;\n                $(that.element).children(DOT + RESIZE_HANDLE_CLASS).addClass(\"k-resize-\" + that.options.direction);\n            },\n\n            _initPositioningStrategy: function() {\n                var that = this;\n                var options = that.options;\n\n                that._positioningStrategy = HandlePositioningStrategy.create({\n                    name: options.direction,\n                    handle: that.element,\n                    resizableElement: options.resizableElement,\n                    rootElement: options.rootElement,\n                    rtl: options.rtl\n                });\n            },\n\n            _initDraggable: function() {\n                var that = this;\n                var element = that.element;\n\n                if (that._draggable || !element) {\n                    return;\n                }\n\n                that._draggable = new Draggable(element, {\n                    dragstart: that._onDragStart.bind(that),\n                    drag: that._onDrag.bind(that),\n                    dragend: that._onDragEnd.bind(that)\n                });\n            },\n\n            _onDragStart: function() {\n                this.trigger(DRAG_START);\n            },\n\n            _onDrag: function(e) {\n                var that = this;\n\n                that.trigger(DRAG, that._draggingStrategy.adjustDragDelta({\n                    deltaX: e.x.delta,\n                    deltaY: e.y.delta,\n                    initialDeltaX: e.x.initialDelta,\n                    initialDeltaY: e.y.initialDelta\n                }));\n            },\n\n            _onDragEnd: function() {\n                this.trigger(DRAG_END);\n            },\n\n            _destroyDraggable: function() {\n                var that = this;\n\n                if (that._draggable) {\n                    that._draggable.destroy();\n                    that._draggable = null;\n                }\n            },\n\n            _initDraggingStrategy: function() {\n                var that = this;\n\n                that._draggingStrategy = HandleDraggingStrategy.create({\n                    name: that.options.direction\n                });\n            }\n        });\n\n        var StrategyFactory = Class.extend({\n            init: function() {\n                this._items = [];\n            },\n\n            register: function(name, type) {\n                this._items.push({\n                    name: name,\n                    type: type\n                });\n            },\n\n            create: function(options) {\n                var items = this._items;\n                var itemsLength = items.length;\n                var name = options.name ? options.name.toLowerCase() : \"\";\n                var match;\n                var item;\n                var i;\n\n                for (i = 0; i < itemsLength; i++) {\n                    item = items[i];\n\n                    if (item.name.toLowerCase() === name) {\n                        match = item;\n                        break;\n                    }\n                }\n\n                if (match) {\n                    return new match.type(options);\n                }\n            }\n        });\n\n        var PositioningStrategyFactory = StrategyFactory.extend({});\n        PositioningStrategyFactory.current = new PositioningStrategyFactory();\n\n        var HandlePositioningStrategy = Class.extend({\n            init: function(options) {\n                var that = this;\n                that.options = extend({}, that.options, options);\n            },\n\n            options: {\n                handle: null,\n                offset: HALF_INSIDE,\n                resizableElement: null,\n                rootElement: null,\n                rtl: false\n            },\n\n            getPosition: function() {\n                var that = this;\n\n                var position = that.calculatePosition();\n                var handleOffsetPosition = that.applyHandleOffset(position);\n                var scrollOffsetPosition = that.applyScrollOffset(handleOffsetPosition);\n\n                return scrollOffsetPosition;\n            },\n\n            calculatePosition: noop,\n\n            applyHandleOffset: function(position) {\n                var options = this.options;\n                var handle = $(options.handle);\n\n                if (options.offset === HALF_INSIDE) {\n                    return {\n                        top: position.top - (outerHeight(handle) / 2),\n                        left: position.left - (outerWidth(handle) / 2)\n                    };\n                }\n\n                return position;\n            },\n\n            applyScrollOffset: function(position) {\n                var options = this.options;\n                var rootElement = $(options.rootElement);\n                var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n                var browser = kendo.support.browser;\n                var rootLeft;\n\n                if (!rootElement.is(BODY)) {\n                    rootLeft = kendo.scrollLeft(rootElement) || 0;\n\n                    if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                        rootLeft = rootLeft * -1;\n                    }\n\n                    return {\n                        top: position.top + (rootElement.scrollTop() || 0),\n                        left: position.left + rootLeft - scrollBarWidth\n                    };\n                }\n\n                return position;\n            }\n        });\n\n        HandlePositioningStrategy.create = function(options) {\n            return PositioningStrategyFactory.current.create(options);\n        };\n\n        var EastPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top + (outerHeight(resizableElement) / 2),\n                    left: offset.left + outerWidth(resizableElement) + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(EAST, EastPositioningStrategy);\n\n        var NorthPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top,\n                    left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(NORTH, NorthPositioningStrategy);\n\n        var NortheastPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top,\n                    left: offset.left + outerWidth(resizableElement) + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(NORTHEAST, NortheastPositioningStrategy);\n\n        var NorthwestPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top,\n                    left: offset.left + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(NORTHWEST, NorthwestPositioningStrategy);\n\n        var SouthPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top + outerHeight(resizableElement),\n                    left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(SOUTH, SouthPositioningStrategy);\n\n        var SoutheastPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top + outerHeight(resizableElement),\n                    left: offset.left + outerWidth(resizableElement) + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(SOUTHEAST, SoutheastPositioningStrategy);\n\n        var SouthwestPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top + outerHeight(resizableElement),\n                    left: offset.left + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(SOUTHWEST, SouthwestPositioningStrategy);\n\n        var WestPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top + (outerHeight(resizableElement) / 2),\n                    left: offset.left + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(WEST, WestPositioningStrategy);\n\n        var DraggingStrategyFactory = StrategyFactory.extend({});\n        DraggingStrategyFactory.current = new DraggingStrategyFactory();\n\n        var HandleDraggingStrategy = Class.extend({\n            init: function(options) {\n                var that = this;\n                that.options = extend({}, that.options, options);\n            },\n\n            options: {\n                deltaX: {\n                    adjustment: null,\n                    modifier: null\n                },\n                deltaY: {\n                    adjustment: null,\n                    modifier: null\n                }\n            },\n\n            adjustDragDelta: function(deltas) {\n                var options = this.options;\n                var xAxisAdjustment = options.deltaX.adjustment * options.deltaX.modifier;\n                var yAxisAdjustment = options.deltaY.adjustment * options.deltaY.modifier;\n\n                return {\n                    deltaX: deltas.deltaX * xAxisAdjustment,\n                    deltaY: deltas.deltaY * yAxisAdjustment,\n                    initialDeltaX: deltas.initialDeltaX * xAxisAdjustment,\n                    initialDeltaY: deltas.initialDeltaY * yAxisAdjustment\n                };\n            }\n        });\n\n        HandleDraggingStrategy.create = function(options) {\n            return DraggingStrategyFactory.current.create(options);\n        };\n\n        var HorizontalDraggingStrategy = HandleDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    adjustment: 1,\n                    modifier: 1\n                },\n                deltaY: {\n                    adjustment: 0,\n                    modifier: 0\n                }\n            }\n        });\n\n        var EastDraggingStrategy = HorizontalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: 1\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(EAST, EastDraggingStrategy);\n\n        var WestDraggingStrategy = HorizontalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: (-1)\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(WEST, WestDraggingStrategy);\n\n        var VerticalDraggingStrategy = HandleDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    adjustment: 0,\n                    modifier: 0\n                },\n                deltaY: {\n                    adjustment: 1,\n                    modifier: 1\n                }\n            }\n        });\n\n        var NorthDraggingStrategy = VerticalDraggingStrategy.extend({\n            options: {\n                deltaY: {\n                    modifier: (-1)\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(NORTH, NorthDraggingStrategy);\n\n        var SouthDraggingStrategy = VerticalDraggingStrategy.extend({\n            options: {\n                deltaY: {\n                    modifier: 1\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(SOUTH, SouthDraggingStrategy);\n\n        var HorizontalAndVerticalDraggingStrategy = HandleDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    adjustment: 1,\n                    modifier: 1\n                },\n                deltaY: {\n                    adjustment: 1,\n                    modifier: 1\n                }\n            }\n        });\n\n        var NorthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: 1\n                },\n                deltaY: {\n                    modifier: (-1)\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(NORTHEAST, NorthEastDraggingStrategy);\n\n        var NorthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: (-1)\n                },\n                deltaY: {\n                    modifier: (-1)\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(NORTHWEST, NorthWestDraggingStrategy);\n\n        var SouthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: 1\n                },\n                deltaY: {\n                    modifier: 1\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(SOUTHEAST, SouthEastDraggingStrategy);\n\n        var SouthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: (-1)\n                },\n                deltaY: {\n                    modifier: 1\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(SOUTHWEST, SouthWestDraggingStrategy);\n\n        extend(Editor, {\n            ElementResizeHandle: ElementResizeHandle\n        });\n    })(window.kendo);\n\n    (function(kendo, undefined$1) {\n        var global = window;\n        var math = global.Math;\n        var min = math.min;\n        var max = math.max;\n\n        var $ = kendo.jQuery;\n        var contains = $.contains;\n        var extend = $.extend;\n\n        var browser = kendo.support.browser;\n        var Editor = kendo.ui.editor;\n        var Class = kendo.Class;\n        var ElementResizeHandle = Editor.ElementResizeHandle;\n        var ResizingUtils = Editor.ResizingUtils;\n        var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n        var constrain = ResizingUtils.constrain;\n        var inPercentages = ResizingUtils.inPercentages;\n        var inPixels = ResizingUtils.inPixels;\n        var toPercentages = ResizingUtils.toPercentages;\n        var toPixels = ResizingUtils.toPixels;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n        var RangeUtils = Editor.RangeUtils;\n\n        var NS = \".kendoEditorElementResizing\";\n        var RESIZE_HANDLE_WRAPPER_CLASS = \"k-element-resize-handle-wrapper\";\n        var TABLE_CLASS = \"k-table\";\n        var ELEMENT_RESIZING_CLASS = \"k-element-resizing\";\n\n        var DRAG_START = \"dragStart\";\n        var DRAG = \"drag\";\n        var DRAG_END = \"dragEnd\";\n        var KEY_DOWN = \"keydown\";\n        var MOUSE_DOWN = \"mousedown\";\n        var SELECT = \"select\";\n        var DROP = \"drop\";\n\n        var COLUMN = \"td\";\n        var ROW = \"tr\";\n        var TBODY = \"tbody\";\n        var THEAD = \"thead\";\n        var TABLE = \"table\";\n        var IMG = \"img\";\n        var ELEMENT_TYPES = [\"TABLE\", \"IMG\"];\n\n        var COMMA = \",\";\n        var WIDTH = \"width\";\n        var HEIGHT = \"height\";\n\n        var EAST = \"east\";\n        var NORTH = \"north\";\n        var NORTHEAST = \"northeast\";\n        var NORTHWEST = \"northwest\";\n        var SOUTH = \"south\";\n        var SOUTHEAST = \"southeast\";\n        var SOUTHWEST = \"southwest\";\n        var WEST = \"west\";\n\n        var DOT = \".\";\n\n        function isUndefined(value) {\n            return typeof(value) === \"undefined\";\n        }\n\n        var ElementResizing = Class.extend({\n            init: function(element, options) {\n                var that = this;\n\n                that.options = extend({}, that.options, options);\n                that.handles = [];\n\n                // Check whether the element is TABLE or IMG\n                if (ELEMENT_TYPES.indexOf(element.nodeName) >= 0) {\n                    that.element = element;\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                $(that.element).off(NS);\n                that.element = null;\n\n                $(that.options.rootElement).off(KEY_DOWN + NS);\n\n                that._destroyResizeHandles();\n            },\n\n            options: {\n                appendHandlesTo: null,\n                rtl: false,\n                rootElement: null,\n                minWidth: 10,\n                minHeight: 10,\n                handles: [{\n                    direction: NORTHWEST\n                }, {\n                    direction: NORTH\n                }, {\n                    direction: NORTHEAST\n                }, {\n                    direction: EAST\n                }, {\n                    direction: SOUTHEAST\n                }, {\n                    direction: SOUTH\n                }, {\n                    direction: SOUTHWEST\n                }, {\n                    direction: WEST\n                }]\n            },\n\n            resize: function(args) {\n                var that = this;\n                var deltas = extend({}, {\n                    deltaX: 0,\n                    deltaY: 0,\n                    initialDeltaX: 0,\n                    initialDeltaY: 0\n                }, args);\n\n                that._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n                that._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n                that.showResizeHandles();\n            },\n\n            _resizeWidth: function() {\n                return false;\n            },\n\n            _resizeHeight: function() {\n                return false;\n            },\n\n            _getMaxDimensionValue: function(dimension) {\n                var that = this;\n                var element = $(that.element);\n                var dimensionLowercase = dimension.toLowerCase();\n                var rtlModifier = that.options.rtl ? (-1) : 1;\n                var parent = $(that.element).parent();\n                var parentElement = parent[0];\n                var parentDimension = parent[dimensionLowercase]();\n                var parentScrollOffset = rtlModifier * (dimension === WIDTH ? kendo.scrollLeft(parent) : parent.scrollTop());\n\n                if (parentElement && parentElement === element.closest(COLUMN)[0]) {\n                    if (parentElement.style[dimensionLowercase] === \"\" && !inPercentages(that.element.style[dimensionLowercase])) {\n                        return Infinity;\n                    }\n                    else {\n                        return (parentDimension + parentScrollOffset);\n                    }\n                }\n                else {\n                    return (parentDimension + parentScrollOffset);\n                }\n            },\n\n            showResizeHandles: function() {\n                var that = this;\n\n                that._initResizeHandles();\n                that._showResizeHandles();\n            },\n\n            _initResizeHandles: function() {\n                var that = this;\n                var handles = that.handles;\n                var options = that.options;\n                var handleOptions = that.options.handles;\n                var length = handleOptions.length;\n                var i;\n\n                if (handles && handles.length > 0) {\n                    return;\n                }\n\n                for (i = 0; i < length; i++) {\n                    that.handles.push(new ElementResizeHandle(extend({\n                        appendTo: options.appendHandlesTo,\n                        resizableElement: that.element,\n                        rootElement: options.rootElement,\n                        rtl: options.rtl\n                    }, handleOptions[i])));\n                }\n\n                that._bindToResizeHandlesEvents();\n            },\n\n            _destroyResizeHandles: function() {\n                var that = this;\n                var length = that.handles ? that.handles.length : 0;\n\n                for (var i = 0; i < length; i++) {\n                    that.handles[i].destroy();\n                }\n\n                that.handles = [];\n            },\n\n            _showResizeHandles: function() {\n                var that = this;\n                var handles = that.handles || [];\n                var length = handles.length;\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    that.handles[i].show();\n                }\n            },\n\n            _bindToResizeHandlesEvents: function() {\n                return false;\n            },\n\n            _onResizeHandleDragStart: function() {\n                var that = this;\n                var element = $(that.element);\n\n                element.addClass(ELEMENT_RESIZING_CLASS);\n\n                that._initialElementHeight = outerHeight(element);\n                that._initialElementWidth = outerWidth(element);\n                that._disableKeyboard();\n            },\n\n            _onResizeHandleDrag: function(e) {\n                this.resize(e);\n            },\n\n            _onResizeHandleDragEnd: function() {\n                var that = this;\n                $(that.element).removeClass(ELEMENT_RESIZING_CLASS);\n                that._enableKeyboard();\n            },\n\n            _enableKeyboard: function() {\n                $(this.options.rootElement).off(KEY_DOWN + NS);\n            },\n\n            _disableKeyboard: function() {\n                $(this.options.rootElement).on(KEY_DOWN + NS, function(e) {\n                    e.preventDefault();\n                });\n            }\n        });\n\n        var TableResizing = ElementResizing.extend({\n            _bindToResizeHandlesEvents: function() {\n                var that = this;\n                var handles = that.handles || [];\n                var length = handles.length;\n                var i;\n                var handle;\n\n                for (i = 0; i < length; i++) {\n                    handle = handles[i];\n                    handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n                    handle.bind(DRAG, that._onResizeHandleDrag.bind(that));\n                    handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n                }\n            },\n\n            _hasRowsInPixels: function() {\n                var that = this;\n                var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].style.height === \"\" || inPixels(rows[i].style.height)) {\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n\n            _resizeWidth: function(delta, initialDelta) {\n                var that = this;\n                var element = $(that.element);\n                var styleWidth = element[0].style[WIDTH];\n                var currentWidth = outerWidth(element);\n                var parentWidth = element.parent().width();\n                var maxWidth = that._getMaxDimensionValue(WIDTH);\n                var newWidth;\n                var ratioValue;\n                var ratioTotalValue;\n                var constrainedWidth;\n\n                if (delta === 0) {\n                    return;\n                }\n\n                if (isUndefined(that._initialElementWidth)) {\n                    that._initialElementWidth = currentWidth;\n                }\n\n                //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n                //on each drag does not work due to browser calculation of computed styles\n                constrainedWidth = constrain({\n                    value: that._initialElementWidth + initialDelta,\n                    min: that.options.minWidth,\n                    max: maxWidth\n                });\n\n                if (inPercentages(styleWidth)) {\n                    //detect resizing greater than 100%\n                    if (currentWidth + delta > parentWidth) {\n                        ratioValue = max(constrainedWidth, parentWidth);\n                        ratioTotalValue = min(constrainedWidth, parentWidth);\n                    }\n                    else {\n                        ratioValue = min(constrainedWidth, parentWidth);\n                        ratioTotalValue = max(constrainedWidth, parentWidth);\n                    }\n\n                    newWidth = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n                }\n                else {\n                    newWidth = toPixels(constrainedWidth);\n                }\n\n                that._setColumnsWidth();\n\n                element[0].style[WIDTH] = newWidth;\n            },\n\n            _resizeHeight: function(delta, initialDelta) {\n                var that = this;\n                var element = $(that.element);\n                var styleHeight = element[0].style[HEIGHT];\n                var currentHeight = outerHeight(element);\n                var parent = element.parent();\n                var parentHeight = parent.height();\n                var maxHeight = that._getMaxDimensionValue(HEIGHT);\n                var newHeight;\n                var ratioValue;\n                var ratioTotalValue;\n                var constrainedHeight;\n                var minHeight = that.options.minHeight;\n                var hasRowsInPixels = that._hasRowsInPixels();\n\n                if (delta === 0) {\n                    return;\n                }\n\n                if (isUndefined(that._initialElementHeight)) {\n                    that._initialElementHeight = currentHeight;\n                }\n\n                //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n                //on each drag does not work due to browser calculation of computed styles\n                constrainedHeight = constrain({\n                    value: that._initialElementHeight + initialDelta,\n                    min: minHeight,\n                    max: maxHeight\n                });\n\n                if (hasRowsInPixels && delta < 0) {\n                    //decreasing table height when rows are sized in pixels is not possible\n                    that._setRowsHeightInPercentages();\n                }\n\n                if (inPercentages(styleHeight)) {\n                    //detect resizing greater than 100%\n                    if (currentHeight + delta > parentHeight) {\n                        ratioValue = max(constrainedHeight, parentHeight);\n                        ratioTotalValue = min(constrainedHeight, parentHeight);\n                    }\n                    else {\n                        ratioValue = min(constrainedHeight, parentHeight);\n                        ratioTotalValue = max(constrainedHeight, parentHeight);\n                    }\n\n                    newHeight = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n                }\n                else {\n                    newHeight = toPixels(constrainedHeight);\n                }\n\n                element[0].style[HEIGHT] = newHeight;\n\n                if (hasRowsInPixels && delta < 0) {\n                    //restore original rows height unit\n                    that._setRowsHeightInPixels();\n                }\n            },\n\n            _setColumnsWidth: function() {\n                var that = this;\n                var element = $(that.element);\n                var parentElement = element.parent()[0];\n                var parentColumn = element.closest(COLUMN);\n                var columns = parentColumn.closest(ROW).children();\n                var columnsLength = columns.length;\n                var i;\n\n                function isWidthInPercentages(element) {\n                    var styleWidth = element.style.width;\n\n                    if (styleWidth !== \"\") {\n                        return inPercentages(styleWidth) ? true : false;\n                    }\n                    else {\n                        return $(element).hasClass(TABLE_CLASS) ? true : false;\n                    }\n                }\n\n                if (isWidthInPercentages(element[0]) && parentElement === parentColumn[0] && parentElement.style[WIDTH] === \"\") {\n                    for (i = 0; i < columnsLength; i++) {\n                        columns[i].style[WIDTH] = toPixels($(columns[i]).width());\n                    }\n                }\n            },\n\n            _setRowsHeightInPercentages: function() {\n                var that = this;\n                var tableHead = $(that.element).children(THEAD);\n                var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n                var tableBody = $(that.element).children(TBODY);\n                var tableBodyHeight = tableBody.height();\n                var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n                var length = rows.length;\n                var currentRowsHeights = rows.map(function() {\n                    return outerHeight($(this));\n                });\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n                }\n            },\n\n            _setRowsHeightInPixels: function() {\n                var that = this;\n                var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n                var length = rows.length;\n                var currentRowsHeights = rows.map(function() {\n                    return outerHeight($(this));\n                });\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n                }\n            }\n        });\n\n        var ImageResizing = ElementResizing.extend({\n            _bindToResizeHandlesEvents: function() {\n                var that = this;\n                var handles = that.handles || [];\n                var length = handles.length;\n                var i;\n                var handle;\n\n                for (i = 0; i < length; i++) {\n                    handle = handles[i];\n                    handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n\n                    if (handle.options.direction === \"north\" || handle.options.direction === \"south\") {\n                        handle.bind(DRAG, that._onResizeHandleDragVertical.bind(that));\n                    } else if (handle.options.direction === \"east\" || handle.options.direction === \"west\") {\n                        handle.bind(DRAG, that._onResizeHandleDragHorizontal.bind(that));\n                    } else {\n                        handle.bind(DRAG, that._onResizeHandleDragLocked.bind(that));\n                    }\n\n                    handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n                }\n            },\n\n            _getDeltas: function(args) {\n                return extend({}, {\n                    deltaX: 0,\n                    deltaY: 0,\n                    initialDeltaX: 0,\n                    initialDeltaY: 0\n                }, args);\n            },\n\n            _onResizeHandleDragVertical: function(args) {\n                var deltas = this._getDeltas(args);\n\n                this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n                this.showResizeHandles();\n            },\n\n            _onResizeHandleDragHorizontal: function(args) {\n                var deltas = this._getDeltas(args);\n\n                this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n                this.showResizeHandles();\n            },\n\n            _onResizeHandleDragLocked: function(args) {\n                var min = Math.min(Math.abs(args.initialDeltaX), Math.abs(args.initialDeltaY)),\n                    initialWidth = this._initialElementWidth,\n                    initialHeight = this._initialElementHeight,\n                    deltas;\n\n                if (min === args.initialDeltaX || min === args.initialDeltaX * -1) {\n                    args.initialDeltaY = args.initialDeltaX * initialHeight / initialWidth;\n                    args.deltaY = args.deltaX;\n                } else if (min === args.initialDeltaY || min === args.initialDeltaY * -1) {\n                    args.initialDeltaX = args.initialDeltaY * initialWidth / initialHeight;\n                    args.deltaX = args.deltaY;\n                }\n\n                deltas = this._getDeltas(args);\n\n                this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n                this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n                this.showResizeHandles();\n            },\n\n            _resizeWidth: function(delta, initialDelta) {\n                var that = this;\n                var element = $(that.element);\n                var currentWidth = outerWidth(element);\n                var newWidth;\n                var constrainedWidth;\n\n                if (delta === 0) {\n                    return;\n                }\n\n                if (isUndefined(that._initialElementWidth)) {\n                    that._initialElementWidth = currentWidth;\n                }\n\n                //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n                //on each drag does not work due to browser calculation of computed styles\n                constrainedWidth = constrain({\n                    value: that._initialElementWidth + initialDelta,\n                    min: that.options.minWidth,\n                    max: that._getMaxDimensionValue(WIDTH)\n                });\n\n                newWidth = toPixels(constrainedWidth);\n                element[0].style[WIDTH] = newWidth;\n                element.attr(WIDTH, Math.floor(constrainedWidth));\n            },\n\n            _resizeHeight: function(delta, initialDelta) {\n                var that = this;\n                var element = $(that.element);\n                var currentHeight = outerHeight(element);\n                var newHeight;\n                var constrainedHeight;\n\n                if (delta === 0) {\n                    return;\n                }\n\n                if (isUndefined(that._initialElementHeight)) {\n                    that._initialElementHeight = currentHeight;\n                }\n\n                //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n                //on each drag does not work due to browser calculation of computed styles\n                constrainedHeight = constrain({\n                    value: that._initialElementHeight + initialDelta,\n                    min: that.options.minHeight,\n                    max: Number.MAX_SAFE_INTEGER\n                });\n\n                newHeight = toPixels(constrainedHeight);\n                element[0].style[HEIGHT] = newHeight;\n                element.attr(HEIGHT, Math.floor(constrainedHeight));\n            }\n        });\n\n        var ElementResizingFactory = Class.extend({\n            create: function(editor) {\n                var factory = this;\n\n                $(editor.body)\n                    .on(\"dragstart\" + NS, function() {\n                        var nodes = RangeUtils.nodes(editor.getRange()),\n                            hasImg = false;\n\n                        nodes.forEach(function(node) {\n                            if (node.nodeName === \"IMG\") {\n                                hasImg = true;\n                            }\n                        });\n\n                        if (hasImg && nodes.length > 1) {\n                            editor.elementResizing._destroyResizeHandles();\n                        }\n                    })\n                    .on(DROP + NS, function() {\n                        setTimeout(function() {\n                            var image = RangeUtils.image(editor.getRange());\n\n                            if (image) {\n                                editor.elementResizing._destroyResizeHandles();\n                                editor.elementResizing.element = image;\n                                editor.elementResizing.showResizeHandles();\n                            }\n                        });\n                    })\n                    .on(MOUSE_DOWN + NS, TABLE + COMMA + IMG, function(e) {\n                        var eventTarget = e.target;\n                        var eventCurrentTarget = e.currentTarget;\n                        var elementResizing = editor.elementResizing;\n                        var element = elementResizing ? elementResizing.element : null;\n\n                        if (elementResizing) {\n                            if (element && eventCurrentTarget !== element) {\n                                if (contains(eventCurrentTarget, element) && element !== eventTarget && contains(element, eventTarget)) {\n                                    //prevent a parent table resizing init when clicking on a nested table when the event bubbles\n                                    //instead of stopping event propagation\n                                    return;\n                                }\n                                else {\n                                    if (element !== eventTarget) {\n                                        editor._destroyElementResizing();\n                                        factory._initResizing(editor, eventCurrentTarget);\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            factory._initResizing(editor, eventCurrentTarget);\n                        }\n\n                        editor._showElementResizeHandles();\n                    })\n                    .on(MOUSE_DOWN + NS, function(e) {\n                        var elementResizing = editor.elementResizing;\n                        var element = elementResizing ? elementResizing.element : null;\n                        var target = e.target;\n                        var isResizeHandleOrChild = $(target).hasClass(RESIZE_HANDLE_WRAPPER_CLASS) || $(target).parents(DOT + RESIZE_HANDLE_WRAPPER_CLASS).length > 0;\n\n                        if (elementResizing && element !== target && !contains(element, target) && !isResizeHandleOrChild) {\n                            editor._destroyElementResizing();\n                        }\n                    });\n            },\n\n            dispose: function(editor) {\n                $(editor.body).off(NS);\n            },\n\n            _initResizing: function(editor, element) {\n                // table and image resizing is natively supported in IE\n                // https://stackoverflow.com/questions/53831846/resizing-images-in-contenteditable-div-stopped-working-in-firefox\n                // Enable custom resize handlers for FF too\n                if (!browser.msie) {\n                    if ($(element).is(TABLE)) {\n                        editor.elementResizing = editor.tableResizing = new TableResizing(element, {\n                            appendHandlesTo: editor.body,\n                            rtl: kendo.support.isRtl(editor.element),\n                            rootElement: editor.body\n                        });\n                    } else if ($(element).is(IMG)) {\n                        editor.elementResizing = new ImageResizing(element, {\n                            appendHandlesTo: editor.body,\n                            rtl: kendo.support.isRtl(editor.element),\n                            rootElement: editor.body\n                        });\n                    }\n\n                    if (editor._showElementResizeHandlesProxy) {\n                        editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n                        editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n                    }\n                }\n            }\n        });\n\n        ElementResizingFactory.current = new ElementResizingFactory();\n\n        extend(Editor, {\n            TableResizing: TableResizing,\n            ImageResizing: ImageResizing,\n            ElementResizing: ElementResizing,\n            ElementResizingFactory: ElementResizingFactory\n        });\n\n    })(window.kendo);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        RangeUtils = Editor.RangeUtils,\n        dom = Editor.Dom,\n        registerTool = EditorUtils.registerTool,\n        Command = Editor.Command;\n\n    var tableFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"table\"] }]);\n    var cellsFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"td\",\"th\"] }]);\n    var reUnit = /([a-z]+|%)$/i;\n\n    var COL = \"col\";\n    var ROW = \"row\";\n    var COLGROUP = \"colgroup\";\n    var SCOPE = \"scope\";\n    var COL_INDEX = \"col-index\";\n    var TH = \"th\";\n    var TD = \"td\";\n    var THEAD = \"thead\";\n    var HEADERS = \"headers\";\n    var TABLE = \"table\";\n\n    var TableWizardCommand = Command.extend({\n        exec: function() {\n            var cmd = this;\n            var editor = cmd.editor;\n            var range = cmd.range = cmd.lockRange();\n            var isTableCellWizard = cmd.options.tableCellWizard;\n            var selectedTable = cmd._sourceTable = !cmd.options.insertNewTable ? cmd._selectedTable(range) : undefined$1;\n            var selectedCells = cmd._selectedTableCells = selectedTable ? cmd._selectedCells(range) : undefined$1;\n            var options = {\n                visible: false,\n                messages: editor.options.messages,\n                closeCallback: cmd.onDialogClose.bind(cmd),\n                table: cmd.parseTable(selectedTable, selectedCells),\n                dialogOptions: editor.options.dialogOptions,\n                isRtl: kendo.support.isRtl(editor.wrapper)\n            };\n\n            var dialog = new Editor.TableWizardDialog(options);\n            dialog.open(isTableCellWizard);\n        },\n\n        onDialogClose: function(data) {\n            var cmd = this;\n            cmd.releaseRange(cmd.range);\n\n            if (data) { //Ok button pressed\n                if (cmd.options.insertNewTable) {\n                    cmd.insertTable(cmd.createNewTable(data));\n                } else {\n                    cmd.updateTable(data, cmd._sourceTable, cmd._selectedTableCells);\n                }\n            }\n        },\n        releaseRange: function(range) {\n            var cmd = this;\n            var doc = cmd.editor.document;\n            dom.windowFromDocument(doc).focus();\n            Command.fn.releaseRange.call(cmd, range);\n        },\n        insertTable: function(table) {\n            var range = this.range;\n\n            range.insertNode(table);\n            range.collapse(true);\n            this.editor.selectRange(range);\n\n            this._ensureFocusableAfterTable(table);\n        },\n        _ensureFocusableAfterTable: function(table) {\n            var siblingNodes = $(table).parent().contents();\n            var lastSiblingIndex = siblingNodes.length - 1;\n            var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n            while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n                lastSiblingIndex -= 1;\n                lastSibling = siblingNodes.get(lastSiblingIndex);\n            }\n\n            if (lastSibling === table) {\n                dom.insertAfter(dom.createEmptyNode(this.editor.document, \"p\"), table);\n            }\n        },\n        updateTable: function(data, table, selectedCells) {\n            var cmd = this;\n            var tableRows = $(table.rows).toArray();\n            var tableProp = data.tableProperties;\n            var rows = tableProp.rows;\n            var tHead = table.tHead;\n            var last = cmd._lastInCollection;\n            var lastSelectedRow, cellProp;\n\n            //Leave only first selected cell\n            while (selectedCells.length > 1) {\n                selectedCells.pop();\n            }\n\n            lastSelectedRow = selectedCells.length ? last(selectedCells).parentNode : last(tableRows);\n\n            cmd._deleteTableRows(tableRows, tableRows.length - rows);\n\n            if (tableRows.length < rows) {\n                cmd._addRows(lastSelectedRow, rows, tableRows);\n            }\n\n            dom.reMapTableColumns(table, COL_INDEX);\n            cmd._updateColumns(tableRows, tableProp.columns, selectedCells, lastSelectedRow);\n            cmd._updateTableProperties(table, tableProp);\n\n            cellProp = data.cellProperties;\n            if (selectedCells[0]) {\n                dom.attr(selectedCells[0], { id: (cellProp || {}).id || null });\n            }\n            if (cellProp) {\n                (cellProp.selectAllCells ? $(tableRows).children() : $(selectedCells)).each(function(i, cell) {\n                    cmd._updateCellProperties(cell, cellProp, tableProp);\n                });\n            }\n\n            cmd._updateCaption(table, tableProp);\n\n            if (tHead) {\n                cmd._updateHeadersWithThead(table, data);\n            } else {\n                cmd._updateHeadersNoThead(table, data);\n            }\n\n            cmd._updateHeaderAssociates(table, tableProp);\n            dom.clearTableMappings(table, COL_INDEX);\n        },\n        _isHeadingRow: function(row) {\n            return dom.is(row.cells[0], TH) && dom.is(row.parentNode, THEAD);\n        },\n        _isHeadingCell: function(cell) {\n            return dom.is(cell, TH);\n        },\n        cellsWithHeadersAssociated: function(table) {\n            var cells = $(table.rows).children();\n            var headingIds = [];\n            var checkHeader = function(header) {\n                return headingIds.indexOf(header) > -1;\n            };\n\n            cells.each(function(c, cell) {\n                if (cell.id && dom.is(cell, TH)) {\n                    headingIds.push(cell.id);\n                }\n            });\n\n            var associatedCells = cells.filter(function(c, cell) {\n                var headersAttr = cell.getAttribute(HEADERS);\n                var headersArray;\n\n                if (headersAttr && !dom.is(cell, TH)) {\n                    headersArray = headersAttr.split(\" \");\n\n                    if (headersArray && headersArray.length > 0) {\n                        return headersArray.some(checkHeader);\n                    }\n                }\n\n                return false;\n            });\n\n            return !!associatedCells.length;\n        },\n        _insertCells: function(count, row, index) {\n            index = isNaN(index) ? -1 : index;\n            for (var i = 0, cell; i < count; i++) {\n                cell = row.insertCell(index);\n                cell.innerHTML = \"&nbsp;\";\n            }\n        },\n        _deleteTableRows: function(rows, count) {\n            for (var i = 0, row, rowParent; i < count; i++) {\n                row = rows.pop();\n                rowParent = row.parentNode;\n                rowParent.removeChild(row);\n                if (!rowParent.rows.length) {\n                    dom.remove(rowParent);\n                }\n            }\n        },\n        createNewTable: function(data) {\n            var cmd = this;\n            var doc = cmd.editor.document;\n            var tableProp = data.tableProperties;\n            var table = dom.create(doc, TABLE);\n            var rowIndex = 0;\n            var thead;\n\n            cmd._updateTableProperties(table, tableProp);\n            cmd._updateCaption(table, tableProp);\n\n            if (tableProp.headerRows && tableProp.headerRows > 0) {\n                thead = table.createTHead();\n                cmd._createTableRows(data, thead, rowIndex, true);\n                rowIndex += tableProp.headerRows;\n            }\n\n            var tbody = table.createTBody();\n            cmd._createTableRows(data, tbody, rowIndex, false);\n\n            dom.reMapTableColumns(table, COL_INDEX);\n\n            if (tableProp.cellsWithHeaders === \"ids\") {\n                dom.associateWithIds(table);\n            } else if (tableProp.cellsWithHeaders === \"scope\") {\n                cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n            }\n\n            dom.clearTableMappings(table, COL_INDEX);\n\n            return table;\n        },\n        _createTableRows: function(data, container, initialIndex, headerRows) {\n            var cmd = this;\n            var tableProp = data.tableProperties;\n            var cellProp = data.cellProperties;\n            var columns = tableProp.columns;\n            var rows = headerRows ? tableProp.headerRows : tableProp.rows;\n            var headerColumns = tableProp.headerColumns;\n\n            for (var r = initialIndex, row; r < rows; r++) {\n                row = container.insertRow();\n\n                for (var c = 0, cell; c < columns; c++) {\n                    if (headerRows || headerColumns > c) {\n                        cell = document.createElement(TH);\n                    } else {\n                        cell = document.createElement(TD);\n                    }\n\n                    row.appendChild(cell);\n                    cell.innerHTML = \"&nbsp;\";\n                    if (cellProp && r === 0 && c === 0 && cellProp.id) {\n                        cell.id = cellProp.id;\n                    }\n\n                    cmd._updateCellProperties(cell, cellProp && (cellProp.selectAllCells || (r === 0 && c === 0)) ? cellProp : {}, tableProp);\n                }\n            }\n        },\n        _addRows: function(lastSelectedRow, rows, tableRows) {\n            var cmd = this;\n            var rowIndex = $(lastSelectedRow).index();\n            var cellsLength = lastSelectedRow.cells.length;\n            var newRowsCount = rows - tableRows.length;\n            var parent = lastSelectedRow.parentNode;\n            var row;\n\n            while (newRowsCount) {\n                row = parent.insertRow(rowIndex + 1);\n                cmd._insertCells(cellsLength - row.cells.length, row);\n                newRowsCount--;\n            }\n        },\n        _updateColumns: function(tableRows, columns, selectedCells, lastSelectedRow) {\n            var cmd = this;\n            var last = cmd._lastInCollection;\n            var firstRowLastCell = last(tableRows[0].cells);\n            var numberOfColumns = Number(firstRowLastCell.getAttribute(COL_INDEX)) + firstRowLastCell.colSpan;\n\n            if (numberOfColumns > columns) {\n                $(tableRows).each(function(i, row) {\n                    var lastCurrentCell = last(row.cells);\n                    var rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n\n                    while (rowColumns > columns) {\n                        if (lastCurrentCell.colSpan && lastCurrentCell.colSpan > 1) {\n                            lastCurrentCell.colSpan -= 1;\n                        } else {\n                            row.deleteCell(-1);\n                        }\n\n                        lastCurrentCell = last(row.cells);\n                        rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n                    }\n                });\n            }\n\n            if (numberOfColumns < columns) {\n                var cellIndex = $(last(selectedCells) || last(lastSelectedRow.cells)).index();\n                $(tableRows).each(function(i, row) {\n                    var lastCurrentCell = last(row.cells);\n                    cmd._insertCells(columns - Number(lastCurrentCell.getAttribute(COL_INDEX)) - lastCurrentCell.colSpan, row, cellIndex + 1);\n                });\n            }\n        },\n        _updateTableProperties: function(table, data) {\n            var style = this._getStylesData(data);\n            dom.attr(table, {\n                cellSpacing: data.cellSpacing || null,\n                topCellPadding: data.topCellPadding || null,\n                leftCellPadding: data.leftCellPadding || null,\n                bottomCellPadding: data.bottomCellPadding || null,\n                rightCellPadding: data.rightCellPadding || null,\n                className: data.className || null,\n                id: data.id || null,\n                summary: data.summary || null,\n                style: style || null\n            });\n            $(table).addClass(\"k-table\");\n        },\n        _updateCellProperties: function(cell, data, tableData) {\n            var style = this._getStylesData(data);\n            style.paddingTop = data.topCellPadding || tableData?.topCellPadding || null;\n            style.paddingLeft = data.leftCellPadding || tableData?.leftCellPadding || null;\n            style.paddingBottom = data.bottomCellPadding || tableData?.bottomCellPadding || null;\n            style.paddingRight = data.rightCellPadding || tableData?.rightCellPadding || null;\n            style.margin = data.cellMargin || null;\n            dom.attr(cell, {\n                style: style || null,\n                className: data.className || null\n            });\n        },\n        _updateCaption: function(table, data) {\n            if (table.caption && !data.captionContent) {\n                table.deleteCaption();\n            } else if (data.captionContent) {\n                var caption = table.createCaption();\n                caption.innerHTML = data.captionContent;\n                var alignment = this._getAlignmentData(data.captionAlignment);\n                dom.attr(caption, {\n                    style: {\n                        textAlign: alignment.textAlign,\n                        verticalAlign: alignment.verticalAlign\n                    }\n                });\n            }\n        },\n        _updateHeadersNoThead: function(table, data) {\n            var cmd = this;\n            var tableProp = data.tableProperties;\n            var rows = table.rows;\n            var row, cells, cell, i, j;\n\n            for (i = 0; i < rows.length; i++) {\n                row = rows[i];\n                cells = row.cells;\n\n                for (j = 0; j < cells.length; j++) {\n                    cell = cells[j];\n                    if (!cmd._isHeadingCell(cell) && (i < tableProp.headerRows || tableProp.headerColumns > cell.getAttribute(COL_INDEX))) {\n                        dom.changeTag(cell, TH, false);\n                    } else if (cmd._isHeadingCell(cell) && i >= tableProp.headerRows && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                        dom.changeTag(cell, TD, false);\n                    }\n                }\n            }\n        },\n        _updateHeadersWithThead: function(table, data) {\n            var cmd = this;\n            var tableProp = data.tableProperties;\n            var thead = table.tHead;\n            var rowIndex = 0;\n            var tbody = table.tBodies[0];\n            var row, cell, i;\n\n            if (!tbody) {\n                tbody = table.createTBody();\n            }\n\n            if (tableProp.headerRows && tableProp.headerRows > 0) {\n                if (!thead) {\n                    thead = table.createTHead();\n                }\n\n                while (thead.rows.length < tableProp.headerRows) {\n                    thead.appendChild(tbody.rows[0]);\n                }\n\n                while (thead.rows.length > tableProp.headerRows) {\n                    tbody.appendChild(thead.rows[0]);\n                }\n\n                cmd._swapToHeaderCells(thead);\n            } else if (thead) {\n                while (thead.rows.length > 0) {\n                    tbody.appendChild(thead.rows[thead.rows.length - 1]);\n                }\n\n                table.deleteTHead();\n            }\n\n            while (tbody.rows.length > rowIndex) {\n                row = tbody.rows[rowIndex];\n                for (i = 0; i < row.cells.length; i++) {\n                    cell = row.cells[i];\n                    if (cmd._isHeadingCell(cell) && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                        dom.changeTag(cell, TD, false);\n                    } else if (!cmd._isHeadingCell(cell) && tableProp.headerColumns > cell.getAttribute(COL_INDEX)) {\n                        dom.changeTag(cell, TH, false);\n                    }\n                }\n                rowIndex += 1;\n            }\n        },\n        _updateHeaderAssociates: function(table, tableProp) {\n            var cmd = this;\n\n            if (tableProp.cellsWithHeaders === \"ids\") {\n                if (!cmd.cellsWithHeadersAssociated(table)) {\n                    cmd._removeScopes(table);\n                }\n                dom.associateWithIds(table);\n            } else if (tableProp.cellsWithHeaders === \"scope\") {\n                if (cmd.cellsWithHeadersAssociated(table)) {\n                    cmd._removeAssociates(table);\n                }\n                cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n            } else {\n                if (cmd.cellsWithHeadersAssociated(table)) {\n                    cmd._removeAssociates(table);\n                } else {\n                    cmd._removeScopes(table);\n                }\n            }\n        },\n        _addScopes: function(table, headerRows, headerCols) {\n            var rows = table.rows;\n            var i, j, row, cell;\n\n            for (i = 0; i < rows.length; i++) {\n                row = rows[i];\n\n                for (j = 0; j < row.cells.length; j++) {\n                    cell = row.cells[j];\n\n                    if (i < headerRows) {\n                        cell.setAttribute(SCOPE, COL);\n                    } else if (cell.getAttribute(COL_INDEX) < headerCols) {\n                        cell.setAttribute(SCOPE, ROW);\n                    }\n                }\n            }\n        },\n        _removeScopes: function(table) {\n            $(table).find(TH).removeAttr(SCOPE);\n            $(table).find(COL).remove();\n            $(table).find(COLGROUP).remove();\n        },\n        _removeAssociates: function(table) {\n            $(table).find(\"th, td\").removeAttr(\"id headers\");\n        },\n        _swapToHeaderCells: function(thead) {\n            var tds = $(thead).find(\"td\");\n            var swapCell = function(index, cell) {\n                dom.changeTag(cell, TH, false);\n            };\n            tds.each(swapCell);\n        },\n        _getStylesData: function(data) {\n            var that = this;\n            var alignment = this._getAlignmentData(data.alignment);\n            var whiteSpace = \"wrapText\" in data ? (data.wrapText ? \"\" : \"nowrap\") : null;\n\n            return $.extend({\n                width: data.width ? data.width + data.widthUnit : null,\n                height: data.height ? data.height + data.heightUnit : null,\n                textAlign: alignment.textAlign,\n                verticalAlign: alignment.verticalAlign,\n                backgroundColor: data.bgColor || \"\",\n                borderWidth: data.borderWidth,\n                borderStyle: data.borderStyle,\n                borderColor: data.borderColor || \"\",\n                borderCollapse: data.collapseBorders ? \"collapse\" : null,\n                whiteSpace: whiteSpace\n            }, that._getTablePositionData(data.position));\n        },\n        _getAlignmentData: function(alignment) {\n            var textAlign = \"\";\n            var verticalAlign = textAlign;\n\n            if (alignment) {\n                if (alignment.indexOf(\" \") != -1) {\n                    var align = alignment.split(\" \");\n                    textAlign = align[0];\n                    verticalAlign = align[1];\n                } else {\n                    textAlign = alignment;\n                }\n            }\n            return { textAlign: textAlign, verticalAlign: verticalAlign };\n        },\n        _getTablePositionData: function(position) {\n            if (!position) {\n                return {};\n            }\n\n            return { marginLeft: position != \"left\" ? \"auto\" : \"\", marginRight: position != \"right\" ? \"auto\" : \"\" };\n        },\n        parseTable: function(table, selectedCells) {\n            if (!table) {\n                return { tableProperties: {}, selectedCells: [] };\n            }\n\n            var cmd = this;\n            var tStyle = table.style;\n            var rows = table.rows;\n            var caption = table.caption;\n            var captionClone = $(caption ? caption.cloneNode(true) : undefined$1);\n            captionClone.find(\".k-marker\").remove();\n\n            var cssClass = table.className;\n            cssClass = cssClass.replace(/^k-table\\s|\\sk-table$/, \"\");\n            cssClass = cssClass.replace(/\\sk-table\\s/, \" \");\n            cssClass = cssClass.replace(/^k-table$/, \"\");\n\n            var tableAlignment = cmd._getAlignment(table, true);\n            var tablePosition = cmd._getTablePosition(table);\n            var captionAlignment = caption ? cmd._getAlignment(caption) : undefined$1;\n            var numberOfHeaderRows = dom._getNumberOfHeaderRows(table);\n\n            var cellsWithHeaders;\n            if (cmd.cellsWithHeadersAssociated(table)) {\n                cellsWithHeaders = \"ids\";\n            } else if ($(table).find(\"th[scope]\").length > 0) {\n                cellsWithHeaders = \"scope\";\n            } else {\n                cellsWithHeaders = \"none\";\n            }\n\n            dom.reMapTableColumns(table, COL_INDEX);\n            var numberOfColumns = dom._getNumberOfColumns(table);\n            var numberOfHeaderColumns = dom._getNumberOfHeaderColumns(table, numberOfHeaderRows);\n            dom.clearTableMappings(table, COL_INDEX);\n\n            var tableJson = {\n                tableProperties: {\n                    width: tStyle.width || table.width ? parseFloat(tStyle.width || table.width) : null,\n                    height: tStyle.height || table.height ? parseFloat(tStyle.height || table.height) : null,\n                    columns: numberOfColumns,\n                    rows: rows.length,\n                    widthUnit: cmd._getUnit(tStyle.width),\n                    heightUnit: cmd._getUnit(tStyle.height),\n                    cellSpacing: table.cellSpacing,\n                    topCellPadding: table.topCellPadding,\n                    leftCellPadding: table.leftCellPadding,\n                    bottomCellPadding: table.bottomCellPadding,\n                    rightCellPadding: table.rightCellPadding,\n                    alignment: tableAlignment.textAlign,\n                    position: tablePosition,\n                    bgColor: tStyle.backgroundColor || table.bgColor,\n                    className: cssClass,\n                    id: table.id,\n                    borderWidth: tStyle.borderWidth || table.border,\n                    borderColor: tStyle.borderColor,\n                    borderStyle: tStyle.borderStyle || \"\",\n                    collapseBorders: !!tStyle.borderCollapse,\n                    summary: table.summary,\n                    captionContent: caption ? captionClone.html() : \"\",\n                    captionAlignment: caption && captionAlignment.textAlign ? captionAlignment.textAlign + \" \" + captionAlignment.verticalAlign : \"\",\n                    headerRows: numberOfHeaderRows,\n                    headerColumns: numberOfHeaderColumns,\n                    cellsWithHeaders: cellsWithHeaders\n                },\n                selectedCells: []\n            };\n\n            tableJson.rows = cmd.parseTableRows(rows, selectedCells, tableJson);\n\n            return tableJson;\n        },\n        parseTableRows: function(rows, selectedCells, tableJson) {\n            var cmd = this;\n            var data = [], row, rowData, cells, cell, cellData;\n            for (var i = 0; i < rows.length; i++) {\n                row = rows[i];\n                rowData = { cells: [] };\n                cells = row.cells;\n                data.push(rowData);\n                for (var j = 0; j < cells.length; j++) {\n                    cell = cells[j];\n                    cellData = cmd.parseCell(cell);\n                    if ($.inArray(cell, selectedCells) != -1) {\n                        tableJson.selectedCells.push(cellData);\n                    }\n                    rowData.cells.push(cellData);\n                }\n            }\n            return data;\n        },\n        parseCell: function(cell) {\n            var cmd = this;\n            var cStyle = cell.style;\n            var alignment = cmd._getAlignment(cell);\n            alignment = alignment.textAlign ? alignment.textAlign + \" \" + alignment.verticalAlign : \"\";\n\n            var data = {\n                width: cStyle.width || cell.width ? parseFloat(cStyle.width || cell.width) : null,\n                height: cStyle.height || cell.height ? parseFloat(cStyle.height || cell.height) : null,\n                widthUnit: cmd._getUnit(cStyle.width),\n                heightUnit: cmd._getUnit(cStyle.height),\n                cellMargin: cStyle.margin,\n                topCellPadding: cStyle.paddingTop,\n                leftCellPadding: cStyle.paddingLeft,\n                bottomCellPadding: cStyle.paddingBottom,\n                rightCellPadding: cStyle.paddingRight,\n                alignment: alignment,\n                bgColor: cStyle.backgroundColor || cell.bgColor,\n                className: cell.className,\n                id: cell.id,\n                borderWidth: cStyle.borderWidth || cell.border,\n                borderColor: cStyle.borderColor,\n                borderStyle: cStyle.borderStyle,\n                wrapText: cStyle.whiteSpace != \"nowrap\"\n            };\n\n            return data;\n        },\n        _getTablePosition: function(element) {\n            var style = element.style;\n            if (style.marginLeft == \"auto\" && style.marginRight == \"auto\") {\n                return \"center\";\n            }\n\n            if (style.marginLeft == \"auto\") {\n                return \"right\";\n            }\n\n            return \"left\";\n        },\n        _getAlignment: function(element, horizontalOnly) {\n            var style = element.style;\n            var hAlign = style.textAlign || element.align || \"\";\n            if (horizontalOnly) {\n                return { textAlign: hAlign };\n            }\n            var vAlign = style.verticalAlign || element.vAlign || \"\";\n            if (hAlign && vAlign) {\n                return { textAlign: hAlign, verticalAlign: vAlign };\n            }\n            if (!hAlign && vAlign) {\n                return { textAlign: \"left\", verticalAlign: vAlign };\n            }\n            if (hAlign && !vAlign) {\n                return { textAlign: hAlign, verticalAlign: \"top\" };\n            }\n            return { textAlign: \"\", verticalAlign: \"\" };\n        },\n        _getUnit: function(value) {\n            var unit = (value || \"\").match(reUnit);\n            return unit ? unit[0] : \"px\";\n        },\n        _selectedTable: function(range) {\n            var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n            return tableFormatFinder.findSuitable(nodes)[0];\n        },\n        _selectedCells: function(range) {\n            var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n            return cellsFormatFinder.findSuitable(nodes);\n        },\n        _lastInCollection: function(collection) {\n            return collection[collection.length - 1];\n        }\n    });\n\n    var TableWizardTool = Editor.Tool.extend({\n        command: function(options) {\n            options.insertNewTable = this.options.insertNewTable;\n            options.tableCellWizard = !!this.options.tableCellWizard;\n            return new TableWizardCommand(options);\n        }\n    });\n\n    var TableWizardEditTool = TableWizardTool.extend({\n        update: function(ui, nodes) {\n            var isFormatted = !tableFormatFinder.isFormatted(nodes),\n                toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n            if (isFormatted === true) {\n                toolbar.hide(ui);\n            } else {\n                toolbar.show(ui);\n            }\n        }\n    });\n\n    var TableCellWizardEditTool = TableWizardTool.extend({\n        update: function(ui, nodes) {\n            var isFormatted = !tableFormatFinder.isFormatted(nodes),\n                toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n            if (isFormatted === true) {\n                toolbar.hide(ui);\n            } else {\n                toolbar.show(ui);\n            }\n        }\n    });\n\n    kendo.ui.editor.TableWizardTool = TableWizardTool;\n    kendo.ui.editor.TableWizardCommand = TableWizardCommand;\n\n    registerTool(\"tableProperties\", new TableWizardEditTool({ command: TableWizardCommand, insertNewTable: false, property: \"tableProperties\" }));\n    registerTool(\"tableCellProperties\", new TableCellWizardEditTool({ command: TableWizardCommand, tableCellWizard: true, insertNewTable: false, property: \"tableCellProperties\" }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    const FORM_FIELD_CLASS = \"k-form-field\",\n          INVISIBLE_CLASS = \"k-visibility-invisible\",\n          DOT = \".\";\n\n    var kendo = window.kendo,\n        encode = kendo.htmlEncode,\n        numericTextBoxSettings = { format: \"0\", min: 0 },\n        units = [\"px\", \"em\"],\n        borderStyles = [\"solid\", \"dotted\", \"dashed\", \"double\", \"groove\", \"ridge\", \"inset\", \"outset\", \"initial\", \"inherit\", \"none\", \"hidden\"];\n\n    var DEFAULT_NUMBER_OF_COLS_AND_ROWS = 4;\n\n    var textWrapDropDownSettings = {\n        dataSource: [{\n            className: \"text-wrap\",\n            value: \"wrap\"\n        }, {\n            className: \"parameter-string\",\n            value: \"nowrap\"\n        }],\n        dataTextField: \"className\",\n        dataValueField: \"value\",\n        template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n        valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-text-wrap\" }) + encode(tooltip)\n    };\n\n    var tablePositionDropDownSettings = {\n        dataSource: [{\n            className: \"table-position-start\",\n            value: \"left\"\n        }, {\n            className: \"table-position-center\",\n            value: \"center\"\n        }, {\n            className: \"table-position-end\",\n            value: \"right\"\n        }],\n        dataTextField: \"className\",\n        dataValueField: \"value\",\n        template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n        valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n    };\n\n    var tableAlignmentDropDownSettings = {\n        dataSource: [{\n            className: \"table-align-middle-left\",\n            value: \"left\"\n        }, {\n            className: \"table-align-middle-center\",\n            value: \"center\"\n        }, {\n            className: \"table-align-middle-right\",\n            value: \"right\"\n        }, {\n            className: \"align-remove\",\n            value: \"\"\n        }],\n        dataTextField: \"className\",\n        dataValueField: \"value\",\n        template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n        valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n    };\n\n    var cellAlignmentDropDownSettings = {\n        dataSource: [{\n            className: \"table-align-top-left\",\n            value: \"left top\"\n        }, {\n            className: \"table-align-top-center\",\n            value: \"center top\"\n        }, {\n            className: \"table-align-top-right\",\n            value: \"right top\"\n        }, {\n            className: \"table-align-middle-left\",\n            value: \"left middle\"\n        }, {\n            className: \"table-align-middle-center\",\n            value: \"center middle\"\n        }, {\n            className: \"table-align-middle-right\",\n            value: \"right middle\"\n        }, {\n            className: \"table-align-bottom-left\",\n            value: \"left bottom\"\n        }, {\n            className: \"table-align-bottom-center\",\n            value: \"center bottom\"\n        }, {\n            className: \"table-align-bottom-right\",\n            value: \"right bottom\"\n        }, {\n            className: \"align-remove\",\n            value: \"\"\n        }],\n        dataTextField: \"className\",\n        dataValueField: \"value\",\n        template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n        valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n    };\n\n    var accessibilityAlignmentDropDownSettings = {\n        dataSource: [{\n            className: \"table-align-top-left\",\n            value: \"left top\"\n        }, {\n            className: \"table-align-top-center\",\n            value: \"center top\"\n        }, {\n            className: \"table-align-top-right\",\n            value: \"right top\"\n        }, {\n            className: \"table-align-bottom-left\",\n            value: \"left bottom\"\n        }, {\n            className: \"table-align-bottom-center\",\n            value: \"center bottom\"\n        }, {\n            className: \"table-align-bottom-right\",\n            value: \"right bottom\"\n        }, {\n            className: \"align-remove\",\n            value: \"\"\n        }],\n        dataTextField: \"className\",\n        dataValueField: \"value\",\n        template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }),\n        valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" })\n    };\n\n    var tablePropertiesDialogTemplate = ({ messages }) =>\n        '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n            '<div id=\"k-table-wizard-tabs\" class=\"k-root-tabs\">' +\n                '<ul>' +\n                    `<li class=\"k-active\">${ messages.tableTab }</li>` +\n                    `<li>${ messages.accessibilityTab }</li>` +\n                '</ul>' +\n                '<div id=\"k-table-properties\"></div>' +\n                '<div id=\"k-accessibility-properties\"></div>' +\n            '</div>' +\n            '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                    kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                        icon: 'check',\n                            themeColor: \"primary\"\n                        }) +\n                        kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                            icon: 'cancel-outline'\n                        }) +\n            '</div>' +\n        '</div>';\n        var cellPropertiesDialogTemplate = ({ messages }) =>\n        '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n            '<div id=\"k-cell-properties\"></div>' +\n            '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                    kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                        icon: 'check',\n                            themeColor: \"primary\"\n                        }) +\n                        kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                            icon: 'cancel-outline'\n                        }) +\n            '</div>' +\n        '</div>';\n\n    var TableWizardDialog = kendo.Class.extend({\n        init: function(options) {\n            this.options = options;\n        },\n        _openTablePropertiesDialog: function() {\n            var that = this,\n                options = that.options,\n                dialogOptions = options.dialogOptions,\n                tableData = options.table,\n                dialog,\n                messages = options.messages,\n                isIE = kendo.support.browser.msie;\n\n            function close(e) {\n                e.preventDefault();\n                that.destroy();\n                dialog.destroy();\n            }\n\n            function okHandler(e) {\n                that.collectTableDialogValues(tableData);\n\n                close(e);\n\n                if (that.change) {\n                    that.change();\n                }\n\n                options.closeCallback(tableData);\n            }\n\n            function closeHandler(e) {\n                close(e);\n                options.closeCallback();\n            }\n\n            dialogOptions.close = closeHandler;\n            dialogOptions.minWidth = 700;\n            dialogOptions.width = 700;\n            dialogOptions.title = messages.tableProperties;\n            dialogOptions.visible = options.visible;\n\n            dialog = $(that._dialogTemplate(messages)).appendTo(document.body)\n                .kendoWindow(dialogOptions)\n                .addClass(\"k-editor-window\")\n                .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n                .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n                .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n                .data(\"kendoWindow\");\n\n            var element = dialog.element;\n            this.components = {};\n            that._initTabStripComponent(element);\n            that._tablePropertiesForm = that._createTablePropertiesForm(dialog, messages);\n            that._accessibilityPropertiesForm = that._createAccessibilityPropertiesForm(dialog, messages);\n\n            dialog.center();\n            dialog.open();\n\n            if (isIE) {\n                var dialogHeight = element.closest(\".k-window\").height();\n                element.css(\"max-height\", dialogHeight);\n            }\n        },\n        _openCellPropertiesDialog: function() {\n            var that = this,\n                options = that.options,\n                dialogOptions = options.dialogOptions,\n                tableData = options.table,\n                dialog,\n                messages = options.messages,\n                isIE = kendo.support.browser.msie;\n\n            function close(e) {\n                e.preventDefault();\n                that.destroy();\n                dialog.destroy();\n            }\n\n            function okHandler(e) {\n                that.collectCellDialogValues(tableData);\n\n                close(e);\n\n                if (that.change) {\n                    that.change();\n                }\n\n                options.closeCallback(tableData);\n            }\n\n            function closeHandler(e) {\n                close(e);\n                options.closeCallback();\n            }\n\n            dialogOptions.close = closeHandler;\n            dialogOptions.minWidth = 400;\n            dialogOptions.title = messages.tableCellProperties;\n            dialogOptions.visible = options.visible;\n\n            dialog = $(that._dialogTemplate(messages, cellPropertiesDialogTemplate)).appendTo(document.body)\n                .kendoWindow(dialogOptions)\n                .addClass(\"k-editor-window\")\n                .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n                .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n                .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n                .data(\"kendoWindow\");\n\n            var element = dialog.element;\n            that._cellPropertiesForm = that._createCellPropertiesForm(dialog, messages);\n\n            dialog.center();\n            dialog.open();\n\n            if (isIE) {\n                var dialogHeight = element.closest(\".k-window\").height();\n                element.css(\"max-height\", dialogHeight);\n            }\n        },\n        open: function(isCellProperties) {\n            if (!isCellProperties) {\n                this._openTablePropertiesDialog();\n            } else {\n                this._openCellPropertiesDialog();\n            }\n        },\n\n        _initTabStripComponent: function(element) {\n            var components = this.components = {};\n            components.tabStrip = element.find(\"#k-table-wizard-tabs\").kendoTabStrip({\n                animation: false\n            }).data(\"kendoTabStrip\");\n        },\n\n        collectTableDialogValues: function() {\n            var that = this;\n            var data = that.options.table;\n            that._collectTableViewValues(data);\n            that._collectAccessibilityViewValues(data);\n        },\n\n        collectCellDialogValues: function() {\n            var that = this;\n            var data = that.options.table;\n            that._collectCellViewValues(data);\n        },\n\n        _collectTableViewValues: function(tableData) {\n            var tableView = this.components.tableView;\n            var tableProperties = tableData.tableProperties;\n            var cellData = tableData.cellProperties = tableData.cellProperties || {};\n            tableProperties.width = tableView.width.value();\n            tableProperties.widthUnit = tableView.widthUnit.value();\n            tableProperties.height = tableView.height.value();\n            tableProperties.columns = tableView.columns.value();\n            tableProperties.rows = tableView.rows.value();\n            tableProperties.heightUnit = tableView.heightUnit.value();\n            tableProperties.cellSpacing = tableView.cellSpacing.value();\n            tableProperties.topCellPadding = tableView.topCellPadding.value();\n            tableProperties.leftCellPadding = tableView.leftCellPadding.value();\n            tableProperties.bottomCellPadding = tableView.bottomCellPadding.value();\n            tableProperties.rightCellPadding = tableView.rightCellPadding.value();\n            tableProperties.alignment = tableView.alignment.value();\n            tableProperties.position = tableView.position.value();\n            tableProperties.bgColor = tableView.bgColor.value();\n            tableProperties.borderWidth = tableView.borderWidth.value();\n            tableProperties.borderColor = tableView.borderColor.value();\n            tableProperties.borderStyle = tableView.borderStyle.value();\n            tableProperties.collapseBorders = tableView.collapseBorders.check();\n\n            if (!cellData.width) {\n                cellData.selectAllCells = true;\n                cellData.width = 100 / tableData.tableProperties.columns;\n                cellData.widthUnit = \"%\";\n            }\n        },\n\n        _collectCellViewValues: function(table) {\n            var cellData = table.cellProperties = table.cellProperties || {};\n            var cellView = this.components.cellView;\n\n            cellData.selectAllCells = cellView.selectAllCells.check();\n            cellData.width = cellView.width.value();\n            cellData.widthUnit = cellView.widthUnit.value();\n            cellData.height = cellView.height.value();\n            cellData.heightUnit = cellView.heightUnit.value();\n            cellData.independentCellPaddings = cellView.independentCellPaddings.check();\n            cellData.topCellPadding = cellView.topCellPadding.value();\n            cellData.leftCellPadding = cellView.leftCellPadding.value();\n            cellData.bottomCellPadding = cellView.bottomCellPadding.value();\n            cellData.rightCellPadding = cellView.rightCellPadding.value();\n            cellData.cellMargin = cellView.cellMargin.value();\n            cellData.alignment = cellView.alignment.value();\n            cellData.bgColor = cellView.bgColor.value();\n            cellData.className = cellView.className.value();\n            cellData.id = cellView.id.value();\n            cellData.borderWidth = cellView.borderWidth.value();\n            cellData.borderColor = cellView.borderColor.value();\n            cellData.borderStyle = cellView.borderStyle.value();\n            cellData.wrapText = cellView.wrapTextValue.value() == \"wrap\";\n\n            if (!cellData.width) {\n                cellData.selectAllCells = true;\n                cellData.width = 100 / table.tableProperties.columns;\n                cellData.widthUnit = \"%\";\n            }\n        },\n\n       _collectAccessibilityViewValues: function(table) {\n            var tableProperties = table.tableProperties;\n            var accessibilityView = this.components.accessibilityView;\n            tableProperties.captionContent = accessibilityView.captionContent.value();\n            tableProperties.captionAlignment = accessibilityView.captionAlignment.value();\n            tableProperties.summary = accessibilityView.summary.value();\n            tableProperties.cellsWithHeaders = accessibilityView.cellsWithHeaders.value();\n            tableProperties.className = accessibilityView.className.value();\n            tableProperties.id = accessibilityView.id.value();\n            tableProperties.headerRows = accessibilityView.headerRows.value();\n            tableProperties.headerColumns = accessibilityView.headerColumns.value();\n        },\n        _addUnit: function(units, value) {\n            if (value && $.inArray(value, units) == -1) {\n                units.push(value);\n            }\n        },\n\n        _initNumericTextbox: function(element, property, data, storage, settings) {\n            var component = storage[property] = element.kendoNumericTextBox(\n                    settings ? $.extend({}, numericTextBoxSettings, settings) : numericTextBoxSettings\n                ).data(\"kendoNumericTextBox\");\n            if (property in data) {\n                component.value(parseInt(data[property], 10));\n            }\n        },\n\n        _initDropDownList: function(element, property, data, storage, dataSource) {\n            var component = storage[property] = element.kendoDropDownList({\n                dataSource: dataSource\n            }).data(\"kendoDropDownList\");\n            this._setComponentValue(component, data, property);\n        },\n\n        _initBorderStyleDropDown: function(element, property, data, storage, dataSource) {\n            var component = storage[property] = element.kendoDropDownList({\n                dataSource: dataSource,\n                optionLabel: this.options.messages.borderNone\n            }).data(\"kendoDropDownList\");\n            this._setComponentValue(component, data, property);\n        },\n\n        _initTablePositionDropDown: function(element, data) {\n            var messages = this.options.messages;\n            var tableView = this.components.tableView;\n            var dataSource = tablePositionDropDownSettings.dataSource;\n            dataSource[0].tooltip = messages.tableAlignLeft;\n            dataSource[1].tooltip = messages.tableAlignCenter;\n            dataSource[2].tooltip = messages.tableAlignRight;\n\n            this._initPositionDropDown(element, tablePositionDropDownSettings, \"position\", data, tableView);\n        },\n\n        _initTableAlignmentDropDown: function(element, data) {\n            var messages = this.options.messages;\n            var tableView = this.components.tableView;\n            var dataSource = tableAlignmentDropDownSettings.dataSource;\n            dataSource[0].tooltip = messages.alignLeft;\n            dataSource[1].tooltip = messages.alignCenter;\n            dataSource[2].tooltip = messages.alignRight;\n            dataSource[3].tooltip = messages.alignRemove;\n\n            this._initAlignmentDropDown(element, tableAlignmentDropDownSettings, \"alignment\", data, tableView);\n        },\n\n        _initCellAlignmentDropDown: function(element, data) {\n            var messages = this.options.messages;\n            var cellView = this.components.cellView;\n            var dataSource = cellAlignmentDropDownSettings.dataSource;\n            dataSource[0].tooltip = messages.alignLeftTop;\n            dataSource[1].tooltip = messages.alignCenterTop;\n            dataSource[2].tooltip = messages.alignRightTop;\n            dataSource[3].tooltip = messages.alignLeftMiddle;\n            dataSource[4].tooltip = messages.alignCenterMiddle;\n            dataSource[5].tooltip = messages.alignRightMiddle;\n            dataSource[6].tooltip = messages.alignLeftBottom;\n            dataSource[7].tooltip = messages.alignCenterBottom;\n            dataSource[8].tooltip = messages.alignRightBottom;\n            dataSource[9].tooltip = messages.alignRemove;\n\n            this._initAlignmentDropDown(element, cellAlignmentDropDownSettings, \"alignment\", data, cellView);\n        },\n\n        _initAccessibilityAlignmentDropDown: function(element, data) {\n            var messages = this.options.messages;\n            var accessibilityView = this.components.accessibilityView;\n            var dataSource = accessibilityAlignmentDropDownSettings.dataSource;\n            dataSource[0].tooltip = messages.alignLeftTop;\n            dataSource[1].tooltip = messages.alignCenterTop;\n            dataSource[2].tooltip = messages.alignRightTop;\n            dataSource[3].tooltip = messages.alignLeftBottom;\n            dataSource[4].tooltip = messages.alignCenterBottom;\n            dataSource[5].tooltip = messages.alignRightBottom;\n            dataSource[6].tooltip = messages.alignRemove;\n\n            this._initAlignmentDropDown(element, accessibilityAlignmentDropDownSettings, \"captionAlignment\", data, accessibilityView);\n        },\n        _initTextWrapDropDown: function(element, data) {\n            var messages = this.options.messages;\n            var name = \"wrapTextValue\";\n            data.wrapTextValue = data.wrapText ? \"wrap\" : \"nowrap\";\n\n            var cellView = this.components.cellView;\n            var dataSource = textWrapDropDownSettings.dataSource;\n            dataSource[0].tooltip = messages.wrapText;\n            dataSource[1].tooltip = messages.fitToCell;\n            var component = cellView[name] =\n                element.kendoDropDownList(textWrapDropDownSettings).data(\"kendoDropDownList\");\n\n            component.list.addClass('k-text-wrap');\n            this._setComponentValue(component, data, name);\n        },\n        _initPositionDropDown: function(element, settings, name, data, storage) {\n            var component = storage[name] =\n                element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n            component.list.addClass('k-position');\n            this._setComponentValue(component, data, name);\n        },\n        _initAlignmentDropDown: function(element, settings, name, data, storage) {\n            var component = storage[name] =\n                element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n            component.list.addClass('k-align');\n            this._setComponentValue(component, data, name);\n        },\n        _initAssociationDropDown: function(element, name, settings, data, storage) {\n            var component = storage[name] =\n                element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n            this._setComponentValue(component, data, name);\n        },\n        _setComponentValue: function(component, data, property) {\n            if (property in data) {\n                component.value(data[property]);\n            }\n        },\n\n        _initColorPicker: function(element, property, data, storage) {\n            var component = storage[property] =\n                element.kendoColorPicker({ buttons: false, clearButton: true }).data(\"kendoColorPicker\");\n\n            if (data[property]) {\n                component.value(data[property]);\n            }\n        },\n        _initInput: function(element, property, data, storage, settings) {\n            var component = storage[property] = element.kendoTextBox(settings || {}).data(\"kendoTextBox\");\n            if (property in data) {\n                component.value(data[property]);\n            }\n        },\n\n        _initCheckbox: function(element, property, data, storage, settings) {\n            var component = storage[property] = element.kendoCheckBox(settings || {}).data(\"kendoCheckBox\");\n            if (property in data) {\n                component.check(data[property]);\n            }\n        },\n\n        _initTextArea: function(element, property, data, storage, settings) {\n            var component = storage[property] = element.kendoTextArea(settings || {}).data(\"kendoTextArea\");\n            if (property in data) {\n                component.value(data[property]);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            that._destroyComponents(this.components);\n\n            delete that.components;\n        },\n        _destroyComponents: function(components) {\n            for (var widget in components) {\n                if (components[widget].destroy) {\n                    components[widget].destroy();\n                }\n                delete components[widget];\n            }\n        },\n\n        _dialogTemplate: function(messages, dialogTemplate) {\n            return kendo.template(dialogTemplate || tablePropertiesDialogTemplate)({ messages: messages });\n        },\n\n        _onPaddingTopChange: function(e) {\n            let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n                view = this.components[viewType],\n                independentCellPaddings = !view.independentCellPaddings.check(),\n                topCellPaddingValue = view.topCellPadding.value(),\n                leftCellPaddingNumeric = view.leftCellPadding,\n                bottomCellPaddingNumeric = view.bottomCellPadding,\n                rightCellPaddingNumeric = view.rightCellPadding;\n\n            if (independentCellPaddings) {\n                leftCellPaddingNumeric.value(topCellPaddingValue);\n                bottomCellPaddingNumeric.value(topCellPaddingValue);\n                rightCellPaddingNumeric.value(topCellPaddingValue);\n            }\n        },\n\n        _onPaddingCheckChange: function(e) {\n            let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n                messages = this.options.messages,\n                checked = e.sender.check(),\n                view = this.components[viewType],\n                topCellPadding = view.topCellPadding,\n                leftCellPaddingNumeric = view.leftCellPadding,\n                bottomCellPaddingNumeric = view.bottomCellPadding,\n                rightCellPaddingNumeric = view.rightCellPadding,\n                topCellPaddingValue = topCellPadding.value();\n\n            if (!checked) {\n                leftCellPaddingNumeric.value(topCellPaddingValue);\n                bottomCellPaddingNumeric.value(topCellPaddingValue);\n                rightCellPaddingNumeric.value(topCellPaddingValue);\n\n                leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n                bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n                rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n\n                topCellPadding.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.cellPadding);\n            } else {\n                leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n                bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n                rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n\n                topCellPadding.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.topPadding);\n            }\n        },\n\n        _onColumnsNumberChange: function(args) {\n            var that = this;\n            var accessibilityView = that.components.accessibilityView;\n            var headerColumnsNumeric = accessibilityView.headerColumns;\n            var currentNumberOfColumnsHeaders = headerColumnsNumeric.value();\n            var numberOfColumns = args.sender.value();\n\n            if (numberOfColumns < currentNumberOfColumnsHeaders) {\n                headerColumnsNumeric.value(numberOfColumns);\n            }\n\n            headerColumnsNumeric.max(numberOfColumns);\n        },\n\n        _onRowsNumberChange: function(args) {\n            var that = this;\n            var accessibilityView = that.components.accessibilityView;\n            var headerRowsNumeric = accessibilityView.headerRows;\n            var currentNumberOfRowHeaders = headerRowsNumeric.value();\n            var numberOfRows = args.sender.value();\n\n            if (numberOfRows < currentNumberOfRowHeaders) {\n                headerRowsNumeric.value(numberOfRows);\n            }\n\n            headerRowsNumeric.max(numberOfRows);\n        },\n\n        _createTablePropertiesForm: function(dialog, messages) {\n            var that = this;\n            var table = that.options.table;\n            var formElement = dialog.element.find(\"#k-table-properties\");\n            var components = that.components;\n            var tableView = components.tableView = {};\n            var tableProperties = table.tableProperties = table.tableProperties || {};\n            var form;\n\n            that._addUnit(units, tableProperties.widthUnit);\n            that._addUnit(units, tableProperties.heightUnit);\n            tableProperties.borderStyle = tableProperties.borderStyle || \"\";\n            form = formElement.kendoForm({\n                renderButtons: false,\n                layout: \"grid\",\n                grid: {\n                    cols: 4\n                },\n                items: [\n                    {\n                        colSpan: 2,\n                        field: \"k-editor-table-columns\",\n                        label: encode(messages.columns),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-columns\" />').appendTo(container),\n                                \"columns\",\n                                tableProperties,\n                                tableView,\n                                {\n                                    min: 1,\n                                    value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                    change: that._onColumnsNumberChange.bind(that)\n                                });\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-table-rows\",\n                        label: encode(messages.rows),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-rows\" />').appendTo(container),\n                                \"rows\",\n                                tableProperties,\n                                tableView,\n                                {\n                                    min: 1,\n                                    value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                    change: that._onRowsNumberChange.bind(that)\n                                });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-table-width\",\n                        label: encode(messages.width),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-table-width\" />').appendTo(container), \"width\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-table-width-type\",\n                        label: {\n                            encoded: false,\n                            text: '&nbsp;'\n                        },\n                        editor: function(container, options) {\n                            that._initDropDownList($(`<input id=\"k-editor-table-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                                \"widthUnit\",\n                                tableProperties,\n                                tableView,\n                                units);\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-table-height\",\n                        label: encode(messages.height),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-table-height\" />').appendTo(container), \"height\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-table-height-type\",\n                        label: {\n                            encoded: false,\n                            text: '&nbsp;'\n                        },\n                        editor: function(container, options) {\n                            that._initDropDownList($(`<input id=\"k-editor-table-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                                \"heightUnit\",\n                                tableProperties,\n                                tableView,\n                                units);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-table-position\",\n                        label: encode(messages.position),\n                        editor: function(container, options) {\n                            that._initTablePositionDropDown($('<input id=\"k-editor-table-position\" class=\"k-position\" />').appendTo(container), tableProperties);\n                        }\n                    },\n                    {\n                        colSpan: 2,\n                        field: \"k-editor-table-alignment\",\n                        label: encode(messages.alignment),\n                        editor: function(container, options) {\n                            that._initTableAlignmentDropDown($('<input id=\"k-editor-table-alignment\" class=\"k-align\" />').appendTo(container), tableProperties);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-table-cell-spacing\",\n                        label: encode(messages.cellSpacing),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-table-cell-spacing\" />').appendTo(container), \"cellSpacing\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        type: \"group\",\n                        label: \"Cell Paddings\",\n                        layout: \"grid\",\n                        colSpan: 4,\n                        grid: {\n                            cols: 4,\n                            gutter: 20\n                        },\n                        items: [\n                            {\n                                colSpan: \"full\",\n                                field: \"k-editor-padding-all-sides\",\n                                label: \"\",\n                                editor: function(container, options) {\n                                    that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", tableProperties, tableView,\n                                    {\n                                        checked: true,\n                                        label: encode(messages.independentCellPaddings),\n                                        change: that._onPaddingCheckChange.bind(that)\n                                    });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cell-padding-top\",\n                                label: encode(messages.topPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-top\" />').appendTo(container), \"topCellPadding\", tableProperties, tableView,\n                                    {\n                                        placeholder: encode(messages.auto),\n                                        change: that._onPaddingTopChange.bind(that)\n                                    });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cell-padding-right\",\n                                label: encode(messages.rightPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-right\" />').appendTo(container), \"rightCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cells-padding-bottom\",\n                                label: encode(messages.bottomPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cell-padding-left\",\n                                label: encode(messages.leftPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-left\" />').appendTo(container), \"leftCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                                }\n                            }\n                        ]\n                    }, {\n                        type: \"group\",\n                        label: \"Borders\",\n                        layout: \"grid\",\n                        colSpan: 4,\n                        grid: {\n                            cols: 4,\n                            gutter: 10\n                        },\n                        items: [{\n                            colSpan: \"full\",\n                            field: \"k-editor-table-bg\",\n                            label: encode(messages.tableBackground),\n                            editor: function(container, options) {\n                                that._initColorPicker($('<input id=\"k-editor-table-bg\" />').appendTo(container), \"bgColor\", tableProperties, tableView);\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-border-width\",\n                            label: encode(messages.borderWidth),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-border-width\" />').appendTo(container), \"borderWidth\", tableProperties, tableView);\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-border-color\",\n                            label: encode(messages.borderColor),\n                            editor: function(container, options) {\n                                that._initColorPicker($('<input id=\"k-editor-border-color\" />').appendTo(container), \"borderColor\", tableProperties, tableView);\n                            }\n                        },{\n                            colSpan: 2,\n                            field: \"k-editor-border-style\",\n                            label: encode(messages.borderStyle),\n                            editor: function(container, options) {\n                                that._initBorderStyleDropDown($('<input id=\"k-editor-border-style\" />').appendTo(container),\n                                    \"borderStyle\",\n                                    tableProperties,\n                                    tableView,\n                                    borderStyles);\n                            }\n                        },{\n                            colSpan: \"full\",\n                            field: \"k-editor-collapse-borders\",\n                            label: \"\",\n                            editor: function(container, options) {\n                                that._initCheckbox($('<input id=\"k-editor-collapse-borders\"/>').appendTo(container), \"collapseBorders\", tableProperties, tableView, { label: encode(messages.collapseBorders) });\n                            }\n                        }]\n                    }\n                ]\n            }).data(\"kendoForm\");\n            form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n            return form;\n        },\n\n        _createCellPropertiesForm: function(dialog, messages) {\n            var that = this;\n            var table = that.options.table;\n            var formElement = dialog.element.find(\"#k-cell-properties\");\n            var components = that.components = that.components || {};\n            var cellView = components.cellView = {};\n            var cellProperties = (table.selectedCells && table.selectedCells[0]) || { borderStyle: \"\", wrapText: true };\n            var form;\n\n            that._addUnit(units, cellProperties.widthUnit);\n            that._addUnit(units, cellProperties.heightUnit);\n            form = formElement.kendoForm({\n                renderButtons: false,\n                layout: \"grid\",\n                grid: {\n                    cols: 4\n                },\n                items: [\n                    {\n                        colSpan: \"full\",\n                        field: \"k-editor-selectAllCells\",\n                        label: \"\",\n                        editor: function(container, options) {\n                            that._initCheckbox($('<input id=\"k-editor-selectAllCells\" />').appendTo(container), \"selectAllCells\", table.tableProperties, cellView, { label: encode(messages.selectAllCells) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-cell-width\",\n                        label: encode(messages.width),\n                        hint: encode(messages.applyToColumn),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-cell-width\" />').appendTo(container), \"width\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-cell-width-type\",\n                        label: {\n                            encoded: false,\n                            text: '&nbsp;'\n                        },\n                        editor: function(container, options) {\n                            that._initDropDownList($(`<input id=\"k-editor-cell-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                                \"widthUnit\",\n                                cellProperties,\n                                cellView,\n                                units);\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-cell-height\",\n                        label: encode(messages.height),\n                        hint: encode(messages.applyToRow),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-cell-height\" />').appendTo(container), \"height\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-cell-height-type\",\n                        label: {\n                            encoded: false,\n                            text: '&nbsp;'\n                        },\n                        editor: function(container, options) {\n                            that._initDropDownList($(`<input id=\"k-editor-cell-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                                \"heightUnit\",\n                                cellProperties,\n                                cellView,\n                                units);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-cell-alignment\",\n                        label: encode(messages.alignment),\n                        editor: function(container, options) {\n                            that._initCellAlignmentDropDown($('<input id=\"k-editor-cell-alignment\" class=\"k-align\" />').appendTo(container), cellProperties);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-wrap-text\",\n                        label: \"Text control\",\n                        editor: function(container, options) {\n                            that._initTextWrapDropDown($('<input id=\"k-editor-wrap-text\" />').appendTo(container),\n                            cellProperties);\n                        }\n                    },{\n                        colSpan: \"full\",\n                        field: \"k-editor-cell-bg\",\n                        label: encode(messages.background),\n                        editor: function(container, options) {\n                            that._initColorPicker($('<input id=\"k-editor-cell-bg\" />').appendTo(container), \"bgColor\", cellProperties, cellView);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-table-cell-margin\",\n                        label: encode(messages.cellMargin),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-table-cell-margin\" />').appendTo(container), \"cellMargin\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        type: \"group\",\n                        label: \"Cell Paddings\",\n                        layout: \"grid\",\n                        colSpan: 4,\n                        grid: {\n                            cols: 4,\n                            gutter: 20\n                        },\n                        items: [\n                            {\n                                colSpan: \"full\",\n                                field: \"k-editor-padding-all-sides\",\n                                label: \"\",\n                                editor: function(container, options) {\n                                    that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", table.tableProperties, cellView,\n                                    {\n                                        checked: true,\n                                        label: encode(messages.independentCellPaddings),\n                                        change: that._onPaddingCheckChange.bind(that)\n                                    });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cells-padding-top\",\n                                label: encode(messages.topPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-top\" />').appendTo(container), \"topCellPadding\", cellProperties, cellView,\n                                    {\n                                        placeholder: encode(messages.auto),\n                                        change: that._onPaddingTopChange.bind(that)\n                                    });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cells-padding-right\",\n                                label: encode(messages.rightPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-right\" />').appendTo(container), \"rightCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cells-padding-bottom\",\n                                label: encode(messages.bottomPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cells-padding-left\",\n                                label: encode(messages.leftPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-left\" />').appendTo(container), \"leftCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                                }\n                            }\n                        ]\n                    },{\n                        type: \"group\",\n                        label: \"Borders\",\n                        layout: \"grid\",\n                        colSpan: 4,\n                        grid: {\n                            cols: 4,\n                            gutter: 10\n                        },\n                        items: [{\n                            colSpan: 1,\n                            field: \"k-editor-cell-border-width\",\n                            label: encode(messages.borderWidth),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-cell-border-width\" />').appendTo(container), \"borderWidth\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-cell-border-color\",\n                            label: encode(messages.borderColor),\n                            editor: function(container, options) {\n                                that._initColorPicker($('<input id=\"k-editor-cell-border-color\" />').appendTo(container), \"borderColor\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 2,\n                            field: \"k-editor-cell-border-style\",\n                            label: encode(messages.borderStyle),\n                            editor: function(container, options) {\n                                that._initBorderStyleDropDown($('<input id=\"k-editor-cell-border-style\" />').appendTo(container),\n                                    \"borderStyle\",\n                                    cellProperties,\n                                    cellView,\n                                    borderStyles);\n                            }\n                        }]\n                    },{\n                        colSpan: \"full\",\n                        field: \"k-editor-cell-id\",\n                        label: {\n                            text: encode(messages.id),\n                            optional: true\n                        },\n                        editor: function(container, options) {\n                            that._initInput($('<input id=\"k-editor-cell-id\" />').appendTo(container), \"id\", cellProperties, cellView);\n                        }\n                    },{\n                        colSpan: \"full\",\n                        field: \"k-editor-cell-css-class\",\n                        label: {\n                            text: encode(messages.cssClass),\n                            optional: true\n                        },\n                        editor: function(container, options) {\n                            that._initInput($('<input id=\"k-editor-cell-css-class\" />').appendTo(container), \"className\", cellProperties, cellView);\n                        }\n                    }\n                ]\n            }).data(\"kendoForm\");\n            form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n            return form;\n        },\n\n        _createAccessibilityPropertiesForm: function(dialog, messages) {\n            var that = this;\n            var table = that.options.table;\n            var formElement = dialog.element.find(\"#k-accessibility-properties\");\n            var components = that.components;\n            var accessibilityView = components.accessibilityView = {};\n            var tableProperties = table.tableProperties;\n            var form;\n\n            form = formElement.kendoForm({\n                renderButtons: false,\n                layout: \"grid\",\n                grid: {\n                    cols: 4\n                },\n                items: [\n                    {\n                        colSpan: \"full\",\n                        field: \"k-editor-id\",\n                        label: {\n                            text: encode(messages.id),\n                            optional: true\n                        },\n                        editor: function(container, options) {\n                            that._initInput($('<input id=\"k-editor-id\" />').appendTo(container), \"id\", tableProperties, accessibilityView);\n                        }\n                    },{\n                        colSpan: \"full\",\n                        field: \"k-editor-css-class\",\n                        label: {\n                            text: encode(messages.cssClass),\n                            optional: true\n                        },\n                        editor: function(container, options) {\n                            that._initInput($('<input id=\"k-editor-css-class\" />').appendTo(container), \"className\", tableProperties, accessibilityView);\n                        }\n                    },\n                    {\n                        layout: \"grid\",\n                        grid: {\n                            cols: 4,\n                            gutter: 16\n                        },\n                        colSpan: \"full\",\n                        type: \"group\",\n                        label: \"Accessibility\",\n                        items: [\n                            {\n                                colSpan: 2,\n                                field: \"k-editor-table-caption\",\n                                label: {\n                                    text: encode(messages.caption),\n                                    optional: true\n                                },\n                                editor: function(container, options) {\n                                    that._initInput($('<input id=\"k-editor-table-caption\" />').appendTo(container), \"captionContent\", tableProperties, accessibilityView);\n                                }\n                            },{\n                                colSpan: 2,\n                                field: \"k-editor-accessibility-alignment\",\n                                label: encode(messages.captionAlignment),\n                                editor: function(container, options) {\n                                    that._initAccessibilityAlignmentDropDown($('<input id=\"k-editor-accessibility-alignment\" />').appendTo(container), tableProperties);\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-header-rows\",\n                                label: encode(messages.headerRows),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-header-rows\" />').appendTo(container),\n                                    \"headerRows\",\n                                    tableProperties,\n                                    accessibilityView,\n                                    {\n                                        max: tableProperties.rows || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                    });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-header-columns\",\n                                label: encode(messages.headerColumns),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-header-columns\" />').appendTo(container),\n                                    \"headerColumns\",\n                                    tableProperties,\n                                    accessibilityView,\n                                    {\n                                        max: tableProperties.columns || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                    });\n                                }\n                            },{\n                                colSpan: 2,\n                                field: \"k-editor-cells-headers\",\n                                label: encode(messages.associateCellsWithHeaders),\n                                editor: function(container, options) {\n                                    var element = $(`<select id=\"k-editor-cells-headers\">\n                                    <option value=\"none\">${ messages.associateNone }</option>\n                                    <option value=\"scope\">${ messages.associateScope }</option>\n                                    <option value=\"ids\">${ messages.associateIds }</option>\n                                </select>`).appendTo(container);\n\n                                    that._initAssociationDropDown(element, \"cellsWithHeaders\", { valuePrimitive: true }, tableProperties, accessibilityView);\n                                }\n                            },{\n                                colSpan: \"full\",\n                                field: \"k-editor-accessibility-summary\",\n                                label: {\n                                    text: encode(messages.summary),\n                                    optional: true\n                                },\n                                editor: function(container, options) {\n                                    that._initTextArea($('<textarea id=\"k-editor-accessibility-summary\"></textarea>').appendTo(container), \"summary\", tableProperties, accessibilityView, {\n                                        rows: 5,\n                                        placeholder: messages.tableSummaryPlaceholder\n                                    });\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }).data(\"kendoForm\");\n\n            form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n            return form;\n        }\n    });\n\n    kendo.ui.editor.TableWizardDialog = TableWizardDialog;\n\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n            id: \"editor\",\n            name: \"Editor\",\n            category: \"web\",\n            description: \"Rich text editor component\",\n            depends: [ \"combobox\", \"dropdownlist\", \"window\", \"colorpicker\", \"toolbar\", \"icons\" ],\n            features: [ {\n                id: \"editor-imagebrowser\",\n                name: \"Image Browser\",\n                description: \"Support for uploading and inserting images\",\n                depends: [ \"imagebrowser\" ]\n            }, {\n                id: \"editor-resizable\",\n                name: \"Resize handle\",\n                description: \"Support for resizing the content area via a resize handle\",\n                depends: [ \"resizable\" ]\n            }, {\n                id: \"editor-tablewizard\",\n                name: \"Table wizard dialog\",\n                description: \"Support for table properties configuration\",\n                depends: [ \"tabstrip\", \"button\", \"numerictextbox\", \"textarea\" ]\n            }, {\n                id: \"editor-pdf-export\",\n                name: \"PDF export\",\n                description: \"Export Editor content as PDF\",\n                depends: [ \"pdf\", \"drawing\" ]\n            }]\n        };\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}
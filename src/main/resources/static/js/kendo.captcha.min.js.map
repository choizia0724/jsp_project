{"version":3,"sources":["raw-js/kendo.captcha.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendocaptcha","js","this","$","undefined$1","kendo","window","Widget","ui","extend","ajax","isFunction","NS","DOT","CLICK","CHANGE","REQUEST_START","REQUEST_END","ERROR","Captcha","init","element","options","that","fn","call","_captchaField","dataCaptchaField","_valueField","attr","_captchaIdField","dataCaptchaIdField","_wrapper","_idInput","_captchaImage","audioButton","resetButton","_buttons","captcha","captchaId","_resetHandler","validateOnBlur","on","_validationHandler","ev","_isValid","trigger","value","val","originalEvent","notify","events","name","handler","audioHandler","validationHandler","volumeControl","messages","reset","audio","imageAlt","success","destroy","textbox","off","_audioEnded","styles","wrapper","inputWrapper","imageWrapper","cssText","style","css","kendoTextBox","data","_inputWrapper","wrap","parent","prepend","captchaImage","find","append","_tabindex","_attachImageErrorHandler","one","type","nameAttr","idInput","ns","after","buttonsWrapper","_audioButton","_resetButton","button","iconButton","icon","resetIcon","iconClass","bind","audioIcon","_audioHandler","focusResetButton","deferred","Deferred","_resetCaptcha","_toggleSuccessMessage","_progress","_callHandler","done","fail","args","reject","promise","console","error","msg","_playAudio","_validate","_error","requestEnd","_requestEnd","url","cache","jqXHR","textStatus","errorThrown","id","resolve","_canPlayWav","audioElement","Audio","volume","_audioVolume","_showVolumeControl","play","_canPlayWithPlugin","_createEmbedElement","src","objectElement","document","createElement","setAttribute","_audioPlugin","width","height","position","top","left","volumeControlWrapper","volumeControlElm","_isRtl","kendoSlider","min","max","smallStep","largeStep","orientation","showButtons","tickPlacement","tooltip","enabled","change","activeElement","is","remove","pause","_canPlayAudio","canPlayType","replace","_getPlugin","testNavigatorPlugins","plugins","navigator","i","length","indexOf","testActiveXAvailability","objectName","ActiveXObject","e","toggle","idAttr","successMessage","removeAttr","htmlEncode","_toggleButtons","prop","toggleClass","loading","disabled","_toggleSkeleton","skeleton","before","support","isRtl","getCaptchaId","toJSON","obj","validate","isValid","enable","readonly","speak","plugin","buttonIcon","hidden","jQuery"],"mappings":"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","file":"kendo.captcha.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.slider.js'), require('kendo.textbox.js'), require('kendo.skeletoncontainer.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.slider', 'kendo.textbox', 'kendo.skeletoncontainer', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendocaptcha = global.kendocaptcha || {}, global.kendocaptcha.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n            id: \"captcha\",\n            name: \"Captcha\",\n            category: \"web\",\n            description: \"The Captcha widget displays captcha validation image and an input so that user case be validated against captcha value.\",\n            depends: [\"core\", \"slider\", \"textbox\", \"skeletoncontainer\", \"icons\"]\n        };\n\n        (function($, undefined$1) {\n            var kendo = window.kendo,\n                Widget = kendo.ui.Widget,\n                extend = $.extend,\n                ajax = $.ajax,\n                isFunction = kendo.isFunction,\n\n                STRING = \"string\",\n\n                DOT = \".\",\n                NS = DOT + \"kendoCaptcha\",\n\n                CLICK = \"click\",\n                BLUR = \"blur\",\n\n                CHANGE = \"change\",\n                REQUEST_START = \"requestStart\",\n                REQUEST_END = \"requestEnd\",\n                ERROR = \"error\";\n\n            var CaptchaStyles = {\n                wrapper: \"k-widget k-captcha\",\n                textbox: \"k-textbox\",\n                button: \"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\",\n                buttonIcon: \"k-button-icon\",\n                iconButton: \"k-icon-button\",\n                resetIcon: \"arrow-rotate-cw\",\n                audioIcon: \"volume-up\",\n                disabled: \"k-disabled\",\n                inputWrapper: \"k-captcha-input k-vstack\",\n                imageWrapper: \"k-captcha-image-wrap k-hstack\",\n                captchaImage: \"k-captcha-image\",\n                buttonsWrapper: \"k-captcha-image-controls k-vstack\",\n                volumeControlWrapper: \"k-captcha-volume-control k-vstack k-pos-absolute\",\n                hidden: \"k-hidden\",\n                success: \"k-captcha-validation-message k-text-success\",\n                loading: \"k-captcha-loading\"\n            };\n\n            var Captcha = Widget.extend({\n                init: function(element, options) {\n                    var that = this;\n\n                    Widget.fn.init.call(that, element, options);\n\n                    that._captchaField = that.options.dataCaptchaField;\n                    that._valueField = that.element.attr(\"name\") || \"captcha\";\n                    that._captchaIdField = that.options.dataCaptchaIdField;\n\n                    that._wrapper();\n                    that._idInput();\n                    that._captchaImage();\n\n                    if (that.options.audioButton || that.options.resetButton) {\n                        that._buttons();\n\n                    }\n\n                    if (!that.options.captcha || !that.options.captchaId) {\n                        that._resetHandler();\n                    }\n\n                    if (that.options.validateOnBlur) {\n                        that.element.on(BLUR + NS, function() {\n                            that._validationHandler();\n                        });\n                    }\n\n                    that.element.on(CHANGE + NS, function(ev) {\n                        delete that._isValid;\n                        that.trigger(CHANGE, { value: that.element.val(), originalEvent: ev });\n                    });\n\n                    kendo.notify(that);\n                },\n\n                events: [\n                    CHANGE,\n                    REQUEST_START,\n                    REQUEST_END,\n                    ERROR\n                ],\n\n                options: {\n                    name: \"Captcha\",\n                    dataCaptchaField: \"captcha\",\n                    dataCaptchaIdField: \"captchaId\",\n                    captchaId: \"\",\n                    captcha: null,\n                    handler: null,\n                    audioHandler: null,\n                    validationHandler: null,\n                    validateOnBlur: false,\n                    resetButton: true,\n                    audioButton: true,\n                    volumeControl: true,\n                    messages: {\n                        reset: \"Reset captcha\",\n                        audio: \"Speak captcha\",\n                        imageAlt: \"Type the Captcha code from the image\",\n                        success: \"Verification successful\"\n                    }\n                },\n\n                destroy: function() {\n                    var that = this;\n\n                    that.textbox.destroy();\n\n                    if (that.resetButton) {\n                        that.resetButton.off(NS);\n                    }\n\n                    if (that.audioButton) {\n                        that.audioButton.off(NS);\n                    }\n\n                    that.element.off(NS);\n\n                    // Just in case, destroy slider.\n                    that._audioEnded();\n\n                    Widget.fn.destroy.call(that);\n                },\n\n                _wrapper: function() {\n                    var that = this,\n                        styles = Captcha.styles,\n                        wrapper = \"<div class='\" + styles.wrapper + \"'><div class='\" + styles.inputWrapper + \"'></div></div>\",\n                        imageWrapper = \"<div class='\" + styles.imageWrapper + \"'></div>\",\n                        cssText = that.element[0].style.cssText;\n\n                    that.element.css(\"width\", \"auto\");\n                    that.element.css(\"height\", \"auto\");\n                    that.textbox = that.element.kendoTextBox().data(\"kendoTextBox\");\n                    that._inputWrapper = that.textbox.wrapper;\n                    that.wrapper = that._inputWrapper.wrap(wrapper).parent().parent();\n                    that.wrapper[0].style.cssText = cssText;\n                    that.imageWrapper = $(imageWrapper);\n                    that.wrapper.prepend(that.imageWrapper);\n                },\n\n                _captchaImage: function() {\n                    var that = this,\n                        options = that.options,\n                        messages = options.messages,\n                        styles = Captcha.styles;\n\n\n                    that.captchaImage = $(\"<div class=\\\"\" + styles.captchaImage + \"\\\">\" +\n                                            \"<img alt=\\\"\" + messages.imageAlt + \"\\\" src= \\\"\" + (options.captcha || \"\") + \"\\\"/>\" +\n                                        \"</div>\").find(\"img\");\n\n                    that.imageWrapper.append(that.captchaImage.parent());\n\n                    that._tabindex(that.captchaImage);\n\n                    that._attachImageErrorHandler();\n                },\n\n                _attachImageErrorHandler: function() {\n                    var that = this;\n\n                    that.captchaImage.off(\"error\");\n                    that.captchaImage.one(\"error\", function(ev) {\n                        that.trigger(ERROR, { type: \"image\", originalEvent: ev });\n                    });\n                },\n\n                _idInput: function() {\n                    var that = this,\n                        options = that.options,\n                        nameAttr = that._captchaIdField;\n\n                    that.idInput = $(\"<input type=\\\"hidden\\\" name=\\\"\" + nameAttr + \"\\\" value=\\\"\" + options.captchaId + \"\\\" data-\" + kendo.ns + \"stop=\\\"true\\\" />\");\n                    that._inputWrapper.after(that.idInput);\n                },\n\n                _buttons: function() {\n                    var that = this,\n                        styles = Captcha.styles;\n\n                    that.buttonsWrapper = $(\"<div class=\\\"\" + styles.buttonsWrapper + \"\\\"></div>\");\n                    that.imageWrapper.append(that.buttonsWrapper);\n\n                    if (that.options.audioButton) {\n                        that._audioButton();\n                    }\n\n                    if (that.options.resetButton) {\n                        that._resetButton();\n                    }\n                },\n\n                _resetButton: function() {\n                    var that = this,\n                        messages = that.options.messages,\n                        styles = Captcha.styles;\n\n                    that.resetButton = $(\"<button type=\\\"button\\\" title=\\\"\" + messages.reset + \"\\\" class=\\\"\" + styles.button + \" \" + styles.iconButton + \"\\\">\" +\n                                            kendo.ui.icon({ icon: styles.resetIcon, iconClass: \"k-button-icon\" }) +\n                                        \"</button>\");\n\n                    that.buttonsWrapper.append(that.resetButton);\n\n                    that.resetButton.on(CLICK + NS, that._resetHandler.bind(that, true));\n                },\n\n                _audioButton: function() {\n                    var that = this,\n                        messages = that.options.messages,\n                        styles = Captcha.styles;\n\n                    that.audioButton = $(\"<button type=\\\"button\\\" title=\\\"\" + messages.audio + \"\\\" class=\\\"\" + styles.button + \" \" + styles.iconButton + \"\\\">\" +\n                                            kendo.ui.icon({ icon: styles.audioIcon, iconClass: \"k-button-icon\" }) +\n                                        \"</button>\");\n\n                    that.buttonsWrapper.append(that.audioButton);\n\n                    that.audioButton.on(CLICK + NS, that._audioHandler.bind(that));\n                },\n\n                _resetHandler: function(focusResetButton) {\n                    var that = this,\n                        handler = that.options.handler,\n                        deferred = $.Deferred(),\n                        success = that._resetCaptcha.bind(that, deferred);\n\n                    delete that._isValid;\n                    that._toggleSuccessMessage(false);\n                    that._audioEnded();\n                    that._progress(true);\n\n                    if (!handler) {\n                        window.console.error(\"Captcha's handler option is not defined!\");\n                        deferred.reject({ msg: \"Captcha's handler option is not defined!\", error: \"handler_not_defined\" });\n                        that._progress(false);\n                        return deferred.promise();\n                    }\n\n                    that._callHandler(\"reset\", handler, success)\n                        .done(function() {\n                            if (focusResetButton) {\n                                that.resetButton.trigger(\"focus\");\n                            }\n                        })\n                        .fail(function(args) {\n                            that._progress(false);\n                            deferred.reject(args);\n                        });\n                    return deferred.promise();\n                },\n\n                _audioHandler: function() {\n                    var that = this,\n                        handler = that.options.audioHandler,\n                        deferred = $.Deferred(),\n                        success = that._playAudio.bind(that, deferred),\n                        data = {};\n\n                    data[that._captchaIdField] = that.idInput.val();\n\n                    if (!handler) {\n                        window.console.error(\"Captcha's audioHandler option is not defined!\");\n                        deferred.reject({ msg: \"Captcha's audioHandler option is not defined!\", error: \"handler_not_defined\" });\n                        return deferred.promise();\n                    }\n\n                    that._callHandler(\"audio\", handler, success, data).fail(deferred.reject);\n                    return deferred.promise();\n                },\n\n                _validationHandler: function() {\n                    var that = this,\n                        handler = that.options.validationHandler,\n                        deferred = $.Deferred(),\n                        success = that._validate.bind(that, deferred),\n                        data = {};\n\n                    delete that._isValid;\n\n                    data[that._captchaIdField] = that.idInput.val();\n                    data[that._valueField] = that.element.val();\n\n                    if (!handler) {\n                        window.console.error(\"Captcha's validationHandler option is not defined!\");\n                        deferred.reject({ msg: \"Captcha's validationHandler option is not defined!\", error: \"handler_not_defined\" });\n                        return deferred.promise();\n                    }\n\n                    that._callHandler(\"validation\", handler, success, data).fail(deferred.reject);\n                    return deferred.promise();\n                },\n\n                _callHandler: function(type, handler, success, data) {\n                    var that = this,\n                        error = that._error.bind(that, type),\n                        requestEnd = that._requestEnd.bind(that, type),\n                        args;\n\n                    if (isFunction(handler)) {\n                        handler({ success: success, data: data });\n                        return $.Deferred().promise();\n                    } else {\n                        args = typeof handler === STRING ? { url: handler, cache: false } : extend({}, handler);\n                        args.success = success;\n                        args.data = extend({}, data, args.data);\n\n                        if (!that.trigger(REQUEST_START, { type: type, data: data })) {\n                            return ajax(args).done(requestEnd).fail(error);\n                        }\n                    }\n                },\n\n                _requestEnd: function(type, data) {\n                    var that = this;\n                    that.trigger(REQUEST_END, { type: type, data: data });\n                },\n\n                _error: function(type, jqXHR, textStatus, errorThrown) {\n                    var that = this;\n                    that.trigger(ERROR, { type: type, jqXHR: jqXHR, textStatus: textStatus, errorThrown: errorThrown });\n                },\n\n                _resetCaptcha: function(deferred, data) {\n                    var that = this,\n                        id = data[that._captchaIdField],\n                        captcha = data[that._captchaField];\n\n                    that.idInput.val(id);\n                    that.captchaImage.attr(\"src\", captcha || \"\");\n\n                    that.captchaImage.off(\"load\");\n                    that.captchaImage.one(\"load\", function() {\n                        that._progress(false);\n                    });\n\n                    that._attachImageErrorHandler();\n\n                    deferred.resolve(data);\n                },\n\n                _playAudio: function(deferred, data) {\n                    var that = this;\n\n                    if (that._canPlayWav()) {\n                        if (that.audioElement) {\n                            return;\n                        }\n\n                        that.audioElement = new Audio(data);\n                        that.audioElement.volume = that._audioVolume || that.audioElement.volume;\n\n                        if (that.options.volumeControl) {\n                            $(that.audioElement).on(\"loadeddata\" + NS, function() {\n                                that._showVolumeControl(that.audioElement.volume);\n                            });\n                        }\n\n                        $(that.audioElement).on(\"ended\" + NS + \" error\" + NS, that._audioEnded.bind(that, deferred));\n\n                        that.audioElement.play();\n                    } else if (that._canPlayWithPlugin()) {\n                        if (that.audioElement) {\n                            that.audioElement.play();\n                            return;\n                        }\n\n                        that.audioElement = that._createEmbedElement(data);\n                        that.wrapper.append(that.audioElement);\n                    }\n                },\n\n                _createEmbedElement: function(src) {\n                    var that = this,\n                        objectElement = document.createElement(\"embed\");\n\n                    objectElement.setAttribute(\"src\", src);\n                    objectElement.setAttribute(\"autostart\", \"true\");\n                    objectElement.setAttribute(\"pluginspage\", that._audioPlugin);\n                    objectElement.setAttribute(\"enablejavascript\", \"true\");\n                    objectElement.setAttribute(\"type\", \"audio/wav\");\n                    objectElement.setAttribute(\"tabIndex\", \"-1\");\n\n                    objectElement.style.width = \"0px\";\n                    objectElement.style.height = \"0px\";\n                    objectElement.style.position = \"absolute\";\n                    objectElement.style.top = 0;\n                    objectElement.style.left = 0;\n\n                    return objectElement;\n                },\n\n                _showVolumeControl: function(volume) {\n                    var that = this,\n                        styles = Captcha.styles,\n                        volumeControlWrapper = $(\"<div class=\\\"\" + styles.volumeControlWrapper + \"\\\"></div>\");\n\n                    if (that.volumeControl) {\n                        return;\n                    }\n\n                    that.volumeControlElm = $(\"<input />\");\n                    that.volumeControlWrapper = volumeControlWrapper.append(that.volumeControlElm);\n                    that.imageWrapper.append(volumeControlWrapper);\n                    that.volumeControlWrapper.css(that._isRtl() ? \"right\" : \"left\", that.wrapper.width());\n\n                    that.volumeControl = that.volumeControlElm.kendoSlider({\n                        min: 0,\n                        max: 1,\n                        smallStep: 0.1,\n                        largeStep: 0.5,\n                        orientation: \"vertical\",\n                        showButtons: false,\n                        tickPlacement: \"none\",\n                        value: volume,\n                        tooltip: {\n                            enabled: false\n                        },\n                        change: function(ev) {\n                            that._audioVolume = that.audioElement.volume = ev.value;\n                        }\n                    }).data(\"kendoSlider\");\n                },\n\n                _audioEnded: function(deferred) {\n                    var that = this;\n\n                    if ($(document.activeElement).is(\"a.k-draghandle\")) {\n                        that.audioButton.trigger(\"focus\");\n                    }\n\n                    if (that.volumeControl) {\n                        that.volumeControl.destroy();\n                        that.volumeControl.wrapper.remove();\n                        delete that.volumeControl;\n                        that.volumeControlElm.remove();\n                        that.volumeControlWrapper.remove();\n                        delete that.volumeControlElm;\n                        delete that.volumeControlWrapper;\n                    }\n\n                    if (that.audioElement) {\n                        that.audioElement.pause();\n                    }\n\n                    $(that.audioElement).off(NS);\n                    $(that.audioElement).remove();\n                    delete that.audioElement;\n\n                    if (deferred && deferred.resolve) {\n                        deferred.resolve();\n                    }\n                },\n\n                _canPlayWav: function() {\n                    var that = this,\n                        audio;\n\n                    if (that._canPlayAudio) {\n                        return that._canPlayAudio;\n                    }\n\n                    audio = new Audio();\n                    that._canPlayAudio = audio.canPlayType(\"audio/wav\").replace(/no/gi, \"\") !== \"\";\n\n                    return that._canPlayAudio;\n                },\n\n                _canPlayWithPlugin: function() {\n                    var that = this;\n\n                    if (that._audioPlugin) {\n                        return that._audioPlugin;\n                    }\n\n                    that._audioPlugin = that._getPlugin();\n                    return that._audioPlugin;\n                },\n\n                _getPlugin: function() {\n                    var testNavigatorPlugins = function(name) {\n                        var plugins = navigator.plugins;\n                        for (var i = 0; i < plugins.length; i++) {\n\n                            var pluginName = plugins[i].name;\n\n                            if (pluginName.indexOf(name) !== -1) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    };\n\n                    var testActiveXAvailability = function(objectName) {\n                        try {\n                            var control = new window.ActiveXObject(objectName);\n                            return !!control;\n                        } catch (e) {\n                            return false;\n                        }\n                    };\n\n                    if (testActiveXAvailability('QuickTime.QuickTime') ||\n                        testActiveXAvailability('QuickTimeCheckObject.QuickTimeCheck') ||\n                        testNavigatorPlugins(\"QuickTime Plug-in\")) {\n                            return \"http://www.apple.com/quicktime/download/\";\n                    }\n\n                    if (testActiveXAvailability('WMPlayer.OCX') || testNavigatorPlugins(\"Windows Media\")) {\n                        return \"http://www.microsoft.com/Windows/MediaPlayer\";\n                    }\n                },\n\n                _validate: function(deferred, data) {\n                    var that = this;\n                    that._isValid = data;\n                    that._toggleSuccessMessage(that._isValid);\n                    deferred.resolve(data);\n                },\n\n                _toggleSuccessMessage: function(toggle) {\n                    var that = this,\n                        idAttr = (that.element.attr(\"id\") || that.element.attr(\"name\")) + \"-success\",\n                        messages = that.options.messages;\n\n                    $(that.successMessage).remove();\n                    that.element.removeAttr(\"aria-describedby\");\n\n                    if (toggle) {\n                        that.successMessage = $(\"<span id=\\\"\" + idAttr + \"\\\" class=\\\"\" + Captcha.styles.success + \"\\\">\" + kendo.htmlEncode(messages.success) + \"</span>\");\n                        that._inputWrapper.after(that.successMessage);\n                        that.element.attr(\"aria-describedby\", idAttr);\n                    }\n                },\n\n                _toggleButtons: function(toggle) {\n                    var that = this;\n\n                    if (that.resetButton) {\n                        that.resetButton.prop(\"disabled\", !toggle);\n                    }\n\n                    if (that.audioButton) {\n                        that.audioButton.prop(\"disabled\", !toggle);\n                    }\n                },\n\n                _progress: function(toggle) {\n                    var that = this;\n\n                    that.wrapper.toggleClass(Captcha.styles.loading, toggle);\n                    that._inputWrapper.toggleClass(Captcha.styles.disabled, toggle);\n                    that._toggleButtons(!toggle);\n                    that._toggleSkeleton(toggle);\n                },\n\n                _toggleSkeleton: function(toggle) {\n                    var that = this;\n\n                    if (that.skeleton) {\n                        that.skeleton.remove();\n                    }\n\n                    if (toggle) {\n                        that.skeleton = $(\"<span class='k-skeleton k-skeleton-rect k-skeleton-pulse'></span>\").css({\n                            width: \"100%\",\n                            height: \"100%\"\n                        });\n                        that.captchaImage.before(that.skeleton);\n                    }\n                },\n\n                _isRtl: function() {\n                    return kendo.support.isRtl(this.wrapper);\n                },\n\n                value: function() {\n                    return this.element.val();\n                },\n\n                getCaptchaId: function() {\n                    return this.idInput.val();\n                },\n\n                toJSON: function() {\n                    var that = this,\n                        obj = {};\n\n                    obj[that._valueField] = that.value();\n                    obj[that._captchaIdField] = that.getCaptchaId();\n\n                    return obj;\n                },\n\n                validate: function() {\n                    return this._validationHandler();\n                },\n\n                isValid: function() {\n                    return this._isValid;\n                },\n\n                enable: function(toggle) {\n                    var that = this;\n\n                    toggle = toggle !== false;\n\n                    that._toggleButtons(toggle);\n\n                    that.textbox.enable(toggle);\n\n                    if (toggle) {\n                        that.captchaImage.removeAttr(\"tabIndex\");\n                        that._tabindex(that.captchaImage);\n                    } else {\n                        that.captchaImage.attr(\"tabIndex\", \"-1\");\n                    }\n\n                    that.captchaImage.toggleClass(Captcha.styles.disabled, !toggle);\n                    that.wrapper.toggleClass(Captcha.styles.disabled, !toggle);\n                },\n\n                readonly: function(toggle) {\n                    var that = this;\n\n                    toggle = toggle !== false;\n\n                    if (that.resetButton) {\n                        that.resetButton.prop(\"disabled\", toggle);\n                    }\n\n                    that.textbox.readonly(toggle);\n                },\n\n                speak: function() {\n                    return this._audioHandler();\n                },\n\n                reset: function() {\n                    return this._resetHandler();\n                }\n            });\n\n            kendo.ui.plugin(Captcha);\n\n            extend(true, Captcha, { styles: CaptchaStyles });\n\n        })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}